#1
char Aclass(3,24)
Adymosim
1.4
Modelica experiment file


#    Experiment parameters
double experiment(7,1)
       0                   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
    3600                   # StopTime     Time at which integration stops
      10                   # Increment    Communication step size, if > 0
       0                   # nInterval    Number of communication intervals, if > 0
 1.0000000000000000E-004   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
       0                   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
       8                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       1                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
 2.0000000000000000E-014   # teps     Bound to check, if 2 equal time instants
 1.0000000000000000E-010   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
 9.9999999999999995E-007   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 0                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 1                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 1                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(2144,81)
system.p_ambient
system.T_ambient
system.g
system.allowFlowReversal
system.energyDynamics
system.massDynamics
system.substanceDynamics
system.traceDynamics
system.momentumDynamics
system.m_flow_start
system.p_start
system.T_start
system.use_eps_Re
system.m_flow_nominal
system.eps_m_flow
system.dp_small
system.m_flow_small
IntakeAirSource.nPorts
IntakeAirSource.medium.d
IntakeAirSource.medium.X[2]
IntakeAirSource.medium.u
IntakeAirSource.medium.R
IntakeAirSource.medium.MM
IntakeAirSource.medium.preferredMediumStates
IntakeAirSource.medium.standardOrderComponents
IntakeAirSource.medium.T_degC
IntakeAirSource.medium.p_bar
IntakeAirSource.medium.MMX[1]
IntakeAirSource.medium.MMX[2]
IntakeAirSource.medium.X_air
IntakeAirSource.medium.dT
IntakeAirSource.ports[1].m_flow
IntakeAirSource.ports[1].p
IntakeAirSource.ports[1].h_outflow
IntakeAirSource.ports[1].Xi_outflow[1]
IntakeAirSource.flowDirection
IntakeAirSource.use_m_flow_in
IntakeAirSource.use_T_in
IntakeAirSource.use_X_in
IntakeAirSource.use_C_in
IntakeAirSource.m_flow
IntakeAirSource.T
IntakeAirSource.X[1]
IntakeAirSource.X[2]
IntakeAirSource.T_in_internal
IntakeAirSource.X_in_internal[1]
IntakeAirSource.X_in_internal[2]
IntakeAirSink.nPorts
IntakeAirSink.medium.p
IntakeAirSink.medium.Xi[1]
IntakeAirSink.medium.h
IntakeAirSink.medium.d
IntakeAirSink.medium.T
IntakeAirSink.medium.X[1]
IntakeAirSink.medium.X[2]
IntakeAirSink.medium.u
IntakeAirSink.medium.R
IntakeAirSink.medium.MM
IntakeAirSink.medium.state.p
IntakeAirSink.medium.state.T
IntakeAirSink.medium.state.X[1]
IntakeAirSink.medium.state.X[2]
IntakeAirSink.medium.preferredMediumStates
IntakeAirSink.medium.standardOrderComponents
IntakeAirSink.medium.T_degC
IntakeAirSink.medium.p_bar
IntakeAirSink.medium.MMX[1]
IntakeAirSink.medium.MMX[2]
IntakeAirSink.medium.X_steam
IntakeAirSink.medium.X_air
IntakeAirSink.medium.dT
IntakeAirSink.ports[1].p
IntakeAirSink.ports[1].h_outflow
IntakeAirSink.ports[1].Xi_outflow[1]
IntakeAirSink.flowDirection
IntakeAirSink.use_p_in
IntakeAirSink.use_T_in
IntakeAirSink.use_X_in
IntakeAirSink.use_C_in
IntakeAirSink.p
IntakeAirSink.T
IntakeAirSink.X[1]
IntakeAirSink.X[2]
IntakeAirSink.p_in_internal
IntakeAirSink.T_in_internal
IntakeAirSink.X_in_internal[1]
IntakeAirSink.X_in_internal[2]
toKelvin.Celsius
VolumeToMassFlowIntake.u1
Pressure.k
Density.k
decisionVariables.nout
decisionVariables.y[1]
decisionVariables.tableOnFile
decisionVariables.verboseRead
decisionVariables.columns[1]
decisionVariables.smoothness
decisionVariables.extrapolation
decisionVariables.offset[1]
decisionVariables.startTime
decisionVariables.timeScale
decisionVariables.t_min
decisionVariables.t_max
decisionVariables.t_minScaled
decisionVariables.t_maxScaled
decisionVariables.p_offset[1]
decisionVariables.tableID.id
decisionVariables.nextTimeEvent
decisionVariables.nextTimeEventScaled
decisionVariables.tableOnFileRead
decisionVariables.DBL_MAX
decisionVariables.timeScaled
MeasuredData.nout
MeasuredData.y[1]
MeasuredData.y[2]
MeasuredData.tableOnFile
MeasuredData.verboseRead
MeasuredData.columns[1]
MeasuredData.columns[2]
MeasuredData.smoothness
MeasuredData.extrapolation
MeasuredData.offset[1]
MeasuredData.startTime
MeasuredData.timeScale
MeasuredData.t_min
MeasuredData.t_max
MeasuredData.t_minScaled
MeasuredData.t_maxScaled
MeasuredData.p_offset[1]
MeasuredData.p_offset[2]
MeasuredData.tableID.id
MeasuredData.nextTimeEvent
MeasuredData.nextTimeEventScaled
MeasuredData.tableOnFileRead
MeasuredData.DBL_MAX
MeasuredData.timeScaled
volumeFlow.nout
volumeFlow.y[2]
volumeFlow.tableOnFile
volumeFlow.table[1, 1]
volumeFlow.table[1, 2]
volumeFlow.table[1, 3]
volumeFlow.verboseRead
volumeFlow.columns[1]
volumeFlow.columns[2]
volumeFlow.smoothness
volumeFlow.extrapolation
volumeFlow.offset[1]
volumeFlow.startTime
volumeFlow.timeScale
volumeFlow.t_min
volumeFlow.t_max
volumeFlow.t_minScaled
volumeFlow.t_maxScaled
volumeFlow.p_offset[1]
volumeFlow.p_offset[2]
volumeFlow.tableID.id
volumeFlow.nextTimeEvent
volumeFlow.nextTimeEventScaled
volumeFlow.tableOnFileRead
volumeFlow.DBL_MAX
volumeFlow.timeScaled
variation.nout
variation.y[2]
variation.tableOnFile
variation.verboseRead
variation.columns[1]
variation.columns[2]
variation.smoothness
variation.extrapolation
variation.offset[1]
variation.startTime
variation.timeScale
variation.t_min
variation.t_max
variation.t_minScaled
variation.t_maxScaled
variation.p_offset[1]
variation.p_offset[2]
variation.tableID.id
variation.nextTimeEvent
variation.nextTimeEventScaled
variation.tableOnFileRead
variation.DBL_MAX
variation.timeScaled
toKelvin3.Kelvin
x_pTphi1.use_p_in
x_pTphi1.p
x_pTphi1.phi
x_pTphi1.X[1]
x_pTphi1.X[2]
x_pTphi1.pSat
x_pTphi1.i_w
x_pTphi1.i_nw
x_pTphi1.found
x_pTphi2.use_p_in
x_pTphi2.p
x_pTphi2.T
x_pTphi2.phi
x_pTphi2.X[1]
x_pTphi2.X[2]
x_pTphi2.pSat
x_pTphi2.i_w
x_pTphi2.i_nw
x_pTphi2.found
toDryAir.XiDry
supplyAirHumidity.port.m_flow
supplyAirHumidity.port.p
supplyAirHumidity.port.h_outflow
supplyAirHumidity.port.Xi_outflow[1]
supplyAirHumidity.T
supplyAirHumidity.Xi[1]
supplyAirTemperature.port.m_flow
supplyAirTemperature.port.p
supplyAirTemperature.port.h_outflow
supplyAirTemperature.port.Xi_outflow[1]
fromKelvin.Celsius
convertPercent.k
defaultPressure
specificCost
senTemp1.port.m_flow
senTemp1.port.h_outflow
senTemp1.T
returnTemperature
hex.allowFlowReversal1
hex.allowFlowReversal2
hex.port_a1.m_flow
hex.port_a1.p
hex.port_a1.h_outflow
hex.port_b1.h_outflow
hex.port_a2.h_outflow
hex.port_a2.Xi_outflow[1]
hex.port_b2.p
hex.port_b2.h_outflow
hex.port_b2.Xi_outflow[1]
hex.m1_flow_nominal
hex.m2_flow_nominal
hex.m1_flow_small
hex.m2_flow_small
hex.show_T
hex.dp1
hex.dp2
hex.state_a1_inflow.T
hex.state_b1_inflow.T
hex.state_a2_inflow.T
hex.state_a2_inflow.X[2]
hex.state_b2_inflow.p
hex.state_b2_inflow.T
hex.state_b2_inflow.X[1]
hex.state_b2_inflow.X[2]
hex.computeFlowResistance1
hex.from_dp1
hex.dp1_nominal
hex.linearizeFlowResistance1
hex.deltaM1
hex.computeFlowResistance2
hex.from_dp2
hex.dp2_nominal
hex.linearizeFlowResistance2
hex.deltaM2
hex.UA_nominal
hex.r_nominal
hex.nEle
hex.energyDynamics
hex.tau1
hex.tau2
hex.tau_m
hex.waterSideFlowDependent
hex.airSideFlowDependent
hex.waterSideTemperatureDependent
hex.airSideTemperatureDependent
hex.GDif
hex.Q1_flow
hex.Q2_flow
hex.T1[1]
hex.T1[2]
hex.T1[3]
hex.T1[4]
hex.T2[1]
hex.T2[2]
hex.T2[3]
hex.T2[4]
hex.hA.UA_nominal
hex.hA.m_flow_nominal_w
hex.hA.m_flow_nominal_a
hex.hA.T_1
hex.hA.T_2
hex.hA.hA_1
hex.hA.hA_2
hex.hA.r_nominal
hex.hA.hA_nominal_w
hex.hA.hA_nominal_a
hex.hA.n_w
hex.hA.n_a
hex.hA.T0_w
hex.hA.T0_a
hex.hA.waterSideFlowDependent
hex.hA.airSideFlowDependent
hex.hA.waterSideTemperatureDependent
hex.hA.airSideTemperatureDependent
hex.hA.x_a
hex.hA.x_w
hex.hA.s_w
hex.hA.fm_w
hex.hA.fm_a
hex.use_temSen_1
hex.use_temSen_2
hex.temSen_1.allowFlowReversal
hex.temSen_1.m_flow_nominal
hex.temSen_1.m_flow_small
_GlobalScope.Modelica.Media.Interfaces.PartialPureSubstance.X_default[1]
hex.temSen_1.tau
hex.temSen_1.initType
hex.temSen_1.k
hex.temSen_1.dynamic
hex.temSen_1.mNor_flow
hex.temSen_1.tauInv
hex.temSen_1.T
hex.temSen_1.T_start
hex.temSen_1.transferHeat
hex.temSen_1.TAmb
hex.temSen_1.tauHeaTra
hex.temSen_1.tauHeaTraInv
hex.temSen_1.ratTau
hex.temSen_1.T_a_inflow
hex.temSen_1.T_b_inflow
hex.masFloSen_1.allowFlowReversal
hex.masFloSen_1.m_flow_nominal
hex.masFloSen_1.m_flow_small
_GlobalScope.Modelica.Media.Interfaces.PartialPureSubstance.X_default_Unique24[1]
hex.temSen_2.allowFlowReversal
hex.temSen_2.m_flow_nominal
hex.temSen_2.m_flow_small
_GlobalScope.Modelica.Media.Interfaces.PartialMixtureMedium.X_default[1]
_GlobalScope.Modelica.Media.Interfaces.PartialMixtureMedium.X_default[2]
hex.temSen_2.tau
hex.temSen_2.initType
hex.temSen_2.k
hex.temSen_2.dynamic
hex.temSen_2.mNor_flow
hex.temSen_2.tauInv
hex.temSen_2.T
hex.temSen_2.T_start
hex.temSen_2.transferHeat
hex.temSen_2.TAmb
hex.temSen_2.tauHeaTra
hex.temSen_2.tauHeaTraInv
hex.temSen_2.ratTau
hex.temSen_2.T_a_inflow
hex.temSen_2.T_b_inflow
hex.masFloSen_2.allowFlowReversal
hex.masFloSen_2.m_flow_nominal
hex.masFloSen_2.m_flow_small
_GlobalScope.Modelica.Media.Interfaces.PartialMixtureMedium.X_default_Unique26[1]
_GlobalScope.Modelica.Media.Interfaces.PartialMixtureMedium.X_default_Unique26[2]
hex.gai_1.k
hex.gai_1.y
hex.gai_2.k
hex.gai_2.y
hex.ele[1].allowFlowReversal1
hex.ele[1].allowFlowReversal2
hex.ele[1].port_a2.p
hex.ele[1].port_b2.p
hex.ele[1].m1_flow_nominal
hex.ele[1].m2_flow_nominal
hex.ele[1].m1_flow_small
hex.ele[1].m2_flow_small
hex.ele[1].show_T
hex.ele[1].dp1
hex.ele[1].dp2
hex.ele[1].state_a1_inflow.T
hex.ele[1].state_b1_inflow.T
hex.ele[1].state_a2_inflow.p
hex.ele[1].state_a2_inflow.T
hex.ele[1].state_a2_inflow.X[1]
hex.ele[1].state_a2_inflow.X[2]
hex.ele[1].state_b2_inflow.p
hex.ele[1].state_b2_inflow.T
hex.ele[1].state_b2_inflow.X[1]
hex.ele[1].state_b2_inflow.X[2]
hex.ele[1].computeFlowResistance1
hex.ele[1].from_dp1
hex.ele[1].dp1_nominal
hex.ele[1].linearizeFlowResistance1
hex.ele[1].deltaM1
hex.ele[1].computeFlowResistance2
hex.ele[1].from_dp2
hex.ele[1].dp2_nominal
hex.ele[1].linearizeFlowResistance2
hex.ele[1].deltaM2
hex.ele[1].tau1
hex.ele[1].tau2
hex.ele[1].homotopyInitialization
hex.ele[1].energyDynamics
hex.ele[1].massDynamics
hex.ele[1].p1_start
hex.ele[1].T1_start
hex.ele[1].X1_start[1]
hex.ele[1].p2_start
hex.ele[1].T2_start
hex.ele[1].X2_start[1]
hex.ele[1].X2_start[2]
hex.ele[1].Q1_flow
hex.ele[1].Q2_flow
hex.ele[1].vol1.energyDynamics
hex.ele[1].vol1.massDynamics
hex.ele[1].vol1.substanceDynamics
hex.ele[1].vol1.traceDynamics
hex.ele[1].vol1.p_start
hex.ele[1].vol1.T_start
hex.ele[1].vol1.X_start[1]
hex.ele[1].vol1.mSenFac
hex.ele[1].vol1.initialize_p
hex.ele[1].vol1.prescribedHeatFlowRate
hex.ele[1].vol1.simplify_mWat_flow
hex.ele[1].vol1.m_flow_nominal
hex.ele[1].vol1.nPorts
hex.ele[1].vol1.m_flow_small
hex.ele[1].vol1.allowFlowReversal
hex.ele[1].vol1.V
hex.ele[1].vol1.m
hex.ele[1].vol1.rho_start
hex.ele[1].vol1.state_default.p
hex.ele[1].vol1.state_default.T
hex.ele[1].vol1.rho_default
hex.ele[1].vol1.state_start.p
hex.ele[1].vol1.state_start.T
hex.ele[1].vol1.useSteadyStateTwoPort
hex.ele[1].vol2.energyDynamics
hex.ele[1].vol2.massDynamics
hex.ele[1].vol2.substanceDynamics
hex.ele[1].vol2.traceDynamics
hex.ele[1].vol2.p_start
hex.ele[1].vol2.T_start
hex.ele[1].vol2.X_start[1]
hex.ele[1].vol2.X_start[2]
hex.ele[1].vol2.mSenFac
hex.ele[1].vol2.initialize_p
hex.ele[1].vol2.prescribedHeatFlowRate
hex.ele[1].vol2.simplify_mWat_flow
hex.ele[1].vol2.m_flow_nominal
hex.ele[1].vol2.nPorts
hex.ele[1].vol2.m_flow_small
hex.ele[1].vol2.allowFlowReversal
hex.ele[1].vol2.V
hex.ele[1].vol2.ports[1].p
hex.ele[1].vol2.ports[2].p
hex.ele[1].vol2.p
hex.ele[1].vol2.m
hex.ele[1].vol2.rho_start
hex.ele[1].vol2.state_default.p
hex.ele[1].vol2.state_default.T
hex.ele[1].vol2.state_default.X[1]
hex.ele[1].vol2.state_default.X[2]
hex.ele[1].vol2.rho_default
hex.ele[1].vol2.state_start.p
hex.ele[1].vol2.state_start.T
hex.ele[1].vol2.state_start.X[1]
hex.ele[1].vol2.state_start.X[2]
hex.ele[1].vol2.useSteadyStateTwoPort
hex.ele[1].vol2.mWat_flow
hex.ele[1].vol2.s[1]
hex.ele[1].preDro1.allowFlowReversal
hex.ele[1].preDro1.m_flow_nominal
hex.ele[1].preDro1.m_flow_small
hex.ele[1].preDro1.show_T
hex.ele[1].preDro1.dp
hex.ele[1].preDro1._m_flow_start
hex.ele[1].preDro1._dp_start
hex.ele[1].preDro1.from_dp
hex.ele[1].preDro1.dp_nominal
hex.ele[1].preDro1.homotopyInitialization
hex.ele[1].preDro1.linearized
hex.ele[1].preDro1.m_flow_turbulent
hex.ele[1].preDro1.sta_default.p
hex.ele[1].preDro1.sta_default.T
hex.ele[1].preDro1.eta_default
hex.ele[1].preDro1.m_flow_nominal_pos
hex.ele[1].preDro1.dp_nominal_pos
hex.ele[1].preDro1.deltaM
hex.ele[1].preDro1.k
hex.ele[1].preDro1.computeFlowResistance
hex.ele[1].preDro1.coeff
hex.ele[1].preDro2.allowFlowReversal
hex.ele[1].preDro2.port_a.p
hex.ele[1].preDro2.port_b.p
hex.ele[1].preDro2.m_flow_nominal
hex.ele[1].preDro2.m_flow_small
hex.ele[1].preDro2.show_T
hex.ele[1].preDro2.dp
hex.ele[1].preDro2._m_flow_start
hex.ele[1].preDro2._dp_start
hex.ele[1].preDro2.from_dp
hex.ele[1].preDro2.dp_nominal
hex.ele[1].preDro2.homotopyInitialization
hex.ele[1].preDro2.linearized
hex.ele[1].preDro2.m_flow_turbulent
hex.ele[1].preDro2.sta_default.p
hex.ele[1].preDro2.sta_default.T
hex.ele[1].preDro2.sta_default.X[1]
hex.ele[1].preDro2.sta_default.X[2]
hex.ele[1].preDro2.eta_default
hex.ele[1].preDro2.m_flow_nominal_pos
hex.ele[1].preDro2.dp_nominal_pos
hex.ele[1].preDro2.deltaM
hex.ele[1].preDro2.k
hex.ele[1].preDro2.computeFlowResistance
hex.ele[1].preDro2.coeff
hex.ele[1].sta1_nominal.p
hex.ele[1].sta1_nominal.T
hex.ele[1].rho1_nominal
hex.ele[1].sta2_nominal.p
hex.ele[1].sta2_nominal.T
hex.ele[1].sta2_nominal.X[1]
hex.ele[1].sta2_nominal.X[2]
hex.ele[1].rho2_nominal
hex.ele[1].sta1_start.p
hex.ele[1].sta1_start.T
hex.ele[1].h1_outflow_start
hex.ele[1].sta2_start.p
hex.ele[1].sta2_start.T
hex.ele[1].sta2_start.X[1]
hex.ele[1].sta2_start.X[2]
hex.ele[1].h2_outflow_start
hex.ele[1].initialize_p1
hex.ele[1].initialize_p2
hex.ele[1].UA_nominal
hex.ele[1].tau_m
hex.ele[1].C
hex.ele[1].mas.C
hex.ele[1].mas.T
hex.ele[1].mas.der(T)
hex.ele[1].mas.port.Q_flow
hex.ele[1].con1.Q_flow
hex.ele[1].con1.dT
hex.ele[1].con2.Q_flow
hex.ele[1].con2.dT
hex.ele[1].heaPor1.Q_flow
hex.ele[1].heaPor2.Q_flow
hex.ele[1].masExc.Le
hex.ele[1].masExc.n
hex.ele[1].masExc.humRatPre.use_p_in
hex.ele[1].masExc.humRatPre.p
hex.ele[1].masExc.humRatPre.X_w
hex.ele[1].masExc.humRatPre.p_w
hex.ele[1].masExc.humRatPre.x_w
hex.ele[1].masExc.gain.k
hex.ele[1].masExc.gain.y
hex.ele[1].masExc.mWat.u1
hex.ele[1].masExc.min.u2
hex.ele[1].masExc.zero.k
hex.ele[1].masExc.delX.k1
hex.ele[1].masExc.delX.k2
hex.ele[1].masExc.sta_default.p
hex.ele[1].masExc.sta_default.T
hex.ele[1].masExc.sta_default.X[1]
hex.ele[1].masExc.sta_default.X[2]
hex.ele[1].masExc.cp_default
hex.ele[1].masExc.cpLe_default
hex.ele[1].temSen.port.Q_flow
hex.ele[1].heaConVapAir.Q_flow
hex.ele[1].pro.u1
hex.ele[1].h_fg.y
hex.ele[1].gain.k
hex.ele[2].allowFlowReversal1
hex.ele[2].allowFlowReversal2
hex.ele[2].port_a1.h_outflow
hex.ele[2].port_a2.p
hex.ele[2].port_a2.h_outflow
hex.ele[2].port_b2.p
hex.ele[2].m1_flow_nominal
hex.ele[2].m2_flow_nominal
hex.ele[2].m1_flow_small
hex.ele[2].m2_flow_small
hex.ele[2].show_T
hex.ele[2].dp1
hex.ele[2].dp2
hex.ele[2].state_a1_inflow.T
hex.ele[2].state_b1_inflow.T
hex.ele[2].state_a2_inflow.p
hex.ele[2].state_a2_inflow.T
hex.ele[2].state_a2_inflow.X[1]
hex.ele[2].state_a2_inflow.X[2]
hex.ele[2].state_b2_inflow.p
hex.ele[2].state_b2_inflow.T
hex.ele[2].state_b2_inflow.X[2]
hex.ele[2].computeFlowResistance1
hex.ele[2].from_dp1
hex.ele[2].dp1_nominal
hex.ele[2].linearizeFlowResistance1
hex.ele[2].deltaM1
hex.ele[2].computeFlowResistance2
hex.ele[2].from_dp2
hex.ele[2].dp2_nominal
hex.ele[2].linearizeFlowResistance2
hex.ele[2].deltaM2
hex.ele[2].tau1
hex.ele[2].tau2
hex.ele[2].homotopyInitialization
hex.ele[2].energyDynamics
hex.ele[2].massDynamics
hex.ele[2].p1_start
hex.ele[2].T1_start
hex.ele[2].X1_start[1]
hex.ele[2].p2_start
hex.ele[2].T2_start
hex.ele[2].X2_start[1]
hex.ele[2].X2_start[2]
hex.ele[2].Q1_flow
hex.ele[2].Q2_flow
hex.ele[2].vol1.energyDynamics
hex.ele[2].vol1.massDynamics
hex.ele[2].vol1.substanceDynamics
hex.ele[2].vol1.traceDynamics
hex.ele[2].vol1.p_start
hex.ele[2].vol1.T_start
hex.ele[2].vol1.X_start[1]
hex.ele[2].vol1.mSenFac
hex.ele[2].vol1.initialize_p
hex.ele[2].vol1.prescribedHeatFlowRate
hex.ele[2].vol1.simplify_mWat_flow
hex.ele[2].vol1.m_flow_nominal
hex.ele[2].vol1.nPorts
hex.ele[2].vol1.m_flow_small
hex.ele[2].vol1.allowFlowReversal
hex.ele[2].vol1.V
hex.ele[2].vol1.m
hex.ele[2].vol1.rho_start
hex.ele[2].vol1.state_default.p
hex.ele[2].vol1.state_default.T
hex.ele[2].vol1.rho_default
hex.ele[2].vol1.state_start.p
hex.ele[2].vol1.state_start.T
hex.ele[2].vol1.useSteadyStateTwoPort
hex.ele[2].vol2.energyDynamics
hex.ele[2].vol2.massDynamics
hex.ele[2].vol2.substanceDynamics
hex.ele[2].vol2.traceDynamics
hex.ele[2].vol2.p_start
hex.ele[2].vol2.T_start
hex.ele[2].vol2.X_start[1]
hex.ele[2].vol2.X_start[2]
hex.ele[2].vol2.mSenFac
hex.ele[2].vol2.initialize_p
hex.ele[2].vol2.prescribedHeatFlowRate
hex.ele[2].vol2.simplify_mWat_flow
hex.ele[2].vol2.m_flow_nominal
hex.ele[2].vol2.nPorts
hex.ele[2].vol2.m_flow_small
hex.ele[2].vol2.allowFlowReversal
hex.ele[2].vol2.V
hex.ele[2].vol2.ports[1].p
hex.ele[2].vol2.ports[2].p
hex.ele[2].vol2.p
hex.ele[2].vol2.m
hex.ele[2].vol2.rho_start
hex.ele[2].vol2.state_default.p
hex.ele[2].vol2.state_default.T
hex.ele[2].vol2.state_default.X[1]
hex.ele[2].vol2.state_default.X[2]
hex.ele[2].vol2.rho_default
hex.ele[2].vol2.state_start.p
hex.ele[2].vol2.state_start.T
hex.ele[2].vol2.state_start.X[1]
hex.ele[2].vol2.state_start.X[2]
hex.ele[2].vol2.useSteadyStateTwoPort
hex.ele[2].vol2.mWat_flow
hex.ele[2].vol2.s[1]
hex.ele[2].preDro1.allowFlowReversal
hex.ele[2].preDro1.m_flow_nominal
hex.ele[2].preDro1.m_flow_small
hex.ele[2].preDro1.show_T
hex.ele[2].preDro1.dp
hex.ele[2].preDro1._m_flow_start
hex.ele[2].preDro1._dp_start
hex.ele[2].preDro1.from_dp
hex.ele[2].preDro1.dp_nominal
hex.ele[2].preDro1.homotopyInitialization
hex.ele[2].preDro1.linearized
hex.ele[2].preDro1.m_flow_turbulent
hex.ele[2].preDro1.sta_default.p
hex.ele[2].preDro1.sta_default.T
hex.ele[2].preDro1.eta_default
hex.ele[2].preDro1.m_flow_nominal_pos
hex.ele[2].preDro1.dp_nominal_pos
hex.ele[2].preDro1.deltaM
hex.ele[2].preDro1.k
hex.ele[2].preDro1.computeFlowResistance
hex.ele[2].preDro1.coeff
hex.ele[2].preDro2.allowFlowReversal
hex.ele[2].preDro2.port_a.p
hex.ele[2].preDro2.port_b.p
hex.ele[2].preDro2.m_flow_nominal
hex.ele[2].preDro2.m_flow_small
hex.ele[2].preDro2.show_T
hex.ele[2].preDro2.dp
hex.ele[2].preDro2._m_flow_start
hex.ele[2].preDro2._dp_start
hex.ele[2].preDro2.from_dp
hex.ele[2].preDro2.dp_nominal
hex.ele[2].preDro2.homotopyInitialization
hex.ele[2].preDro2.linearized
hex.ele[2].preDro2.m_flow_turbulent
hex.ele[2].preDro2.sta_default.p
hex.ele[2].preDro2.sta_default.T
hex.ele[2].preDro2.sta_default.X[1]
hex.ele[2].preDro2.sta_default.X[2]
hex.ele[2].preDro2.eta_default
hex.ele[2].preDro2.m_flow_nominal_pos
hex.ele[2].preDro2.dp_nominal_pos
hex.ele[2].preDro2.deltaM
hex.ele[2].preDro2.k
hex.ele[2].preDro2.computeFlowResistance
hex.ele[2].preDro2.coeff
hex.ele[2].sta1_nominal.p
hex.ele[2].sta1_nominal.T
hex.ele[2].rho1_nominal
hex.ele[2].sta2_nominal.p
hex.ele[2].sta2_nominal.T
hex.ele[2].sta2_nominal.X[1]
hex.ele[2].sta2_nominal.X[2]
hex.ele[2].rho2_nominal
hex.ele[2].sta1_start.p
hex.ele[2].sta1_start.T
hex.ele[2].h1_outflow_start
hex.ele[2].sta2_start.p
hex.ele[2].sta2_start.T
hex.ele[2].sta2_start.X[1]
hex.ele[2].sta2_start.X[2]
hex.ele[2].h2_outflow_start
hex.ele[2].initialize_p1
hex.ele[2].initialize_p2
hex.ele[2].UA_nominal
hex.ele[2].tau_m
hex.ele[2].C
hex.ele[2].mas.C
hex.ele[2].mas.T
hex.ele[2].mas.der(T)
hex.ele[2].mas.port.Q_flow
hex.ele[2].con1.Q_flow
hex.ele[2].con1.dT
hex.ele[2].con2.Q_flow
hex.ele[2].con2.dT
hex.ele[2].heaPor1.Q_flow
hex.ele[2].heaPor2.Q_flow
hex.ele[2].masExc.Le
hex.ele[2].masExc.n
hex.ele[2].masExc.humRatPre.use_p_in
hex.ele[2].masExc.humRatPre.p
hex.ele[2].masExc.humRatPre.X_w
hex.ele[2].masExc.humRatPre.p_w
hex.ele[2].masExc.humRatPre.x_w
hex.ele[2].masExc.gain.k
hex.ele[2].masExc.gain.y
hex.ele[2].masExc.mWat.u1
hex.ele[2].masExc.min.u2
hex.ele[2].masExc.zero.k
hex.ele[2].masExc.delX.k1
hex.ele[2].masExc.delX.k2
hex.ele[2].masExc.sta_default.p
hex.ele[2].masExc.sta_default.T
hex.ele[2].masExc.sta_default.X[1]
hex.ele[2].masExc.sta_default.X[2]
hex.ele[2].masExc.cp_default
hex.ele[2].masExc.cpLe_default
hex.ele[2].temSen.port.Q_flow
hex.ele[2].heaConVapAir.Q_flow
hex.ele[2].pro.u1
hex.ele[2].h_fg.y
hex.ele[2].gain.k
hex.ele[3].allowFlowReversal1
hex.ele[3].allowFlowReversal2
hex.ele[3].port_a1.h_outflow
hex.ele[3].port_a2.p
hex.ele[3].port_a2.h_outflow
hex.ele[3].port_b2.p
hex.ele[3].m1_flow_nominal
hex.ele[3].m2_flow_nominal
hex.ele[3].m1_flow_small
hex.ele[3].m2_flow_small
hex.ele[3].show_T
hex.ele[3].dp1
hex.ele[3].dp2
hex.ele[3].state_a1_inflow.T
hex.ele[3].state_b1_inflow.T
hex.ele[3].state_a2_inflow.p
hex.ele[3].state_a2_inflow.T
hex.ele[3].state_a2_inflow.X[2]
hex.ele[3].state_b2_inflow.p
hex.ele[3].state_b2_inflow.T
hex.ele[3].state_b2_inflow.X[2]
hex.ele[3].computeFlowResistance1
hex.ele[3].from_dp1
hex.ele[3].dp1_nominal
hex.ele[3].linearizeFlowResistance1
hex.ele[3].deltaM1
hex.ele[3].computeFlowResistance2
hex.ele[3].from_dp2
hex.ele[3].dp2_nominal
hex.ele[3].linearizeFlowResistance2
hex.ele[3].deltaM2
hex.ele[3].tau1
hex.ele[3].tau2
hex.ele[3].homotopyInitialization
hex.ele[3].energyDynamics
hex.ele[3].massDynamics
hex.ele[3].p1_start
hex.ele[3].T1_start
hex.ele[3].X1_start[1]
hex.ele[3].p2_start
hex.ele[3].T2_start
hex.ele[3].X2_start[1]
hex.ele[3].X2_start[2]
hex.ele[3].Q1_flow
hex.ele[3].Q2_flow
hex.ele[3].vol1.energyDynamics
hex.ele[3].vol1.massDynamics
hex.ele[3].vol1.substanceDynamics
hex.ele[3].vol1.traceDynamics
hex.ele[3].vol1.p_start
hex.ele[3].vol1.T_start
hex.ele[3].vol1.X_start[1]
hex.ele[3].vol1.mSenFac
hex.ele[3].vol1.initialize_p
hex.ele[3].vol1.prescribedHeatFlowRate
hex.ele[3].vol1.simplify_mWat_flow
hex.ele[3].vol1.m_flow_nominal
hex.ele[3].vol1.nPorts
hex.ele[3].vol1.m_flow_small
hex.ele[3].vol1.allowFlowReversal
hex.ele[3].vol1.V
hex.ele[3].vol1.m
hex.ele[3].vol1.rho_start
hex.ele[3].vol1.state_default.p
hex.ele[3].vol1.state_default.T
hex.ele[3].vol1.rho_default
hex.ele[3].vol1.state_start.p
hex.ele[3].vol1.state_start.T
hex.ele[3].vol1.useSteadyStateTwoPort
hex.ele[3].vol2.energyDynamics
hex.ele[3].vol2.massDynamics
hex.ele[3].vol2.substanceDynamics
hex.ele[3].vol2.traceDynamics
hex.ele[3].vol2.p_start
hex.ele[3].vol2.T_start
hex.ele[3].vol2.X_start[1]
hex.ele[3].vol2.X_start[2]
hex.ele[3].vol2.mSenFac
hex.ele[3].vol2.initialize_p
hex.ele[3].vol2.prescribedHeatFlowRate
hex.ele[3].vol2.simplify_mWat_flow
hex.ele[3].vol2.m_flow_nominal
hex.ele[3].vol2.nPorts
hex.ele[3].vol2.m_flow_small
hex.ele[3].vol2.allowFlowReversal
hex.ele[3].vol2.V
hex.ele[3].vol2.ports[1].p
hex.ele[3].vol2.ports[2].p
hex.ele[3].vol2.p
hex.ele[3].vol2.m
hex.ele[3].vol2.rho_start
hex.ele[3].vol2.state_default.p
hex.ele[3].vol2.state_default.T
hex.ele[3].vol2.state_default.X[1]
hex.ele[3].vol2.state_default.X[2]
hex.ele[3].vol2.rho_default
hex.ele[3].vol2.state_start.p
hex.ele[3].vol2.state_start.T
hex.ele[3].vol2.state_start.X[1]
hex.ele[3].vol2.state_start.X[2]
hex.ele[3].vol2.useSteadyStateTwoPort
hex.ele[3].vol2.mWat_flow
hex.ele[3].vol2.s[1]
hex.ele[3].preDro1.allowFlowReversal
hex.ele[3].preDro1.m_flow_nominal
hex.ele[3].preDro1.m_flow_small
hex.ele[3].preDro1.show_T
hex.ele[3].preDro1.dp
hex.ele[3].preDro1._m_flow_start
hex.ele[3].preDro1._dp_start
hex.ele[3].preDro1.from_dp
hex.ele[3].preDro1.dp_nominal
hex.ele[3].preDro1.homotopyInitialization
hex.ele[3].preDro1.linearized
hex.ele[3].preDro1.m_flow_turbulent
hex.ele[3].preDro1.sta_default.p
hex.ele[3].preDro1.sta_default.T
hex.ele[3].preDro1.eta_default
hex.ele[3].preDro1.m_flow_nominal_pos
hex.ele[3].preDro1.dp_nominal_pos
hex.ele[3].preDro1.deltaM
hex.ele[3].preDro1.k
hex.ele[3].preDro1.computeFlowResistance
hex.ele[3].preDro1.coeff
hex.ele[3].preDro2.allowFlowReversal
hex.ele[3].preDro2.port_a.p
hex.ele[3].preDro2.port_b.p
hex.ele[3].preDro2.m_flow_nominal
hex.ele[3].preDro2.m_flow_small
hex.ele[3].preDro2.show_T
hex.ele[3].preDro2.dp
hex.ele[3].preDro2._m_flow_start
hex.ele[3].preDro2._dp_start
hex.ele[3].preDro2.from_dp
hex.ele[3].preDro2.dp_nominal
hex.ele[3].preDro2.homotopyInitialization
hex.ele[3].preDro2.linearized
hex.ele[3].preDro2.m_flow_turbulent
hex.ele[3].preDro2.sta_default.p
hex.ele[3].preDro2.sta_default.T
hex.ele[3].preDro2.sta_default.X[1]
hex.ele[3].preDro2.sta_default.X[2]
hex.ele[3].preDro2.eta_default
hex.ele[3].preDro2.m_flow_nominal_pos
hex.ele[3].preDro2.dp_nominal_pos
hex.ele[3].preDro2.deltaM
hex.ele[3].preDro2.k
hex.ele[3].preDro2.computeFlowResistance
hex.ele[3].preDro2.coeff
hex.ele[3].sta1_nominal.p
hex.ele[3].sta1_nominal.T
hex.ele[3].rho1_nominal
hex.ele[3].sta2_nominal.p
hex.ele[3].sta2_nominal.T
hex.ele[3].sta2_nominal.X[1]
hex.ele[3].sta2_nominal.X[2]
hex.ele[3].rho2_nominal
hex.ele[3].sta1_start.p
hex.ele[3].sta1_start.T
hex.ele[3].h1_outflow_start
hex.ele[3].sta2_start.p
hex.ele[3].sta2_start.T
hex.ele[3].sta2_start.X[1]
hex.ele[3].sta2_start.X[2]
hex.ele[3].h2_outflow_start
hex.ele[3].initialize_p1
hex.ele[3].initialize_p2
hex.ele[3].UA_nominal
hex.ele[3].tau_m
hex.ele[3].C
hex.ele[3].mas.C
hex.ele[3].mas.T
hex.ele[3].mas.der(T)
hex.ele[3].mas.port.Q_flow
hex.ele[3].con1.Q_flow
hex.ele[3].con1.dT
hex.ele[3].con2.Q_flow
hex.ele[3].con2.dT
hex.ele[3].heaPor1.Q_flow
hex.ele[3].heaPor2.Q_flow
hex.ele[3].masExc.Le
hex.ele[3].masExc.n
hex.ele[3].masExc.humRatPre.use_p_in
hex.ele[3].masExc.humRatPre.p
hex.ele[3].masExc.humRatPre.X_w
hex.ele[3].masExc.humRatPre.p_w
hex.ele[3].masExc.humRatPre.x_w
hex.ele[3].masExc.gain.k
hex.ele[3].masExc.gain.y
hex.ele[3].masExc.mWat.u1
hex.ele[3].masExc.min.u2
hex.ele[3].masExc.zero.k
hex.ele[3].masExc.delX.k1
hex.ele[3].masExc.delX.k2
hex.ele[3].masExc.sta_default.p
hex.ele[3].masExc.sta_default.T
hex.ele[3].masExc.sta_default.X[1]
hex.ele[3].masExc.sta_default.X[2]
hex.ele[3].masExc.cp_default
hex.ele[3].masExc.cpLe_default
hex.ele[3].temSen.port.Q_flow
hex.ele[3].heaConVapAir.Q_flow
hex.ele[3].pro.u1
hex.ele[3].h_fg.y
hex.ele[3].gain.k
hex.ele[4].allowFlowReversal1
hex.ele[4].allowFlowReversal2
hex.ele[4].port_b2.p
hex.ele[4].m1_flow_nominal
hex.ele[4].m2_flow_nominal
hex.ele[4].m1_flow_small
hex.ele[4].m2_flow_small
hex.ele[4].show_T
hex.ele[4].dp1
hex.ele[4].dp2
hex.ele[4].state_a1_inflow.T
hex.ele[4].state_b1_inflow.T
hex.ele[4].state_a2_inflow.T
hex.ele[4].state_a2_inflow.X[2]
hex.ele[4].state_b2_inflow.p
hex.ele[4].state_b2_inflow.T
hex.ele[4].state_b2_inflow.X[2]
hex.ele[4].computeFlowResistance1
hex.ele[4].from_dp1
hex.ele[4].dp1_nominal
hex.ele[4].linearizeFlowResistance1
hex.ele[4].deltaM1
hex.ele[4].computeFlowResistance2
hex.ele[4].from_dp2
hex.ele[4].dp2_nominal
hex.ele[4].linearizeFlowResistance2
hex.ele[4].deltaM2
hex.ele[4].tau1
hex.ele[4].tau2
hex.ele[4].homotopyInitialization
hex.ele[4].energyDynamics
hex.ele[4].massDynamics
hex.ele[4].p1_start
hex.ele[4].T1_start
hex.ele[4].X1_start[1]
hex.ele[4].p2_start
hex.ele[4].T2_start
hex.ele[4].X2_start[1]
hex.ele[4].X2_start[2]
hex.ele[4].Q1_flow
hex.ele[4].Q2_flow
hex.ele[4].vol1.energyDynamics
hex.ele[4].vol1.massDynamics
hex.ele[4].vol1.substanceDynamics
hex.ele[4].vol1.traceDynamics
hex.ele[4].vol1.p_start
hex.ele[4].vol1.T_start
hex.ele[4].vol1.X_start[1]
hex.ele[4].vol1.mSenFac
hex.ele[4].vol1.initialize_p
hex.ele[4].vol1.prescribedHeatFlowRate
hex.ele[4].vol1.simplify_mWat_flow
hex.ele[4].vol1.m_flow_nominal
hex.ele[4].vol1.nPorts
hex.ele[4].vol1.m_flow_small
hex.ele[4].vol1.allowFlowReversal
hex.ele[4].vol1.V
hex.ele[4].vol1.m
hex.ele[4].vol1.rho_start
hex.ele[4].vol1.state_default.p
hex.ele[4].vol1.state_default.T
hex.ele[4].vol1.rho_default
hex.ele[4].vol1.state_start.p
hex.ele[4].vol1.state_start.T
hex.ele[4].vol1.useSteadyStateTwoPort
hex.ele[4].vol2.energyDynamics
hex.ele[4].vol2.massDynamics
hex.ele[4].vol2.substanceDynamics
hex.ele[4].vol2.traceDynamics
hex.ele[4].vol2.p_start
hex.ele[4].vol2.T_start
hex.ele[4].vol2.X_start[1]
hex.ele[4].vol2.X_start[2]
hex.ele[4].vol2.mSenFac
hex.ele[4].vol2.initialize_p
hex.ele[4].vol2.prescribedHeatFlowRate
hex.ele[4].vol2.simplify_mWat_flow
hex.ele[4].vol2.m_flow_nominal
hex.ele[4].vol2.nPorts
hex.ele[4].vol2.m_flow_small
hex.ele[4].vol2.allowFlowReversal
hex.ele[4].vol2.V
hex.ele[4].vol2.ports[1].p
hex.ele[4].vol2.ports[2].p
hex.ele[4].vol2.p
hex.ele[4].vol2.m
hex.ele[4].vol2.rho_start
hex.ele[4].vol2.state_default.p
hex.ele[4].vol2.state_default.T
hex.ele[4].vol2.state_default.X[1]
hex.ele[4].vol2.state_default.X[2]
hex.ele[4].vol2.rho_default
hex.ele[4].vol2.state_start.p
hex.ele[4].vol2.state_start.T
hex.ele[4].vol2.state_start.X[1]
hex.ele[4].vol2.state_start.X[2]
hex.ele[4].vol2.useSteadyStateTwoPort
hex.ele[4].vol2.mWat_flow
hex.ele[4].vol2.s[1]
hex.ele[4].preDro1.allowFlowReversal
hex.ele[4].preDro1.m_flow_nominal
hex.ele[4].preDro1.m_flow_small
hex.ele[4].preDro1.show_T
hex.ele[4].preDro1.dp
hex.ele[4].preDro1._m_flow_start
hex.ele[4].preDro1._dp_start
hex.ele[4].preDro1.from_dp
hex.ele[4].preDro1.dp_nominal
hex.ele[4].preDro1.homotopyInitialization
hex.ele[4].preDro1.linearized
hex.ele[4].preDro1.m_flow_turbulent
hex.ele[4].preDro1.sta_default.p
hex.ele[4].preDro1.sta_default.T
hex.ele[4].preDro1.eta_default
hex.ele[4].preDro1.m_flow_nominal_pos
hex.ele[4].preDro1.dp_nominal_pos
hex.ele[4].preDro1.deltaM
hex.ele[4].preDro1.k
hex.ele[4].preDro1.computeFlowResistance
hex.ele[4].preDro1.coeff
hex.ele[4].preDro2.allowFlowReversal
hex.ele[4].preDro2.port_b.p
hex.ele[4].preDro2.m_flow_nominal
hex.ele[4].preDro2.m_flow_small
hex.ele[4].preDro2.show_T
hex.ele[4].preDro2.dp
hex.ele[4].preDro2._m_flow_start
hex.ele[4].preDro2._dp_start
hex.ele[4].preDro2.from_dp
hex.ele[4].preDro2.dp_nominal
hex.ele[4].preDro2.homotopyInitialization
hex.ele[4].preDro2.linearized
hex.ele[4].preDro2.m_flow_turbulent
hex.ele[4].preDro2.sta_default.p
hex.ele[4].preDro2.sta_default.T
hex.ele[4].preDro2.sta_default.X[1]
hex.ele[4].preDro2.sta_default.X[2]
hex.ele[4].preDro2.eta_default
hex.ele[4].preDro2.m_flow_nominal_pos
hex.ele[4].preDro2.dp_nominal_pos
hex.ele[4].preDro2.deltaM
hex.ele[4].preDro2.k
hex.ele[4].preDro2.computeFlowResistance
hex.ele[4].preDro2.coeff
hex.ele[4].sta1_nominal.p
hex.ele[4].sta1_nominal.T
hex.ele[4].rho1_nominal
hex.ele[4].sta2_nominal.p
hex.ele[4].sta2_nominal.T
hex.ele[4].sta2_nominal.X[1]
hex.ele[4].sta2_nominal.X[2]
hex.ele[4].rho2_nominal
hex.ele[4].sta1_start.p
hex.ele[4].sta1_start.T
hex.ele[4].h1_outflow_start
hex.ele[4].sta2_start.p
hex.ele[4].sta2_start.T
hex.ele[4].sta2_start.X[1]
hex.ele[4].sta2_start.X[2]
hex.ele[4].h2_outflow_start
hex.ele[4].initialize_p1
hex.ele[4].initialize_p2
hex.ele[4].UA_nominal
hex.ele[4].tau_m
hex.ele[4].C
hex.ele[4].mas.C
hex.ele[4].mas.T
hex.ele[4].mas.der(T)
hex.ele[4].mas.port.Q_flow
hex.ele[4].con1.Q_flow
hex.ele[4].con1.dT
hex.ele[4].con2.Q_flow
hex.ele[4].con2.dT
hex.ele[4].heaPor1.Q_flow
hex.ele[4].heaPor2.Q_flow
hex.ele[4].masExc.Le
hex.ele[4].masExc.n
hex.ele[4].masExc.humRatPre.use_p_in
hex.ele[4].masExc.humRatPre.p
hex.ele[4].masExc.humRatPre.X_w
hex.ele[4].masExc.humRatPre.p_w
hex.ele[4].masExc.humRatPre.x_w
hex.ele[4].masExc.gain.k
hex.ele[4].masExc.gain.y
hex.ele[4].masExc.mWat.u1
hex.ele[4].masExc.min.u2
hex.ele[4].masExc.zero.k
hex.ele[4].masExc.delX.k1
hex.ele[4].masExc.delX.k2
hex.ele[4].masExc.sta_default.p
hex.ele[4].masExc.sta_default.T
hex.ele[4].masExc.sta_default.X[1]
hex.ele[4].masExc.sta_default.X[2]
hex.ele[4].masExc.cp_default
hex.ele[4].masExc.cpLe_default
hex.ele[4].temSen.port.Q_flow
hex.ele[4].heaConVapAir.Q_flow
hex.ele[4].pro.u1
hex.ele[4].h_fg.y
hex.ele[4].gain.k
hex.rep1.nout
hex.rep2.nout
hex.THA1.y
hex.THA2.y
hex.theCon1[1].dT
hex.theCon1[1].G
hex.theCon1[2].Q_flow
hex.theCon1[2].dT
hex.theCon1[2].G
hex.theCon1[3].dT
hex.theCon1[3].G
hex.theCon2[1].dT
hex.theCon2[1].G
hex.theCon2[2].Q_flow
hex.theCon2[2].dT
hex.theCon2[2].G
hex.theCon2[3].dT
hex.theCon2[3].G
hex.QSen2_flow
hex.QLat2_flow
hex.SHR
hex.mWat_flow
warmWaterSource.nPorts
warmWaterSource.verifyInputs
warmWaterSource.ports[1].m_flow
warmWaterSource.ports[1].h_outflow
warmWaterSource.flowDirection
warmWaterSource.X_in_internal[1]
warmWaterSource.use_p_in
warmWaterSource.p
warmWaterSource.use_T_in
warmWaterSource.T
warmWaterSource.use_X_in
warmWaterSource.use_Xi_in
warmWaterSource.use_C_in
warmWaterSource.X[1]
waterSink.nPorts
waterSink.verifyInputs
waterSink.ports[1].m_flow
waterSink.ports[1].h_outflow
waterSink.flowDirection
waterSink.X_in_internal[1]
waterSink.use_p_in
waterSink.p
waterSink.use_T_in
waterSink.T
waterSink.use_X_in
waterSink.use_Xi_in
waterSink.use_C_in
waterSink.X[1]
Pressure1.k
ValveCharacteristicCurve.n
ValveCharacteristicCurve.u[1]
ValveCharacteristicCurve.y[1]
ValveCharacteristicCurve.tableOnFile
ValveCharacteristicCurve.table[1, 1]
ValveCharacteristicCurve.table[1, 2]
ValveCharacteristicCurve.table[2, 1]
ValveCharacteristicCurve.table[2, 2]
ValveCharacteristicCurve.verboseRead
ValveCharacteristicCurve.columns[1]
ValveCharacteristicCurve.smoothness
ValveCharacteristicCurve.tableID.id
ValveCharacteristicCurve.tableOnFileRead
Temperature.k
convertCommand.k
val.energyDynamics
val.massDynamics
val.substanceDynamics
val.traceDynamics
val.p_start
val.T_start
val.X_start[1]
val.mSenFac
val.port_2.p
val.port_3.m_flow
val.tau
val.mDyn_flow_nominal
val.from_dp
val.portFlowDirection_1
val.portFlowDirection_2
val.portFlowDirection_3
val.verifyFlowReversal
val.m_flow_small
val.res1.allowFlowReversal
val.res1.m_flow_nominal
val.res1.m_flow_small
val.res1.show_T
val.res1.dp
val.res1._m_flow_start
val.res1._dp_start
val.res1.from_dp
val.res1.dp_nominal
val.res1.homotopyInitialization
val.res1.linearized
val.res1.m_flow_turbulent
val.res1.sta_default.p
val.res1.sta_default.T
val.res1.eta_default
val.res1.m_flow_nominal_pos
val.res1.dp_nominal_pos
val.res1.CvData
val.res1.Kv
val.res1.Cv
val.res1.Av
val.res1.deltaM
val.res1.dpValve_nominal
val.res1.rhoStd
val.res1.Kv_SI
val.res1.use_inputFilter
val.res1.riseTime
val.res1.order
val.res1.init
val.res1.y_start
val.res1.dpFixed_nominal
val.res1.l
val.res1.phi
val.res1.kFixed
val.res1.kVal
val.res2.allowFlowReversal
val.res2.m_flow_nominal
val.res2.m_flow_small
val.res2.show_T
val.res2.dp
val.res2._m_flow_start
val.res2._dp_start
val.res2.from_dp
val.res3.allowFlowReversal
val.res3.port_b.h_outflow
val.res3.m_flow_nominal
val.res3.m_flow_small
val.res3.show_T
val.res3.dp
val.res3._m_flow_start
val.res3._dp_start
val.res3.from_dp
val.res3.dp_nominal
val.res3.homotopyInitialization
val.res3.linearized
val.res3.m_flow_turbulent
val.res3.sta_default.p
val.res3.sta_default.T
val.res3.eta_default
val.res3.m_flow_nominal_pos
val.res3.dp_nominal_pos
val.res3.CvData
val.res3.Kv
val.res3.Cv
val.res3.Av
val.res3.deltaM
val.res3.dpValve_nominal
val.res3.rhoStd
val.res3.Kv_SI
val.res3.use_inputFilter
val.res3.riseTime
val.res3.order
val.res3.init
val.res3.y_start
val.res3.y
val.res3.dpFixed_nominal
val.res3.l
val.res3.phi
val.res3.kFixed
val.res3.kVal
val.have_controlVolume
val.use_inputFilter
val.riseTime
val.order
val.init
val.y_start
val.y_actual
val.filter.analogFilter
val.filter.filterType
val.filter.order
val.filter.f_cut
val.filter.gain
val.filter.A_ripple
val.filter.f_min
val.filter.normalized
val.filter.init
val.filter.nx
val.filter.x_start[1]
val.filter.x_start[2]
val.filter.y_start
val.filter.u_nominal
val.filter.x[1]
val.filter.der(x[1])
val.filter.x[2]
val.filter.der(x[2])
val.filter.ncr
val.filter.nc0
val.filter.na
val.filter.nr
val.filter.cr[1]
val.filter.cr[2]
val.filter.r[1]
val.filter.r[2]
val.filter.uu[1]
val.CvData
val.Kv
val.Cv
val.Av
val.deltaM
val.m_flow_nominal
val.dpValve_nominal
val.rhoStd
val.Kv_SI
val.dpFixed_nominal[1]
val.dpFixed_nominal[2]
val.fraK
val.l[1]
val.l[2]
val.linearized[1]
val.linearized[2]
val.homotopyInitialization
val.inv.u1
val.uni.k
val.uni.y
CurculationPump.energyDynamics
CurculationPump.massDynamics
CurculationPump.substanceDynamics
CurculationPump.traceDynamics
CurculationPump.p_start
CurculationPump.T_start
CurculationPump.X_start[1]
CurculationPump.mSenFac
CurculationPump.allowFlowReversal
CurculationPump.port_a.h_outflow
CurculationPump.port_b.h_outflow
CurculationPump.m_flow_nominal
CurculationPump.m_flow_small
CurculationPump.show_T
CurculationPump.dp
CurculationPump._m_flow_start
CurculationPump._dp_start
CurculationPump.per.pressure.V_flow[1]
CurculationPump.per.pressure.V_flow[2]
CurculationPump.per.pressure.dp[1]
CurculationPump.per.pressure.dp[2]
CurculationPump.per.use_powerCharacteristic
CurculationPump.per.hydraulicEfficiency.V_flow[1]
CurculationPump.per.hydraulicEfficiency.eta[1]
CurculationPump.per.motorEfficiency.V_flow[1]
CurculationPump.per.motorEfficiency.eta[1]
CurculationPump.per.power.V_flow[1]
CurculationPump.per.power.P[1]
CurculationPump.per.motorCooledByFluid
CurculationPump.per.speed_nominal
CurculationPump.per.constantSpeed
CurculationPump.per.speeds[1]
CurculationPump.per.speed_rpm_nominal
CurculationPump.per.constantSpeed_rpm
CurculationPump.per.speeds_rpm[1]
CurculationPump.per.havePressureCurve
CurculationPump.inputType
CurculationPump.constInput
CurculationPump.stageInputs[1]
CurculationPump.computePowerUsingSimilarityLaws
CurculationPump.addPowerToMedium
CurculationPump.nominalValuesDefineDefaultPressureCurve
CurculationPump.tau
CurculationPump.use_inputFilter
CurculationPump.riseTime
CurculationPump.init
CurculationPump.y_start
CurculationPump.y_actual
CurculationPump.P
CurculationPump.heatPort.T
CurculationPump.heatPort.Q_flow
CurculationPump.VMachine_flow
CurculationPump.dpMachine
CurculationPump.eta
CurculationPump.etaHyd
CurculationPump.etaMot
CurculationPump._VMachine_flow
CurculationPump.preVar
CurculationPump.speedIsInput
CurculationPump.nOri
CurculationPump.haveVMax
CurculationPump.V_flow_max
CurculationPump.rho_default
CurculationPump.sta_start.p
CurculationPump.sta_start.T
CurculationPump.h_outflow_start
CurculationPump.vol.energyDynamics
CurculationPump.vol.massDynamics
CurculationPump.vol.substanceDynamics
CurculationPump.vol.traceDynamics
CurculationPump.vol.p_start
CurculationPump.vol.T_start
CurculationPump.vol.X_start[1]
CurculationPump.vol.mSenFac
CurculationPump.vol.initialize_p
CurculationPump.vol.prescribedHeatFlowRate
CurculationPump.vol.simplify_mWat_flow
CurculationPump.vol.m_flow_nominal
CurculationPump.vol.nPorts
CurculationPump.vol.m_flow_small
CurculationPump.vol.allowFlowReversal
CurculationPump.vol.V
CurculationPump.vol.m
CurculationPump.vol.rho_start
CurculationPump.vol.state_default.p
CurculationPump.vol.state_default.T
CurculationPump.vol.rho_default
CurculationPump.vol.state_start.p
CurculationPump.vol.state_start.T
CurculationPump.vol.useSteadyStateTwoPort
CurculationPump.vol.use_C_flow
CurculationPump.vol.heatPort.Q_flow
CurculationPump.vol.tau
CurculationPump.vol.V_nominal
CurculationPump.filter.analogFilter
CurculationPump.filter.filterType
CurculationPump.filter.order
CurculationPump.filter.f_cut
CurculationPump.filter.gain
CurculationPump.filter.A_ripple
CurculationPump.filter.f_min
CurculationPump.filter.normalized
CurculationPump.filter.init
CurculationPump.filter.nx
CurculationPump.filter.x_start[1]
CurculationPump.filter.x_start[2]
CurculationPump.filter.y_start
CurculationPump.filter.u_nominal
CurculationPump.filter.x[1]
CurculationPump.filter.der(x[1])
CurculationPump.filter.x[2]
CurculationPump.filter.der(x[2])
CurculationPump.filter.ncr
CurculationPump.filter.nc0
CurculationPump.filter.na
CurculationPump.filter.nr
CurculationPump.filter.cr[1]
CurculationPump.filter.cr[2]
CurculationPump.filter.r[1]
CurculationPump.filter.r[2]
CurculationPump.filter.uu[1]
CurculationPump.preSou.allowFlowReversal
CurculationPump.preSou.dp_start
CurculationPump.preSou.m_flow_start
CurculationPump.preSou.m_flow_small
CurculationPump.preSou.show_T
CurculationPump.preSou.show_V_flow
CurculationPump.preSou.V_flow
CurculationPump.preSou.control_m_flow
CurculationPump.preSou.control_dp
CurculationPump.preSou.m_flow_internal
CurculationPump.heaDis.homotopyInitialization
CurculationPump.heaDis.motorCooledByFluid
CurculationPump.heaDis.delta_V_flow
CurculationPump.heaDis.Q_flow
CurculationPump.heaDis.WHyd
CurculationPump.heaDis.QThe_flow
CurculationPump.PToMed.k1
CurculationPump.PToMed.k2
CurculationPump.prePow.T_ref
CurculationPump.prePow.alpha
CurculationPump.rho_inlet.y
CurculationPump.senMasFlo.allowFlowReversal
CurculationPump.senMasFlo.m_flow_nominal
CurculationPump.senMasFlo.m_flow_small
CurculationPump.senRelPre.port_a.m_flow
CurculationPump.senRelPre.port_a.h_outflow
CurculationPump.senRelPre.port_b.m_flow
CurculationPump.senRelPre.port_b.h_outflow
CurculationPump.eff.per.pressure.V_flow[1]
CurculationPump.eff.per.pressure.V_flow[2]
CurculationPump.eff.per.pressure.dp[1]
CurculationPump.eff.per.pressure.dp[2]
CurculationPump.eff.per.use_powerCharacteristic
CurculationPump.eff.per.hydraulicEfficiency.V_flow[1]
CurculationPump.eff.per.hydraulicEfficiency.eta[1]
CurculationPump.eff.per.motorEfficiency.V_flow[1]
CurculationPump.eff.per.motorEfficiency.eta[1]
CurculationPump.eff.per.power.V_flow[1]
CurculationPump.eff.per.power.P[1]
CurculationPump.eff.per.motorCooledByFluid
CurculationPump.eff.per.speed_nominal
CurculationPump.eff.per.constantSpeed
CurculationPump.eff.per.speeds[1]
CurculationPump.eff.per.speed_rpm_nominal
CurculationPump.eff.per.constantSpeed_rpm
CurculationPump.eff.per.speeds_rpm[1]
CurculationPump.eff.per.havePressureCurve
CurculationPump.eff.preVar
CurculationPump.eff.computePowerUsingSimilarityLaws
CurculationPump.eff.V_flow_nominal
CurculationPump.eff.rho_default
CurculationPump.eff.haveVMax
CurculationPump.eff.V_flow_max
CurculationPump.eff.nOri
CurculationPump.eff.homotopyInitialization
CurculationPump.eff.y_out
CurculationPump.eff.rho
CurculationPump.eff.WFlo
CurculationPump.eff.r_N
CurculationPump.eff.r_V
CurculationPump.eff.preSpe
CurculationPump.eff.prePre
CurculationPump.eff.motDer[1]
CurculationPump.eff.hydDer[1]
CurculationPump.eff.dpMax
CurculationPump.eff.delta
CurculationPump.eff.kRes
CurculationPump.eff.curve
CurculationPump.eff.pCur1.n
CurculationPump.eff.pCur1.V_flow[1]
CurculationPump.eff.pCur1.V_flow[2]
CurculationPump.eff.pCur1.dp[1]
CurculationPump.eff.pCur1.dp[2]
CurculationPump.eff.pCur2.n
CurculationPump.eff.pCur2.V_flow[1]
CurculationPump.eff.pCur2.V_flow[2]
CurculationPump.eff.pCur2.V_flow[3]
CurculationPump.eff.pCur2.dp[1]
CurculationPump.eff.pCur2.dp[2]
CurculationPump.eff.pCur2.dp[3]
CurculationPump.eff.pCur3.n
CurculationPump.eff.pCur3.V_flow[1]
CurculationPump.eff.pCur3.V_flow[2]
CurculationPump.eff.pCur3.V_flow[3]
CurculationPump.eff.pCur3.V_flow[4]
CurculationPump.eff.pCur3.dp[1]
CurculationPump.eff.pCur3.dp[2]
CurculationPump.eff.pCur3.dp[3]
CurculationPump.eff.pCur3.dp[4]
CurculationPump.eff.preDer1[1]
CurculationPump.eff.preDer1[2]
CurculationPump.eff.preDer2[1]
CurculationPump.eff.preDer2[2]
CurculationPump.eff.preDer2[3]
CurculationPump.eff.preDer3[1]
CurculationPump.eff.preDer3[2]
CurculationPump.eff.preDer3[3]
CurculationPump.eff.preDer3[4]
CurculationPump.eff.powDer[1]
CurculationPump.eff.haveMinimumDecrease
CurculationPump.eff.haveDPMax
CurculationPump.dp_start
CurculationPump.dp_nominal
CurculationPump.constantHead
CurculationPump.heads[1]
CurculationPump.prescribeSystemPressure
CurculationPump.dp_actual
CurculationPump.gain.k
hex.ele[1].vol1.dynBal.energyDynamics
hex.ele[1].vol1.dynBal.massDynamics
hex.ele[1].vol1.dynBal.substanceDynamics
hex.ele[1].vol1.dynBal.traceDynamics
hex.ele[1].vol1.dynBal.p_start
hex.ele[1].vol1.dynBal.T_start
hex.ele[1].vol1.dynBal.X_start[1]
hex.ele[1].vol1.dynBal.mSenFac
hex.ele[1].vol1.dynBal.initialize_p
hex.ele[1].vol1.dynBal.simplify_mWat_flow
hex.ele[1].vol1.dynBal.nPorts
hex.ele[1].vol1.dynBal.use_mWat_flow
hex.ele[1].vol1.dynBal.use_C_flow
hex.ele[1].vol1.dynBal.mOut
hex.ele[1].vol1.dynBal.medium.T
hex.ele[1].vol1.dynBal.medium.d
hex.ele[1].vol1.dynBal.medium.X[1]
hex.ele[1].vol1.dynBal.medium.R
hex.ele[1].vol1.dynBal.medium.MM
hex.ele[1].vol1.dynBal.medium.preferredMediumStates
hex.ele[1].vol1.dynBal.medium.standardOrderComponents
hex.ele[1].vol1.dynBal.medium.T_degC
hex.ele[1].vol1.dynBal.medium.p_bar
hex.ele[1].vol1.dynBal.U
hex.ele[1].vol1.dynBal.der(U)
hex.ele[1].vol1.dynBal.m
hex.ele[1].vol1.dynBal.der(m)
hex.ele[1].vol1.dynBal.mb_flow
hex.ele[1].vol1.dynBal.Hb_flow
hex.ele[1].vol1.dynBal.fluidVolume
hex.ele[1].vol1.dynBal.CSen
hex.ele[1].vol1.dynBal.ports_H_flow[1]
hex.ele[1].vol1.dynBal.ports_H_flow[2]
hex.ele[1].vol1.dynBal.cp_default
hex.ele[1].vol1.dynBal.rho_start
hex.ele[1].vol1.dynBal.computeCSen
hex.ele[1].vol1.dynBal.state_default.p
hex.ele[1].vol1.dynBal.state_default.T
hex.ele[1].vol1.dynBal.rho_default
hex.ele[1].vol1.dynBal.hStart
hex.ele[1].vol1.dynBal._simplify_mWat_flow
hex.ele[1].vol1.dynBal.mWat_flow_internal
hex.ele[1].vol2.dynBal.energyDynamics
hex.ele[1].vol2.dynBal.massDynamics
hex.ele[1].vol2.dynBal.substanceDynamics
hex.ele[1].vol2.dynBal.traceDynamics
hex.ele[1].vol2.dynBal.p_start
hex.ele[1].vol2.dynBal.T_start
hex.ele[1].vol2.dynBal.X_start[1]
hex.ele[1].vol2.dynBal.X_start[2]
hex.ele[1].vol2.dynBal.mSenFac
hex.ele[1].vol2.dynBal.initialize_p
hex.ele[1].vol2.dynBal.simplify_mWat_flow
hex.ele[1].vol2.dynBal.nPorts
hex.ele[1].vol2.dynBal.use_mWat_flow
hex.ele[1].vol2.dynBal.use_C_flow
hex.ele[1].vol2.dynBal.mOut
hex.ele[1].vol2.dynBal.ports[1].p
hex.ele[1].vol2.dynBal.ports[2].p
hex.ele[1].vol2.dynBal.medium.p
hex.ele[1].vol2.dynBal.medium.d
hex.ele[1].vol2.dynBal.medium.T
hex.ele[1].vol2.dynBal.medium.X[2]
hex.ele[1].vol2.dynBal.medium.u
hex.ele[1].vol2.dynBal.medium.R
hex.ele[1].vol2.dynBal.medium.MM
hex.ele[1].vol2.dynBal.medium.state.p
hex.ele[1].vol2.dynBal.medium.preferredMediumStates
hex.ele[1].vol2.dynBal.medium.standardOrderComponents
hex.ele[1].vol2.dynBal.medium.T_degC
hex.ele[1].vol2.dynBal.medium.p_bar
hex.ele[1].vol2.dynBal.medium.MMX[1]
hex.ele[1].vol2.dynBal.medium.MMX[2]
hex.ele[1].vol2.dynBal.medium.X_air
hex.ele[1].vol2.dynBal.medium.dT
hex.ele[1].vol2.dynBal.U
hex.ele[1].vol2.dynBal.der(U)
hex.ele[1].vol2.dynBal.m
hex.ele[1].vol2.dynBal.der(m)
hex.ele[1].vol2.dynBal.mXi[1]
hex.ele[1].vol2.dynBal.der(mXi[1])
hex.ele[1].vol2.dynBal.mb_flow
hex.ele[1].vol2.dynBal.mbXi_flow[1]
hex.ele[1].vol2.dynBal.Hb_flow
hex.ele[1].vol2.dynBal.fluidVolume
hex.ele[1].vol2.dynBal.CSen
hex.ele[1].vol2.dynBal.ports_H_flow[1]
hex.ele[1].vol2.dynBal.ports_H_flow[2]
hex.ele[1].vol2.dynBal.ports_mXi_flow[1, 1]
hex.ele[1].vol2.dynBal.ports_mXi_flow[2, 1]
hex.ele[1].vol2.dynBal.cp_default
hex.ele[1].vol2.dynBal.rho_start
hex.ele[1].vol2.dynBal.computeCSen
hex.ele[1].vol2.dynBal.state_default.p
hex.ele[1].vol2.dynBal.state_default.T
hex.ele[1].vol2.dynBal.state_default.X[1]
hex.ele[1].vol2.dynBal.state_default.X[2]
hex.ele[1].vol2.dynBal.rho_default
hex.ele[1].vol2.dynBal.s[1]
hex.ele[1].vol2.dynBal.hStart
hex.ele[1].vol2.dynBal._simplify_mWat_flow
hex.ele[2].vol1.dynBal.energyDynamics
hex.ele[2].vol1.dynBal.massDynamics
hex.ele[2].vol1.dynBal.substanceDynamics
hex.ele[2].vol1.dynBal.traceDynamics
hex.ele[2].vol1.dynBal.p_start
hex.ele[2].vol1.dynBal.T_start
hex.ele[2].vol1.dynBal.X_start[1]
hex.ele[2].vol1.dynBal.mSenFac
hex.ele[2].vol1.dynBal.initialize_p
hex.ele[2].vol1.dynBal.simplify_mWat_flow
hex.ele[2].vol1.dynBal.nPorts
hex.ele[2].vol1.dynBal.use_mWat_flow
hex.ele[2].vol1.dynBal.use_C_flow
hex.ele[2].vol1.dynBal.mOut
hex.ele[2].vol1.dynBal.medium.T
hex.ele[2].vol1.dynBal.medium.d
hex.ele[2].vol1.dynBal.medium.X[1]
hex.ele[2].vol1.dynBal.medium.R
hex.ele[2].vol1.dynBal.medium.MM
hex.ele[2].vol1.dynBal.medium.preferredMediumStates
hex.ele[2].vol1.dynBal.medium.standardOrderComponents
hex.ele[2].vol1.dynBal.medium.T_degC
hex.ele[2].vol1.dynBal.medium.p_bar
hex.ele[2].vol1.dynBal.U
hex.ele[2].vol1.dynBal.der(U)
hex.ele[2].vol1.dynBal.m
hex.ele[2].vol1.dynBal.der(m)
hex.ele[2].vol1.dynBal.mb_flow
hex.ele[2].vol1.dynBal.Hb_flow
hex.ele[2].vol1.dynBal.fluidVolume
hex.ele[2].vol1.dynBal.CSen
hex.ele[2].vol1.dynBal.ports_H_flow[1]
hex.ele[2].vol1.dynBal.ports_H_flow[2]
hex.ele[2].vol1.dynBal.cp_default
hex.ele[2].vol1.dynBal.rho_start
hex.ele[2].vol1.dynBal.computeCSen
hex.ele[2].vol1.dynBal.state_default.p
hex.ele[2].vol1.dynBal.state_default.T
hex.ele[2].vol1.dynBal.rho_default
hex.ele[2].vol1.dynBal.hStart
hex.ele[2].vol1.dynBal._simplify_mWat_flow
hex.ele[2].vol1.dynBal.mWat_flow_internal
hex.ele[2].vol2.dynBal.energyDynamics
hex.ele[2].vol2.dynBal.massDynamics
hex.ele[2].vol2.dynBal.substanceDynamics
hex.ele[2].vol2.dynBal.traceDynamics
hex.ele[2].vol2.dynBal.p_start
hex.ele[2].vol2.dynBal.T_start
hex.ele[2].vol2.dynBal.X_start[1]
hex.ele[2].vol2.dynBal.X_start[2]
hex.ele[2].vol2.dynBal.mSenFac
hex.ele[2].vol2.dynBal.initialize_p
hex.ele[2].vol2.dynBal.simplify_mWat_flow
hex.ele[2].vol2.dynBal.nPorts
hex.ele[2].vol2.dynBal.use_mWat_flow
hex.ele[2].vol2.dynBal.use_C_flow
hex.ele[2].vol2.dynBal.mOut
hex.ele[2].vol2.dynBal.ports[1].p
hex.ele[2].vol2.dynBal.ports[2].p
hex.ele[2].vol2.dynBal.medium.p
hex.ele[2].vol2.dynBal.medium.d
hex.ele[2].vol2.dynBal.medium.T
hex.ele[2].vol2.dynBal.medium.X[2]
hex.ele[2].vol2.dynBal.medium.u
hex.ele[2].vol2.dynBal.medium.R
hex.ele[2].vol2.dynBal.medium.MM
hex.ele[2].vol2.dynBal.medium.state.p
hex.ele[2].vol2.dynBal.medium.preferredMediumStates
hex.ele[2].vol2.dynBal.medium.standardOrderComponents
hex.ele[2].vol2.dynBal.medium.T_degC
hex.ele[2].vol2.dynBal.medium.p_bar
hex.ele[2].vol2.dynBal.medium.MMX[1]
hex.ele[2].vol2.dynBal.medium.MMX[2]
hex.ele[2].vol2.dynBal.medium.X_air
hex.ele[2].vol2.dynBal.medium.dT
hex.ele[2].vol2.dynBal.U
hex.ele[2].vol2.dynBal.der(U)
hex.ele[2].vol2.dynBal.m
hex.ele[2].vol2.dynBal.der(m)
hex.ele[2].vol2.dynBal.mXi[1]
hex.ele[2].vol2.dynBal.der(mXi[1])
hex.ele[2].vol2.dynBal.mb_flow
hex.ele[2].vol2.dynBal.mbXi_flow[1]
hex.ele[2].vol2.dynBal.Hb_flow
hex.ele[2].vol2.dynBal.fluidVolume
hex.ele[2].vol2.dynBal.CSen
hex.ele[2].vol2.dynBal.ports_H_flow[1]
hex.ele[2].vol2.dynBal.ports_H_flow[2]
hex.ele[2].vol2.dynBal.ports_mXi_flow[1, 1]
hex.ele[2].vol2.dynBal.ports_mXi_flow[2, 1]
hex.ele[2].vol2.dynBal.cp_default
hex.ele[2].vol2.dynBal.rho_start
hex.ele[2].vol2.dynBal.computeCSen
hex.ele[2].vol2.dynBal.state_default.p
hex.ele[2].vol2.dynBal.state_default.T
hex.ele[2].vol2.dynBal.state_default.X[1]
hex.ele[2].vol2.dynBal.state_default.X[2]
hex.ele[2].vol2.dynBal.rho_default
hex.ele[2].vol2.dynBal.s[1]
hex.ele[2].vol2.dynBal.hStart
hex.ele[2].vol2.dynBal._simplify_mWat_flow
hex.ele[3].vol1.dynBal.energyDynamics
hex.ele[3].vol1.dynBal.massDynamics
hex.ele[3].vol1.dynBal.substanceDynamics
hex.ele[3].vol1.dynBal.traceDynamics
hex.ele[3].vol1.dynBal.p_start
hex.ele[3].vol1.dynBal.T_start
hex.ele[3].vol1.dynBal.X_start[1]
hex.ele[3].vol1.dynBal.mSenFac
hex.ele[3].vol1.dynBal.initialize_p
hex.ele[3].vol1.dynBal.simplify_mWat_flow
hex.ele[3].vol1.dynBal.nPorts
hex.ele[3].vol1.dynBal.use_mWat_flow
hex.ele[3].vol1.dynBal.use_C_flow
hex.ele[3].vol1.dynBal.mOut
hex.ele[3].vol1.dynBal.medium.T
hex.ele[3].vol1.dynBal.medium.d
hex.ele[3].vol1.dynBal.medium.X[1]
hex.ele[3].vol1.dynBal.medium.R
hex.ele[3].vol1.dynBal.medium.MM
hex.ele[3].vol1.dynBal.medium.preferredMediumStates
hex.ele[3].vol1.dynBal.medium.standardOrderComponents
hex.ele[3].vol1.dynBal.medium.T_degC
hex.ele[3].vol1.dynBal.medium.p_bar
hex.ele[3].vol1.dynBal.U
hex.ele[3].vol1.dynBal.der(U)
hex.ele[3].vol1.dynBal.m
hex.ele[3].vol1.dynBal.der(m)
hex.ele[3].vol1.dynBal.mb_flow
hex.ele[3].vol1.dynBal.Hb_flow
hex.ele[3].vol1.dynBal.fluidVolume
hex.ele[3].vol1.dynBal.CSen
hex.ele[3].vol1.dynBal.ports_H_flow[1]
hex.ele[3].vol1.dynBal.ports_H_flow[2]
hex.ele[3].vol1.dynBal.cp_default
hex.ele[3].vol1.dynBal.rho_start
hex.ele[3].vol1.dynBal.computeCSen
hex.ele[3].vol1.dynBal.state_default.p
hex.ele[3].vol1.dynBal.state_default.T
hex.ele[3].vol1.dynBal.rho_default
hex.ele[3].vol1.dynBal.hStart
hex.ele[3].vol1.dynBal._simplify_mWat_flow
hex.ele[3].vol1.dynBal.mWat_flow_internal
hex.ele[3].vol2.dynBal.energyDynamics
hex.ele[3].vol2.dynBal.massDynamics
hex.ele[3].vol2.dynBal.substanceDynamics
hex.ele[3].vol2.dynBal.traceDynamics
hex.ele[3].vol2.dynBal.p_start
hex.ele[3].vol2.dynBal.T_start
hex.ele[3].vol2.dynBal.X_start[1]
hex.ele[3].vol2.dynBal.X_start[2]
hex.ele[3].vol2.dynBal.mSenFac
hex.ele[3].vol2.dynBal.initialize_p
hex.ele[3].vol2.dynBal.simplify_mWat_flow
hex.ele[3].vol2.dynBal.nPorts
hex.ele[3].vol2.dynBal.use_mWat_flow
hex.ele[3].vol2.dynBal.use_C_flow
hex.ele[3].vol2.dynBal.mOut
hex.ele[3].vol2.dynBal.ports[1].p
hex.ele[3].vol2.dynBal.ports[2].p
hex.ele[3].vol2.dynBal.medium.p
hex.ele[3].vol2.dynBal.medium.d
hex.ele[3].vol2.dynBal.medium.T
hex.ele[3].vol2.dynBal.medium.X[2]
hex.ele[3].vol2.dynBal.medium.u
hex.ele[3].vol2.dynBal.medium.R
hex.ele[3].vol2.dynBal.medium.MM
hex.ele[3].vol2.dynBal.medium.state.p
hex.ele[3].vol2.dynBal.medium.preferredMediumStates
hex.ele[3].vol2.dynBal.medium.standardOrderComponents
hex.ele[3].vol2.dynBal.medium.T_degC
hex.ele[3].vol2.dynBal.medium.p_bar
hex.ele[3].vol2.dynBal.medium.MMX[1]
hex.ele[3].vol2.dynBal.medium.MMX[2]
hex.ele[3].vol2.dynBal.medium.X_air
hex.ele[3].vol2.dynBal.medium.dT
hex.ele[3].vol2.dynBal.U
hex.ele[3].vol2.dynBal.der(U)
hex.ele[3].vol2.dynBal.m
hex.ele[3].vol2.dynBal.der(m)
hex.ele[3].vol2.dynBal.mXi[1]
hex.ele[3].vol2.dynBal.der(mXi[1])
hex.ele[3].vol2.dynBal.mb_flow
hex.ele[3].vol2.dynBal.mbXi_flow[1]
hex.ele[3].vol2.dynBal.Hb_flow
hex.ele[3].vol2.dynBal.fluidVolume
hex.ele[3].vol2.dynBal.CSen
hex.ele[3].vol2.dynBal.ports_H_flow[1]
hex.ele[3].vol2.dynBal.ports_H_flow[2]
hex.ele[3].vol2.dynBal.ports_mXi_flow[1, 1]
hex.ele[3].vol2.dynBal.ports_mXi_flow[2, 1]
hex.ele[3].vol2.dynBal.cp_default
hex.ele[3].vol2.dynBal.rho_start
hex.ele[3].vol2.dynBal.computeCSen
hex.ele[3].vol2.dynBal.state_default.p
hex.ele[3].vol2.dynBal.state_default.T
hex.ele[3].vol2.dynBal.state_default.X[1]
hex.ele[3].vol2.dynBal.state_default.X[2]
hex.ele[3].vol2.dynBal.rho_default
hex.ele[3].vol2.dynBal.s[1]
hex.ele[3].vol2.dynBal.hStart
hex.ele[3].vol2.dynBal._simplify_mWat_flow
hex.ele[4].vol1.dynBal.energyDynamics
hex.ele[4].vol1.dynBal.massDynamics
hex.ele[4].vol1.dynBal.substanceDynamics
hex.ele[4].vol1.dynBal.traceDynamics
hex.ele[4].vol1.dynBal.p_start
hex.ele[4].vol1.dynBal.T_start
hex.ele[4].vol1.dynBal.X_start[1]
hex.ele[4].vol1.dynBal.mSenFac
hex.ele[4].vol1.dynBal.initialize_p
hex.ele[4].vol1.dynBal.simplify_mWat_flow
hex.ele[4].vol1.dynBal.nPorts
hex.ele[4].vol1.dynBal.use_mWat_flow
hex.ele[4].vol1.dynBal.use_C_flow
hex.ele[4].vol1.dynBal.mOut
hex.ele[4].vol1.dynBal.medium.T
hex.ele[4].vol1.dynBal.medium.d
hex.ele[4].vol1.dynBal.medium.X[1]
hex.ele[4].vol1.dynBal.medium.R
hex.ele[4].vol1.dynBal.medium.MM
hex.ele[4].vol1.dynBal.medium.preferredMediumStates
hex.ele[4].vol1.dynBal.medium.standardOrderComponents
hex.ele[4].vol1.dynBal.medium.T_degC
hex.ele[4].vol1.dynBal.medium.p_bar
hex.ele[4].vol1.dynBal.U
hex.ele[4].vol1.dynBal.der(U)
hex.ele[4].vol1.dynBal.m
hex.ele[4].vol1.dynBal.der(m)
hex.ele[4].vol1.dynBal.mb_flow
hex.ele[4].vol1.dynBal.Hb_flow
hex.ele[4].vol1.dynBal.fluidVolume
hex.ele[4].vol1.dynBal.CSen
hex.ele[4].vol1.dynBal.ports_H_flow[1]
hex.ele[4].vol1.dynBal.ports_H_flow[2]
hex.ele[4].vol1.dynBal.cp_default
hex.ele[4].vol1.dynBal.rho_start
hex.ele[4].vol1.dynBal.computeCSen
hex.ele[4].vol1.dynBal.state_default.p
hex.ele[4].vol1.dynBal.state_default.T
hex.ele[4].vol1.dynBal.rho_default
hex.ele[4].vol1.dynBal.hStart
hex.ele[4].vol1.dynBal._simplify_mWat_flow
hex.ele[4].vol1.dynBal.mWat_flow_internal
hex.ele[4].vol2.dynBal.energyDynamics
hex.ele[4].vol2.dynBal.massDynamics
hex.ele[4].vol2.dynBal.substanceDynamics
hex.ele[4].vol2.dynBal.traceDynamics
hex.ele[4].vol2.dynBal.p_start
hex.ele[4].vol2.dynBal.T_start
hex.ele[4].vol2.dynBal.X_start[1]
hex.ele[4].vol2.dynBal.X_start[2]
hex.ele[4].vol2.dynBal.mSenFac
hex.ele[4].vol2.dynBal.initialize_p
hex.ele[4].vol2.dynBal.simplify_mWat_flow
hex.ele[4].vol2.dynBal.nPorts
hex.ele[4].vol2.dynBal.use_mWat_flow
hex.ele[4].vol2.dynBal.use_C_flow
hex.ele[4].vol2.dynBal.mOut
hex.ele[4].vol2.dynBal.ports[1].p
hex.ele[4].vol2.dynBal.ports[2].p
hex.ele[4].vol2.dynBal.medium.p
hex.ele[4].vol2.dynBal.medium.d
hex.ele[4].vol2.dynBal.medium.T
hex.ele[4].vol2.dynBal.medium.X[2]
hex.ele[4].vol2.dynBal.medium.u
hex.ele[4].vol2.dynBal.medium.R
hex.ele[4].vol2.dynBal.medium.MM
hex.ele[4].vol2.dynBal.medium.state.p
hex.ele[4].vol2.dynBal.medium.preferredMediumStates
hex.ele[4].vol2.dynBal.medium.standardOrderComponents
hex.ele[4].vol2.dynBal.medium.T_degC
hex.ele[4].vol2.dynBal.medium.p_bar
hex.ele[4].vol2.dynBal.medium.MMX[1]
hex.ele[4].vol2.dynBal.medium.MMX[2]
hex.ele[4].vol2.dynBal.medium.X_air
hex.ele[4].vol2.dynBal.medium.dT
hex.ele[4].vol2.dynBal.U
hex.ele[4].vol2.dynBal.der(U)
hex.ele[4].vol2.dynBal.m
hex.ele[4].vol2.dynBal.der(m)
hex.ele[4].vol2.dynBal.mXi[1]
hex.ele[4].vol2.dynBal.der(mXi[1])
hex.ele[4].vol2.dynBal.mb_flow
hex.ele[4].vol2.dynBal.mbXi_flow[1]
hex.ele[4].vol2.dynBal.Hb_flow
hex.ele[4].vol2.dynBal.fluidVolume
hex.ele[4].vol2.dynBal.CSen
hex.ele[4].vol2.dynBal.ports_H_flow[1]
hex.ele[4].vol2.dynBal.ports_H_flow[2]
hex.ele[4].vol2.dynBal.ports_mXi_flow[1, 1]
hex.ele[4].vol2.dynBal.ports_mXi_flow[2, 1]
hex.ele[4].vol2.dynBal.cp_default
hex.ele[4].vol2.dynBal.rho_start
hex.ele[4].vol2.dynBal.computeCSen
hex.ele[4].vol2.dynBal.state_default.p
hex.ele[4].vol2.dynBal.state_default.T
hex.ele[4].vol2.dynBal.state_default.X[1]
hex.ele[4].vol2.dynBal.state_default.X[2]
hex.ele[4].vol2.dynBal.rho_default
hex.ele[4].vol2.dynBal.s[1]
hex.ele[4].vol2.dynBal.hStart
hex.ele[4].vol2.dynBal._simplify_mWat_flow
val.vol.energyDynamics
val.vol.massDynamics
val.vol.substanceDynamics
val.vol.traceDynamics
val.vol.p_start
val.vol.T_start
val.vol.X_start[1]
val.vol.mSenFac
val.vol.initialize_p
val.vol.prescribedHeatFlowRate
val.vol.simplify_mWat_flow
val.vol.m_flow_nominal
val.vol.nPorts
val.vol.m_flow_small
val.vol.allowFlowReversal
val.vol.V
val.vol.T
val.vol.m
val.vol.rho_start
val.vol.state_default.p
val.vol.state_default.T
val.vol.rho_default
val.vol.state_start.p
val.vol.state_start.T
val.vol.useSteadyStateTwoPort
val.vol.preTem.port.Q_flow
val.vol.heaFloSen.Q_flow
val.vol.heaFloSen.port_a.Q_flow
val.vol.heaFloSen.port_b.Q_flow
val.vol.use_C_flow
val.vol.heatPort.Q_flow
val.vol.tau
val.vol.V_nominal
CurculationPump.vol.dynBal.energyDynamics
CurculationPump.vol.dynBal.massDynamics
CurculationPump.vol.dynBal.substanceDynamics
CurculationPump.vol.dynBal.traceDynamics
CurculationPump.vol.dynBal.p_start
CurculationPump.vol.dynBal.T_start
CurculationPump.vol.dynBal.X_start[1]
CurculationPump.vol.dynBal.mSenFac
CurculationPump.vol.dynBal.initialize_p
CurculationPump.vol.dynBal.simplify_mWat_flow
CurculationPump.vol.dynBal.nPorts
CurculationPump.vol.dynBal.use_mWat_flow
CurculationPump.vol.dynBal.use_C_flow
CurculationPump.vol.dynBal.mOut
CurculationPump.vol.dynBal.medium.T
CurculationPump.vol.dynBal.medium.d
CurculationPump.vol.dynBal.medium.X[1]
CurculationPump.vol.dynBal.medium.R
CurculationPump.vol.dynBal.medium.MM
CurculationPump.vol.dynBal.medium.preferredMediumStates
CurculationPump.vol.dynBal.medium.standardOrderComponents
CurculationPump.vol.dynBal.medium.T_degC
CurculationPump.vol.dynBal.medium.p_bar
CurculationPump.vol.dynBal.U
CurculationPump.vol.dynBal.der(U)
CurculationPump.vol.dynBal.m
CurculationPump.vol.dynBal.der(m)
CurculationPump.vol.dynBal.mb_flow
CurculationPump.vol.dynBal.Hb_flow
CurculationPump.vol.dynBal.fluidVolume
CurculationPump.vol.dynBal.CSen
CurculationPump.vol.dynBal.ports_H_flow[1]
CurculationPump.vol.dynBal.ports_H_flow[2]
CurculationPump.vol.dynBal.cp_default
CurculationPump.vol.dynBal.rho_start
CurculationPump.vol.dynBal.computeCSen
CurculationPump.vol.dynBal.state_default.p
CurculationPump.vol.dynBal.state_default.T
CurculationPump.vol.dynBal.rho_default
CurculationPump.vol.dynBal.hStart
CurculationPump.vol.dynBal._simplify_mWat_flow
CurculationPump.vol.dynBal.mWat_flow_internal
val.vol.dynBal.energyDynamics
val.vol.dynBal.massDynamics
val.vol.dynBal.substanceDynamics
val.vol.dynBal.traceDynamics
val.vol.dynBal.p_start
val.vol.dynBal.T_start
val.vol.dynBal.X_start[1]
val.vol.dynBal.mSenFac
val.vol.dynBal.initialize_p
val.vol.dynBal.simplify_mWat_flow
val.vol.dynBal.nPorts
val.vol.dynBal.use_mWat_flow
val.vol.dynBal.use_C_flow
val.vol.dynBal.Q_flow
val.vol.dynBal.mOut
val.vol.dynBal.medium.T
val.vol.dynBal.medium.d
val.vol.dynBal.medium.X[1]
val.vol.dynBal.medium.R
val.vol.dynBal.medium.MM
val.vol.dynBal.medium.preferredMediumStates
val.vol.dynBal.medium.standardOrderComponents
val.vol.dynBal.medium.T_degC
val.vol.dynBal.medium.p_bar
val.vol.dynBal.U
val.vol.dynBal.der(U)
val.vol.dynBal.m
val.vol.dynBal.der(m)
val.vol.dynBal.mb_flow
val.vol.dynBal.fluidVolume
val.vol.dynBal.CSen
val.vol.dynBal.ports_H_flow[1]
val.vol.dynBal.ports_H_flow[2]
val.vol.dynBal.ports_H_flow[3]
val.vol.dynBal.cp_default
val.vol.dynBal.rho_start
val.vol.dynBal.computeCSen
val.vol.dynBal.state_default.p
val.vol.dynBal.state_default.T
val.vol.dynBal.rho_default
val.vol.dynBal.hStart
val.vol.dynBal._simplify_mWat_flow
val.vol.dynBal.mWat_flow_internal

double initialValue(2144,6)
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+100
  1   280   # system.p_ambient
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # system.T_ambient
 -1 9.8066499999999994E+000       0                       0                
  1   280   # system.g
  0       1                       0                       0                
  6   257   # system.allowFlowReversal
  0       1                       1                       4                
  6   258   # system.energyDynamics
  0       1                       1                       4                
  6   258   # system.massDynamics
  0       1                       1                       4                
  6   258   # system.substanceDynamics
  0       1                       1                       4                
  6   258   # system.traceDynamics
  0       4                       1                       4                
  6   258   # system.momentumDynamics
 -1       0                       0                       0                
  1   280   # system.m_flow_start
  0       0                       0                 1.0000000000000000E+100
  6   256   # system.p_start
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # system.T_start
  0       0                       0                       0                
  6   257   # system.use_eps_Re
  0       0                       0                       0                
  6   256   # system.m_flow_nominal
 -1 1.0000000000000000E-004       0                 1.0000000000000000E+100
  1   280   # system.eps_m_flow
 -1       1                       0                 1.0000000000000000E+100
  1   280   # system.dp_small
 -1 1.0000000000000000E-002       0                 1.0000000000000000E+100
  1   280   # system.m_flow_small
  0       1                       0                       0                
  6   258   # IntakeAirSource.nPorts
  0       1                       0                  100000                
  6   256   # IntakeAirSource.medium.d
  0 9.8999999999999999E-001       0                       1                
  6   256   # IntakeAirSource.medium.X[2]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6   256   # IntakeAirSource.medium.u
  0    1000                       0                 1.0000000000000000E+007
  6   256   # IntakeAirSource.medium.R
  0 3.2000000000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6   256   # IntakeAirSource.medium.MM
  0       0                       0                       0                
  6   257   # IntakeAirSource.medium.preferredMediumStates
  0       1                       0                       0                
  6   257   # IntakeAirSource.medium.standardOrderComponents
  0       0                       0                       0                
  6   256   # IntakeAirSource.medium.T_degC
  0       0                       0                       0                
  6   256   # IntakeAirSource.medium.p_bar
  0 1.8015280000000002E-002       0                 1.0000000000000000E+100
  6  1280   # IntakeAirSource.medium.MMX[1]
  0 2.8965115900000001E-002       0                 1.0000000000000000E+100
  6  1280   # IntakeAirSource.medium.MMX[2]
  0       0                       0                       1                
  6  1280   # IntakeAirSource.medium.X_air
  0      20                       0                       0                
  6  1280   # IntakeAirSource.medium.dT
  0       0                 -100000                  100000                
  6   388   # IntakeAirSource.ports[1].m_flow
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   260   # IntakeAirSource.ports[1].p
  0 4.5300945000000000E+004 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # IntakeAirSource.ports[1].h_outflow
  0 1.0000000000000000E-002       0                       1                
  6   260   # IntakeAirSource.ports[1].Xi_outflow[1]
  0       3                       1                       3                
  6  1282   # IntakeAirSource.flowDirection
  0       1                       0                       0                
  6   769   # IntakeAirSource.use_m_flow_in
  0       1                       0                       0                
  6   769   # IntakeAirSource.use_T_in
  0       1                       0                       0                
  6   769   # IntakeAirSource.use_X_in
  0       0                       0                       0                
  6   769   # IntakeAirSource.use_C_in
  0 5.0000000000000000E-001 -100000                  100000                
  6   256   # IntakeAirSource.m_flow
  0 3.0314999999999998E+002       1                   10000                
  6   256   # IntakeAirSource.T
  0 2.9999999999999999E-002       0                       1                
  6   256   # IntakeAirSource.X[1]
  0 9.6999999999999997E-001       0                       1                
  6   256   # IntakeAirSource.X[2]
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # IntakeAirSource.T_in_internal
  0 1.0000000000000000E-002       0                       1                
  6  1280   # IntakeAirSource.X_in_internal[1]
  0       0                       0                       0                
  6  1280   # IntakeAirSource.X_in_internal[2]
  0       1                       0                       0                
  6   258   # IntakeAirSink.nPorts
  0 1.0130000000000000E+005       0                 1.0000000000000000E+100
  6   256   # IntakeAirSink.medium.p
  0 1.0000000000000000E-002       0                       1                
  6   256   # IntakeAirSink.medium.Xi[1]
  0 4.5300945000000000E+004       0                       0                
  6   256   # IntakeAirSink.medium.h
  0 1.1997039230199851E+000       0                  100000                
  6   256   # IntakeAirSink.medium.d
  0 2.9314999999999998E+002       1                   10000                
  6   256   # IntakeAirSink.medium.T
  0 1.0000000000000000E-002       0                       1                
  6   256   # IntakeAirSink.medium.X[1]
  0 9.8999999999999999E-001       0                       1                
  6   256   # IntakeAirSink.medium.X[2]
  0 -3.9136555000000000E+004 -1.0000000000000000E+008 1.0000000000000000E+008
  6   256   # IntakeAirSink.medium.u
  0 2.8879594599429981E+002       0                 1.0000000000000000E+007
  6   256   # IntakeAirSink.medium.R
  0 2.8790127130676937E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6   256   # IntakeAirSink.medium.MM
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6   256   # IntakeAirSink.medium.state.p
  0 2.9314999999999998E+002       1                   10000                
  6   256   # IntakeAirSink.medium.state.T
  0 1.0000000000000000E-002       0                       1                
  6   256   # IntakeAirSink.medium.state.X[1]
  0 9.8999999999999999E-001       0                       1                
  6   256   # IntakeAirSink.medium.state.X[2]
  0       0                       0                       0                
  6   257   # IntakeAirSink.medium.preferredMediumStates
  0       1                       0                       0                
  6   257   # IntakeAirSink.medium.standardOrderComponents
  0      20                       0                       0                
  6   256   # IntakeAirSink.medium.T_degC
  0 1.0130000000000001E+000       0                       0                
  6   256   # IntakeAirSink.medium.p_bar
  0 1.8015280000000002E-002       0                 1.0000000000000000E+100
  6  1280   # IntakeAirSink.medium.MMX[1]
  0 2.8965115900000001E-002       0                 1.0000000000000000E+100
  6  1280   # IntakeAirSink.medium.MMX[2]
  0 1.0000000000000000E-002       0                       1                
  6  1280   # IntakeAirSink.medium.X_steam
  0 9.8999999999999999E-001       0                       1                
  6  1280   # IntakeAirSink.medium.X_air
  0      20                       0                       0                
  6  1280   # IntakeAirSink.medium.dT
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6   260   # IntakeAirSink.ports[1].p
  0 4.5300945000000000E+004 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # IntakeAirSink.ports[1].h_outflow
  0 1.0000000000000000E-002       0                       1                
  6   260   # IntakeAirSink.ports[1].Xi_outflow[1]
  0       3                       1                       3                
  6  1282   # IntakeAirSink.flowDirection
  0       0                       0                       0                
  6   769   # IntakeAirSink.use_p_in
  0       0                       0                       0                
  6   769   # IntakeAirSink.use_T_in
  0       0                       0                       0                
  6   769   # IntakeAirSink.use_X_in
  0       0                       0                       0                
  6   769   # IntakeAirSink.use_C_in
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6   256   # IntakeAirSink.p
  0 2.9314999999999998E+002       1                   10000                
  6   256   # IntakeAirSink.T
  0 1.0000000000000000E-002       0                       1                
  6   256   # IntakeAirSink.X[1]
  0 9.8999999999999999E-001       0                       1                
  6   256   # IntakeAirSink.X[2]
  0 1.0130000000000000E+005       0                       0                
  6  1280   # IntakeAirSink.p_in_internal
  0 2.9314999999999998E+002       0                       0                
  6  1280   # IntakeAirSink.T_in_internal
  0 1.0000000000000000E-002       0                       0                
  6  1280   # IntakeAirSink.X_in_internal[1]
  0 9.8999999999999999E-001       0                       0                
  6  1280   # IntakeAirSink.X_in_internal[2]
  0       0                       0                       0                
  6   256   # toKelvin.Celsius
  0       0                       0                       0                
  6   256   # VolumeToMassFlowIntake.u1
  0       1                       0                 1.0000000000000000E+100
  6   256   # Pressure.k
 -1 1.2040999999999999E+000       0                       0                
  1   280   # Density.k
  0       1                       1                 1.0000000000000000E+100
  6   258   # decisionVariables.nout
  0       0                       0                       0                
  6   256   # decisionVariables.y[1]
  0       1                       0                       0                
  6   257   # decisionVariables.tableOnFile
 -1       1                       0                       0                
  1   281   # decisionVariables.verboseRead
 -1       2                       0                       0                
  1   282   # decisionVariables.columns[1]
  0       3                       1                       5                
  6   258   # decisionVariables.smoothness
 -1       1                       1                       4                
  1   282   # decisionVariables.extrapolation
 -1       0                       0                       0                
  1   280   # decisionVariables.offset[1]
 -1       0                       0                       0                
  1   280   # decisionVariables.startTime
  0       1                 1.0000000000000001E-015 1.0000000000000000E+100
  6   256   # decisionVariables.timeScale
  0       0                       0                       0                
  6   256   # decisionVariables.t_min
  0       0                       0                       0                
  6   256   # decisionVariables.t_max
  0       0                       0                       0                
  6   256   # decisionVariables.t_minScaled
  0       0                       0                       0                
  6   256   # decisionVariables.t_maxScaled
  0       0                       0                       0                
  6  1280   # decisionVariables.p_offset[1]
  0       0                       0                       0                
  6  1282   # decisionVariables.tableID.id
  0       0                       0                       0                
  6  1352   # decisionVariables.nextTimeEvent
  0       0                       0                       0                
  6  1352   # decisionVariables.nextTimeEventScaled
  0       0                       0                       0                
  6  1280   # decisionVariables.tableOnFileRead
  0 1.7976931348623157E+308       0                       0                
  6  1280   # decisionVariables.DBL_MAX
  0       0                       0                       0                
  6  1280   # decisionVariables.timeScaled
  0       2                       1                 1.0000000000000000E+100
  6   258   # MeasuredData.nout
  0       0                       0                       0                
  6   256   # MeasuredData.y[1]
  0       0                       0                       0                
  6   256   # MeasuredData.y[2]
  0       1                       0                       0                
  6   257   # MeasuredData.tableOnFile
 -1       1                       0                       0                
  1   281   # MeasuredData.verboseRead
 -1       2                       0                       0                
  1   282   # MeasuredData.columns[1]
 -1       3                       0                       0                
  1   282   # MeasuredData.columns[2]
  0       1                       1                       5                
  6   258   # MeasuredData.smoothness
 -1       1                       1                       4                
  1   282   # MeasuredData.extrapolation
 -1       0                       0                       0                
  1   280   # MeasuredData.offset[1]
 -1       0                       0                       0                
  1   280   # MeasuredData.startTime
  0       1                 1.0000000000000001E-015 1.0000000000000000E+100
  6   256   # MeasuredData.timeScale
  0       0                       0                       0                
  6   256   # MeasuredData.t_min
  0       0                       0                       0                
  6   256   # MeasuredData.t_max
  0       0                       0                       0                
  6   256   # MeasuredData.t_minScaled
  0       0                       0                       0                
  6   256   # MeasuredData.t_maxScaled
  0       0                       0                       0                
  6  1280   # MeasuredData.p_offset[1]
  0       0                       0                       0                
  6  1280   # MeasuredData.p_offset[2]
  0       0                       0                       0                
  6  1282   # MeasuredData.tableID.id
  0       0                       0                       0                
  6  1352   # MeasuredData.nextTimeEvent
  0       0                       0                       0                
  6  1352   # MeasuredData.nextTimeEventScaled
  0       0                       0                       0                
  6  1280   # MeasuredData.tableOnFileRead
  0 1.7976931348623157E+308       0                       0                
  6  1280   # MeasuredData.DBL_MAX
  0       0                       0                       0                
  6  1280   # MeasuredData.timeScaled
  0       2                       1                 1.0000000000000000E+100
  6   258   # volumeFlow.nout
  0       0                       0                       0                
  6   256   # volumeFlow.y[2]
  0       0                       0                       0                
  6   257   # volumeFlow.tableOnFile
 -1       0                       0                       0                
  1   280   # volumeFlow.table[1, 1]
 -1 3.1000000000000000E-001       0                       0                
  1   280   # volumeFlow.table[1, 2]
 -1 2.8999999999999998E-001       0                       0                
  1   280   # volumeFlow.table[1, 3]
 -1       1                       0                       0                
  1   281   # volumeFlow.verboseRead
 -1       2                       0                       0                
  1   282   # volumeFlow.columns[1]
 -1       3                       0                       0                
  1   282   # volumeFlow.columns[2]
  0       1                       1                       5                
  6   258   # volumeFlow.smoothness
 -1       2                       1                       4                
  1   282   # volumeFlow.extrapolation
 -1       0                       0                       0                
  1   280   # volumeFlow.offset[1]
 -1       0                       0                       0                
  1   280   # volumeFlow.startTime
  0       1                 1.0000000000000001E-015 1.0000000000000000E+100
  6   256   # volumeFlow.timeScale
  0       0                       0                       0                
  6   256   # volumeFlow.t_min
  0       0                       0                       0                
  6   256   # volumeFlow.t_max
  0       0                       0                       0                
  6   256   # volumeFlow.t_minScaled
  0       0                       0                       0                
  6   256   # volumeFlow.t_maxScaled
  0       0                       0                       0                
  6  1280   # volumeFlow.p_offset[1]
  0       0                       0                       0                
  6  1280   # volumeFlow.p_offset[2]
  0       0                       0                       0                
  6  1282   # volumeFlow.tableID.id
  0       0                       0                       0                
  6  1352   # volumeFlow.nextTimeEvent
  0       0                       0                       0                
  6  1352   # volumeFlow.nextTimeEventScaled
  0       0                       0                       0                
  6  1280   # volumeFlow.tableOnFileRead
  0 1.7976931348623157E+308       0                       0                
  6  1280   # volumeFlow.DBL_MAX
  0       0                       0                       0                
  6  1280   # volumeFlow.timeScaled
  0       2                       1                 1.0000000000000000E+100
  6   258   # variation.nout
  0       0                       0                       0                
  6   256   # variation.y[2]
  0       1                       0                       0                
  6   257   # variation.tableOnFile
 -1       1                       0                       0                
  1   281   # variation.verboseRead
 -1       2                       0                       0                
  1   282   # variation.columns[1]
 -1       3                       0                       0                
  1   282   # variation.columns[2]
  0       1                       1                       5                
  6   258   # variation.smoothness
 -1       1                       1                       4                
  1   282   # variation.extrapolation
 -1       0                       0                       0                
  1   280   # variation.offset[1]
 -1       0                       0                       0                
  1   280   # variation.startTime
  0       1                 1.0000000000000001E-015 1.0000000000000000E+100
  6   256   # variation.timeScale
  0       0                       0                       0                
  6   256   # variation.t_min
  0       0                       0                       0                
  6   256   # variation.t_max
  0       0                       0                       0                
  6   256   # variation.t_minScaled
  0       0                       0                       0                
  6   256   # variation.t_maxScaled
  0       0                       0                       0                
  6  1280   # variation.p_offset[1]
  0       0                       0                       0                
  6  1280   # variation.p_offset[2]
  0       0                       0                       0                
  6  1282   # variation.tableID.id
  0       0                       0                       0                
  6  1352   # variation.nextTimeEvent
  0       0                       0                       0                
  6  1352   # variation.nextTimeEventScaled
  0       0                       0                       0                
  6  1280   # variation.tableOnFileRead
  0 1.7976931348623157E+308       0                       0                
  6  1280   # variation.DBL_MAX
  0       0                       0                       0                
  6  1280   # variation.timeScaled
  0       0                       0                 1.0000000000000000E+100
  6   256   # toKelvin3.Kelvin
  0       1                       0                       0                
  6   769   # x_pTphi1.use_p_in
 -1 1.0132500000000000E+005       0                       0                
  1   280   # x_pTphi1.p
  0       0                       0                       1                
  6   256   # x_pTphi1.phi
  0       0                       0                       1                
  6   256   # x_pTphi1.X[1]
  0       0                       0                       1                
  6   256   # x_pTphi1.X[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # x_pTphi1.pSat
  0       1                       0                       0                
  6  1282   # x_pTphi1.i_w
  0       2                       0                       0                
  6  1282   # x_pTphi1.i_nw
  0       1                       0                       0                
  6  1281   # x_pTphi1.found
  0       1                       0                       0                
  6   769   # x_pTphi2.use_p_in
 -1 1.0132500000000000E+005       0                       0                
  1   280   # x_pTphi2.p
  0       0                       0                 1.0000000000000000E+100
  6   256   # x_pTphi2.T
  0       0                       0                       1                
  6   256   # x_pTphi2.phi
  0       0                       0                       1                
  6   256   # x_pTphi2.X[1]
  0       0                       0                       1                
  6   256   # x_pTphi2.X[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # x_pTphi2.pSat
  0       1                       0                       0                
  6  1282   # x_pTphi2.i_w
  0       2                       0                       0                
  6  1282   # x_pTphi2.i_nw
  0       1                       0                       0                
  6  1281   # x_pTphi2.found
  0       0                       0                       0                
  6   256   # toDryAir.XiDry
  0       0                       0                  100000                
  6   388   # supplyAirHumidity.port.m_flow
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6   260   # supplyAirHumidity.port.p
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # supplyAirHumidity.port.h_outflow
  0       0                       0                       1                
  6   260   # supplyAirHumidity.port.Xi_outflow[1]
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6  1280   # supplyAirHumidity.T
  0       0                       0                       1                
  6  1280   # supplyAirHumidity.Xi[1]
  0       0                       0                  100000                
  6   388   # supplyAirTemperature.port.m_flow
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6   260   # supplyAirTemperature.port.p
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # supplyAirTemperature.port.h_outflow
  0       0                       0                       1                
  6   260   # supplyAirTemperature.port.Xi_outflow[1]
  0       0                       0                       0                
  6   256   # fromKelvin.Celsius
 -1 1.0000000000000000E-002       0                       0                
  1   280   # convertPercent.k
 -1 1.0130000000000000E+005       0                       0                
  1   280   # defaultPressure
 -1      15                       0                       0                
  1   280   # specificCost
  0       0                       0                  100000                
  6   388   # senTemp1.port.m_flow
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # senTemp1.port.h_outflow
  0       0                       0                 1.0000000000000000E+100
  6   256   # senTemp1.T
  0       0                       0                       0                
  4   256   # returnTemperature
  0       1                       0                       0                
  6   257   # hex.allowFlowReversal1
  0       1                       0                       0                
  6   257   # hex.allowFlowReversal2
  0       0                 -100000                  100000                
  6   420   # hex.port_a1.m_flow
  0       0                       0                 1.0000000000000000E+008
  6   260   # hex.port_a1.p
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # hex.port_a1.h_outflow
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # hex.port_b1.h_outflow
  0 4.5300945000000000E+004 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # hex.port_a2.h_outflow
  0 1.0000000000000000E-002       0                       1                
  6   260   # hex.port_a2.Xi_outflow[1]
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6   260   # hex.port_b2.p
  0 4.5300945000000000E+004 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # hex.port_b2.h_outflow
  0 1.0000000000000000E-002       0                       1                
  6   260   # hex.port_b2.Xi_outflow[1]
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6   256   # hex.m1_flow_nominal
  0 5.0000000000000000E-001       0                 1.0000000000000000E+100
  6   256   # hex.m2_flow_nominal
  0 1.0000000000000001E-005       0                  100000                
  6   256   # hex.m1_flow_small
  0 5.0000000000000002E-005       0                  100000                
  6   256   # hex.m2_flow_small
  0       0                       0                       0                
  6   257   # hex.show_T
  0       0                       0                       0                
  6   256   # hex.dp1
  0       0                       0                       0                
  6   256   # hex.dp2
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.state_a1_inflow.T
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.state_b1_inflow.T
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.state_a2_inflow.T
  0 9.8999999999999999E-001       0                       1                
  6  1280   # hex.state_a2_inflow.X[2]
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.state_b2_inflow.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.state_b2_inflow.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # hex.state_b2_inflow.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # hex.state_b2_inflow.X[2]
  0       0                       0                       0                
  6   257   # hex.computeFlowResistance1
  0       0                       0                       0                
  6   257   # hex.from_dp1
  0    8000                       0                 1.0000000000000000E+100
  6   256   # hex.dp1_nominal
 -1       0                       0                       0                
  1   281   # hex.linearizeFlowResistance1
  0 1.0000000000000001E-001       0                       0                
  6   256   # hex.deltaM1
  0       0                       0                       0                
  6   257   # hex.computeFlowResistance2
  0       0                       0                       0                
  6   257   # hex.from_dp2
  0     200                       0                 1.0000000000000000E+100
  6   256   # hex.dp2_nominal
 -1       0                       0                       0                
  1   281   # hex.linearizeFlowResistance2
  0 1.0000000000000001E-001       0                       0                
  6   256   # hex.deltaM2
 -1    1000                       0                 1.0000000000000000E+100
  1   280   # hex.UA_nominal
 -1 6.6666666666666663E-001       0                       0                
  1   280   # hex.r_nominal
  0       4                       1                 1.0000000000000000E+100
  6   258   # hex.nEle
  0       1                       1                       4                
  6   258   # hex.energyDynamics
  0      10                       0                       0                
  6   256   # hex.tau1
  0       2                       0                       0                
  6   256   # hex.tau2
 -1       5                       0                       0                
  1   280   # hex.tau_m
  0       1                       0                       0                
  6   257   # hex.waterSideFlowDependent
  0       1                       0                       0                
  6   257   # hex.airSideFlowDependent
  0       0                       0                       0                
  6   257   # hex.waterSideTemperatureDependent
  0       0                       0                       0                
  6   257   # hex.airSideTemperatureDependent
  0       0                       0                       0                
  6   256   # hex.GDif
  0       0                       0                       0                
  6   256   # hex.Q1_flow
  0       0                       0                       0                
  6   256   # hex.Q2_flow
  0     300                       1                   10000                
  6   256   # hex.T1[1]
  0     300                       1                   10000                
  6   256   # hex.T1[2]
  0     300                       1                   10000                
  6   256   # hex.T1[3]
  0     300                       1                   10000                
  6   256   # hex.T1[4]
  0     300                       1                   10000                
  6   256   # hex.T2[1]
  0     300                       1                   10000                
  6   256   # hex.T2[2]
  0     300                       1                   10000                
  6   256   # hex.T2[3]
  0     300                       1                   10000                
  6   256   # hex.T2[4]
  0       0                       0                 1.0000000000000000E+100
  6   256   # hex.hA.UA_nominal
  0 1.0000000000000001E-001       0                       0                
  6   256   # hex.hA.m_flow_nominal_w
  0 5.0000000000000000E-001       0                       0                
  6   256   # hex.hA.m_flow_nominal_a
  0 2.9314999999999998E+002       0                       0                
  6   256   # hex.hA.T_1
  0 2.9314999999999998E+002       0                       0                
  6   256   # hex.hA.T_2
  0       0                       0                       0                
  6   256   # hex.hA.hA_1
  0       0                       0                       0                
  6   256   # hex.hA.hA_2
  0       0                       0                 1.0000000000000000E+100
  6   256   # hex.hA.r_nominal
  0       0                       0                 1.0000000000000000E+100
  6   256   # hex.hA.hA_nominal_w
  0       0                       0                 1.0000000000000000E+100
  6   256   # hex.hA.hA_nominal_a
 -1 8.4999999999999998E-001       0                       1                
  1   280   # hex.hA.n_w
 -1 8.0000000000000004E-001       0                       1                
  1   280   # hex.hA.n_a
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # hex.hA.T0_w
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # hex.hA.T0_a
  0       1                       0                       0                
  6   257   # hex.hA.waterSideFlowDependent
  0       1                       0                       0                
  6   257   # hex.hA.airSideFlowDependent
  0       0                       0                       0                
  6   257   # hex.hA.waterSideTemperatureDependent
  0       0                       0                       0                
  6   257   # hex.hA.airSideTemperatureDependent
  0       1                       0                 1.0000000000000000E+100
  6  1280   # hex.hA.x_a
  0       1                       0                 1.0000000000000000E+100
  6  1280   # hex.hA.x_w
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.hA.s_w
  0       0                       0                       0                
  6  1280   # hex.hA.fm_w
  0       0                       0                       0                
  6  1280   # hex.hA.fm_a
  0       0                       0                       0                
  6  1281   # hex.use_temSen_1
  0       0                       0                       0                
  6  1281   # hex.use_temSen_2
  0       1                       0                       0                
  6  1281   # hex.temSen_1.allowFlowReversal
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6  1280   # hex.temSen_1.m_flow_nominal
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6  1280   # hex.temSen_1.m_flow_small
  0       1                       0                       1                
  6  1280   # _GlobalScope.Modelica.Media.Interfaces.PartialPureSubstance.X_default[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.temSen_1.tau
  0       3                       1                       4                
  6  1282   # hex.temSen_1.initType
  0       1                       0                       0                
  6  1280   # hex.temSen_1.k
  0       0                       0                       0                
  6  1281   # hex.temSen_1.dynamic
  0       1                       0                       0                
  6  1280   # hex.temSen_1.mNor_flow
  0       0                       0                       0                
  6  1280   # hex.temSen_1.tauInv
  0     300                       1                   10000                
  6  1280   # hex.temSen_1.T
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1  1304   # hex.temSen_1.T_start
  0       0                       0                       0                
  6  1281   # hex.temSen_1.transferHeat
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1  1304   # hex.temSen_1.TAmb
 -1    1200                       1                 1.0000000000000000E+100
  1  1304   # hex.temSen_1.tauHeaTra
  0       0                       0                       0                
  6  1280   # hex.temSen_1.tauHeaTraInv
  0       1                       0                       0                
  6  1280   # hex.temSen_1.ratTau
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.temSen_1.T_a_inflow
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.temSen_1.T_b_inflow
  0       1                       0                       0                
  6  1281   # hex.masFloSen_1.allowFlowReversal
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.masFloSen_1.m_flow_nominal
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.masFloSen_1.m_flow_small
  0       1                       0                       1                
  6  1280   # _GlobalScope.Modelica.Media.Interfaces.PartialPureSubstance.X_default_Unique24[1]
  0       1                       0                       0                
  6  1281   # hex.temSen_2.allowFlowReversal
  0 5.0000000000000000E-001       0                 1.0000000000000000E+100
  6  1280   # hex.temSen_2.m_flow_nominal
  0 5.0000000000000002E-005       0                 1.0000000000000000E+100
  6  1280   # hex.temSen_2.m_flow_small
  0 1.0000000000000000E-002       0                       1                
  6  1280   # _GlobalScope.Modelica.Media.Interfaces.PartialMixtureMedium.X_default[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # _GlobalScope.Modelica.Media.Interfaces.PartialMixtureMedium.X_default[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.temSen_2.tau
  0       3                       1                       4                
  6  1282   # hex.temSen_2.initType
  0       1                       0                       0                
  6  1280   # hex.temSen_2.k
  0       0                       0                       0                
  6  1281   # hex.temSen_2.dynamic
  0       1                       0                       0                
  6  1280   # hex.temSen_2.mNor_flow
  0       0                       0                       0                
  6  1280   # hex.temSen_2.tauInv
  0     300                       1                   10000                
  6  1280   # hex.temSen_2.T
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1  1304   # hex.temSen_2.T_start
  0       0                       0                       0                
  6  1281   # hex.temSen_2.transferHeat
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1  1304   # hex.temSen_2.TAmb
 -1    1200                       1                 1.0000000000000000E+100
  1  1304   # hex.temSen_2.tauHeaTra
  0       0                       0                       0                
  6  1280   # hex.temSen_2.tauHeaTraInv
  0       1                       0                       0                
  6  1280   # hex.temSen_2.ratTau
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.temSen_2.T_a_inflow
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.temSen_2.T_b_inflow
  0       1                       0                       0                
  6  1281   # hex.masFloSen_2.allowFlowReversal
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.masFloSen_2.m_flow_nominal
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.masFloSen_2.m_flow_small
  0 1.0000000000000000E-002       0                       1                
  6  1280   # _GlobalScope.Modelica.Media.Interfaces.PartialMixtureMedium.X_default_Unique26[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # _GlobalScope.Modelica.Media.Interfaces.PartialMixtureMedium.X_default_Unique26[2]
  0 2.5000000000000000E-001       0                       0                
  6  1280   # hex.gai_1.k
  0       0                       0                       0                
  6  1280   # hex.gai_1.y
  0 2.5000000000000000E-001       0                       0                
  6  1280   # hex.gai_2.k
  0       0                       0                       0                
  6  1280   # hex.gai_2.y
  0       1                       0                       0                
  6  1281   # hex.ele[1].allowFlowReversal1
  0       1                       0                       0                
  6  1281   # hex.ele[1].allowFlowReversal2
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hex.ele[1].port_a2.p
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hex.ele[1].port_b2.p
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].m1_flow_nominal
  0 5.0000000000000000E-001       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].m2_flow_nominal
  0 1.0000000000000001E-005       0                  100000                
  6  1280   # hex.ele[1].m1_flow_small
  0 5.0000000000000002E-005       0                  100000                
  6  1280   # hex.ele[1].m2_flow_small
  0       0                       0                       0                
  6  1281   # hex.ele[1].show_T
  0       0                       0                       0                
  6  1280   # hex.ele[1].dp1
  0       0                       0                       0                
  6  1280   # hex.ele[1].dp2
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[1].state_a1_inflow.T
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[1].state_b1_inflow.T
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[1].state_a2_inflow.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[1].state_a2_inflow.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # hex.ele[1].state_a2_inflow.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # hex.ele[1].state_a2_inflow.X[2]
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[1].state_b2_inflow.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[1].state_b2_inflow.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # hex.ele[1].state_b2_inflow.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # hex.ele[1].state_b2_inflow.X[2]
  0       1                       0                       0                
  6  1281   # hex.ele[1].computeFlowResistance1
  0       0                       0                       0                
  6  1281   # hex.ele[1].from_dp1
  0    8000                       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].dp1_nominal
  0       0                       0                       0                
  6  1281   # hex.ele[1].linearizeFlowResistance1
  0 1.0000000000000001E-001       0                       0                
  6  1280   # hex.ele[1].deltaM1
  0       1                       0                       0                
  6  1281   # hex.ele[1].computeFlowResistance2
  0       0                       0                       0                
  6  1281   # hex.ele[1].from_dp2
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].dp2_nominal
  0       0                       0                       0                
  6  1281   # hex.ele[1].linearizeFlowResistance2
  0 1.0000000000000001E-001       0                       0                
  6  1280   # hex.ele[1].deltaM2
  0 2.5000000000000000E+000       0                       0                
  6  1280   # hex.ele[1].tau1
  0       2                       0                       0                
  6  1280   # hex.ele[1].tau2
  0       1                       0                       0                
  6  1281   # hex.ele[1].homotopyInitialization
  0       1                       1                       4                
  6  1282   # hex.ele[1].energyDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[1].massDynamics
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1  1304   # hex.ele[1].p1_start
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # hex.ele[1].T1_start
 -1       1                       0                       1                
  1  1304   # hex.ele[1].X1_start[1]
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # hex.ele[1].p2_start
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # hex.ele[1].T2_start
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # hex.ele[1].X2_start[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # hex.ele[1].X2_start[2]
  0       0                       0                       0                
  6  1280   # hex.ele[1].Q1_flow
  0       0                       0                       0                
  6  1280   # hex.ele[1].Q2_flow
  0       1                       1                       4                
  6  1282   # hex.ele[1].vol1.energyDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[1].vol1.massDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[1].vol1.substanceDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[1].vol1.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[1].vol1.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[1].vol1.T_start
  0       0                       0                       1                
  6  1280   # hex.ele[1].vol1.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # hex.ele[1].vol1.mSenFac
  0       0                       0                       0                
  6   769   # hex.ele[1].vol1.initialize_p
  0       0                       0                       0                
  6  1281   # hex.ele[1].vol1.prescribedHeatFlowRate
  0       1                       0                       0                
  6  1281   # hex.ele[1].vol1.simplify_mWat_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].vol1.m_flow_nominal
  0       2                       0                       0                
  6  1282   # hex.ele[1].vol1.nPorts
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].vol1.m_flow_small
  0       1                       0                       0                
  6  1281   # hex.ele[1].vol1.allowFlowReversal
  0 2.5110839244424891E-004       0                       0                
  6  1280   # hex.ele[1].vol1.V
  0 2.5000000000000000E-001       0                       0                
  6  1280   # hex.ele[1].vol1.m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].vol1.rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[1].vol1.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[1].vol1.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].vol1.rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[1].vol1.state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[1].vol1.state_start.T
  0       0                       0                       0                
  6  1281   # hex.ele[1].vol1.useSteadyStateTwoPort
  0       1                       1                       4                
  6  1282   # hex.ele[1].vol2.energyDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[1].vol2.massDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[1].vol2.substanceDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[1].vol2.traceDynamics
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[1].vol2.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[1].vol2.T_start
  0       0                       0                       1                
  6  1280   # hex.ele[1].vol2.X_start[1]
  0       0                       0                       1                
  6  1280   # hex.ele[1].vol2.X_start[2]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # hex.ele[1].vol2.mSenFac
  0       1                       0                       0                
  6   769   # hex.ele[1].vol2.initialize_p
  0       0                       0                       0                
  6  1281   # hex.ele[1].vol2.prescribedHeatFlowRate
  0       1                       0                       0                
  6  1281   # hex.ele[1].vol2.simplify_mWat_flow
  0 5.0000000000000000E-001       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].vol2.m_flow_nominal
  0       2                       0                       0                
  6  1282   # hex.ele[1].vol2.nPorts
  0 5.0000000000000002E-005       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].vol2.m_flow_small
  0       1                       0                       0                
  6  1281   # hex.ele[1].vol2.allowFlowReversal
  0 8.3333333333333337E-001       0                       0                
  6  1280   # hex.ele[1].vol2.V
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hex.ele[1].vol2.ports[1].p
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hex.ele[1].vol2.ports[2].p
  0 1.0130000000000000E+005       0                       0                
  6  1280   # hex.ele[1].vol2.p
  0 9.9975326918332097E-001       0                       0                
  6  1280   # hex.ele[1].vol2.m
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].vol2.rho_start
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[1].vol2.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[1].vol2.state_default.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # hex.ele[1].vol2.state_default.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # hex.ele[1].vol2.state_default.X[2]
  0 1.2000000000000000E+000       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].vol2.rho_default
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[1].vol2.state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[1].vol2.state_start.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # hex.ele[1].vol2.state_start.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # hex.ele[1].vol2.state_start.X[2]
  0       0                       0                       0                
  6  1281   # hex.ele[1].vol2.useSteadyStateTwoPort
  0       0                       0                       0                
  6  1280   # hex.ele[1].vol2.mWat_flow
  0       1                       0                       0                
  6  1280   # hex.ele[1].vol2.s[1]
  0       1                       0                       0                
  6  1281   # hex.ele[1].preDro1.allowFlowReversal
  0 1.0000000000000001E-001       0                       0                
  6  1280   # hex.ele[1].preDro1.m_flow_nominal
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].preDro1.m_flow_small
  0       0                       0                       0                
  6  1281   # hex.ele[1].preDro1.show_T
  0       0                       0                       0                
  6  1280   # hex.ele[1].preDro1.dp
  0       0                       0                       0                
  6  1280   # hex.ele[1].preDro1._m_flow_start
  0       0                       0                       0                
  6  1280   # hex.ele[1].preDro1._dp_start
  0       0                       0                       0                
  6  1281   # hex.ele[1].preDro1.from_dp
  0    8000                       0                       0                
  6  1280   # hex.ele[1].preDro1.dp_nominal
  0       1                       0                       0                
  6  1281   # hex.ele[1].preDro1.homotopyInitialization
  0       0                       0                       0                
  6  1281   # hex.ele[1].preDro1.linearized
  0 1.0000000000000002E-002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].preDro1.m_flow_turbulent
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1  1304   # hex.ele[1].preDro1.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # hex.ele[1].preDro1.sta_default.T
  0 1.0000000000000000E-003       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].preDro1.eta_default
  0 1.0000000000000001E-001       0                       0                
  6  1280   # hex.ele[1].preDro1.m_flow_nominal_pos
  0    8000                       0                       0                
  6  1280   # hex.ele[1].preDro1.dp_nominal_pos
  0 1.0000000000000001E-001 9.9999999999999995E-007 1.0000000000000000E+100
  6  1280   # hex.ele[1].preDro1.deltaM
  0 1.1180339887498949E-003       0                       0                
  6  1280   # hex.ele[1].preDro1.k
  0       1                       0                       0                
  6  1281   # hex.ele[1].preDro1.computeFlowResistance
  0       0                       0                       0                
  6  1280   # hex.ele[1].preDro1.coeff
  0       1                       0                       0                
  6  1281   # hex.ele[1].preDro2.allowFlowReversal
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hex.ele[1].preDro2.port_a.p
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hex.ele[1].preDro2.port_b.p
  0 5.0000000000000000E-001       0                       0                
  6  1280   # hex.ele[1].preDro2.m_flow_nominal
  0 5.0000000000000002E-005       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].preDro2.m_flow_small
  0       0                       0                       0                
  6  1281   # hex.ele[1].preDro2.show_T
  0       0                       0                       0                
  6  1280   # hex.ele[1].preDro2.dp
  0       0                       0                       0                
  6  1280   # hex.ele[1].preDro2._m_flow_start
  0       0                       0                       0                
  6  1280   # hex.ele[1].preDro2._dp_start
  0       0                       0                       0                
  6  1281   # hex.ele[1].preDro2.from_dp
  0       0                       0                       0                
  6  1280   # hex.ele[1].preDro2.dp_nominal
  0       1                       0                       0                
  6  1281   # hex.ele[1].preDro2.homotopyInitialization
  0       0                       0                       0                
  6  1281   # hex.ele[1].preDro2.linearized
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].preDro2.m_flow_turbulent
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # hex.ele[1].preDro2.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # hex.ele[1].preDro2.sta_default.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # hex.ele[1].preDro2.sta_default.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # hex.ele[1].preDro2.sta_default.X[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].preDro2.eta_default
  0 5.0000000000000000E-001       0                       0                
  6  1280   # hex.ele[1].preDro2.m_flow_nominal_pos
  0       0                       0                       0                
  6  1280   # hex.ele[1].preDro2.dp_nominal_pos
  0 1.0000000000000001E-001 9.9999999999999995E-007 1.0000000000000000E+100
  6  1280   # hex.ele[1].preDro2.deltaM
  0       0                       0                       0                
  6  1280   # hex.ele[1].preDro2.k
  0       0                       0                       0                
  6  1281   # hex.ele[1].preDro2.computeFlowResistance
  0       0                       0                       0                
  6  1280   # hex.ele[1].preDro2.coeff
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1  1304   # hex.ele[1].sta1_nominal.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # hex.ele[1].sta1_nominal.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].rho1_nominal
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[1].sta2_nominal.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # hex.ele[1].sta2_nominal.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # hex.ele[1].sta2_nominal.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # hex.ele[1].sta2_nominal.X[2]
  0 1.2000000000000000E+000       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].rho2_nominal
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[1].sta1_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[1].sta1_start.T
  0       0                       0                       0                
  6  1280   # hex.ele[1].h1_outflow_start
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[1].sta2_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[1].sta2_start.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # hex.ele[1].sta2_start.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # hex.ele[1].sta2_start.X[2]
  0       0                       0                       0                
  6  1280   # hex.ele[1].h2_outflow_start
  0       0                       0                       0                
  6   769   # hex.ele[1].initialize_p1
  0       1                       0                       0                
  6   769   # hex.ele[1].initialize_p2
  0       0                       0                       0                
  6  1280   # hex.ele[1].UA_nominal
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].tau_m
  0       0                       0                       0                
  6  1280   # hex.ele[1].C
  0       0                       0                       0                
  6  1280   # hex.ele[1].mas.C
 -1 2.9470123064703506E+002       0                 1.0000000000000000E+100
  2  1304   # hex.ele[1].mas.T
  0       0                       0                       0                
  3  1280   # hex.ele[1].mas.der(T)
  0       0                       0                       0                
  6  1412   # hex.ele[1].mas.port.Q_flow
  0       0                       0                       0                
  6  1280   # hex.ele[1].con1.Q_flow
  0       0                    -200                 1.0000000000000000E+100
  6  1280   # hex.ele[1].con1.dT
  0       0                       0                       0                
  6  1280   # hex.ele[1].con2.Q_flow
  0       0                    -200                 1.0000000000000000E+100
  6  1280   # hex.ele[1].con2.dT
  0       0                       0                       0                
  6  1412   # hex.ele[1].heaPor1.Q_flow
  0       0                       0                       0                
  6  1412   # hex.ele[1].heaPor2.Q_flow
 -1       1                       0                       0                
  1  1304   # hex.ele[1].masExc.Le
 -1 3.3333333333333331E-001       0                       0                
  1  1304   # hex.ele[1].masExc.n
  0       0                       0                       0                
  6   769   # hex.ele[1].masExc.humRatPre.use_p_in
 -1 1.0132500000000000E+005       0                       0                
  1  1304   # hex.ele[1].masExc.humRatPre.p
  0       0                       0                       1                
  6  1280   # hex.ele[1].masExc.humRatPre.X_w
  0    2000                 3.0000000000000001E-003 1.0000000000000000E+100
  6  1280   # hex.ele[1].masExc.humRatPre.p_w
  0 1.0000000000000000E-003       0                       1                
  6  1280   # hex.ele[1].masExc.humRatPre.x_w
  0       1                       0                       0                
  6  1280   # hex.ele[1].masExc.gain.k
  0       0                       0                       0                
  6  1280   # hex.ele[1].masExc.gain.y
  0       0                       0                       0                
  6  1280   # hex.ele[1].masExc.mWat.u1
  0       0                       0                       0                
  6  1280   # hex.ele[1].masExc.min.u2
 -1       0                       0                       0                
  1  1304   # hex.ele[1].masExc.zero.k
 -1       1                       0                       0                
  1  1304   # hex.ele[1].masExc.delX.k1
 -1      -1                       0                       0                
  1  1304   # hex.ele[1].masExc.delX.k2
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # hex.ele[1].masExc.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # hex.ele[1].masExc.sta_default.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # hex.ele[1].masExc.sta_default.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # hex.ele[1].masExc.sta_default.X[2]
  0       0                       0                       0                
  6  1280   # hex.ele[1].masExc.cp_default
  0       0                       0                       0                
  6  1280   # hex.ele[1].masExc.cpLe_default
  0       0                       0                       0                
  6  1412   # hex.ele[1].temSen.port.Q_flow
  0       0                       0                       0                
  6  1280   # hex.ele[1].heaConVapAir.Q_flow
  0 2.5010145000000000E+006       0                       0                
  6  1280   # hex.ele[1].pro.u1
  0 2.5010145000000000E+006       0                       0                
  6  1280   # hex.ele[1].h_fg.y
  0      -1                       0                       0                
  6  1280   # hex.ele[1].gain.k
  0       1                       0                       0                
  6  1281   # hex.ele[2].allowFlowReversal1
  0       1                       0                       0                
  6  1281   # hex.ele[2].allowFlowReversal2
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6  1284   # hex.ele[2].port_a1.h_outflow
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hex.ele[2].port_a2.p
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6  1284   # hex.ele[2].port_a2.h_outflow
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hex.ele[2].port_b2.p
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].m1_flow_nominal
  0 5.0000000000000000E-001       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].m2_flow_nominal
  0 1.0000000000000001E-005       0                  100000                
  6  1280   # hex.ele[2].m1_flow_small
  0 5.0000000000000002E-005       0                  100000                
  6  1280   # hex.ele[2].m2_flow_small
  0       0                       0                       0                
  6  1281   # hex.ele[2].show_T
  0       0                       0                       0                
  6  1280   # hex.ele[2].dp1
  0       0                       0                       0                
  6  1280   # hex.ele[2].dp2
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[2].state_a1_inflow.T
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[2].state_b1_inflow.T
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[2].state_a2_inflow.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[2].state_a2_inflow.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # hex.ele[2].state_a2_inflow.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # hex.ele[2].state_a2_inflow.X[2]
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[2].state_b2_inflow.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[2].state_b2_inflow.T
  0 9.8999999999999999E-001       0                       1                
  6  1280   # hex.ele[2].state_b2_inflow.X[2]
  0       1                       0                       0                
  6  1281   # hex.ele[2].computeFlowResistance1
  0       0                       0                       0                
  6  1281   # hex.ele[2].from_dp1
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].dp1_nominal
  0       0                       0                       0                
  6  1281   # hex.ele[2].linearizeFlowResistance1
  0 1.0000000000000001E-001       0                       0                
  6  1280   # hex.ele[2].deltaM1
  0       1                       0                       0                
  6  1281   # hex.ele[2].computeFlowResistance2
  0       0                       0                       0                
  6  1281   # hex.ele[2].from_dp2
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].dp2_nominal
  0       0                       0                       0                
  6  1281   # hex.ele[2].linearizeFlowResistance2
  0 1.0000000000000001E-001       0                       0                
  6  1280   # hex.ele[2].deltaM2
  0 2.5000000000000000E+000       0                       0                
  6  1280   # hex.ele[2].tau1
  0       2                       0                       0                
  6  1280   # hex.ele[2].tau2
  0       1                       0                       0                
  6  1281   # hex.ele[2].homotopyInitialization
  0       1                       1                       4                
  6  1282   # hex.ele[2].energyDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[2].massDynamics
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1  1304   # hex.ele[2].p1_start
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # hex.ele[2].T1_start
 -1       1                       0                       1                
  1  1304   # hex.ele[2].X1_start[1]
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # hex.ele[2].p2_start
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # hex.ele[2].T2_start
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # hex.ele[2].X2_start[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # hex.ele[2].X2_start[2]
  0       0                       0                       0                
  6  1280   # hex.ele[2].Q1_flow
  0       0                       0                       0                
  6  1280   # hex.ele[2].Q2_flow
  0       1                       1                       4                
  6  1282   # hex.ele[2].vol1.energyDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[2].vol1.massDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[2].vol1.substanceDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[2].vol1.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[2].vol1.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[2].vol1.T_start
  0       0                       0                       1                
  6  1280   # hex.ele[2].vol1.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # hex.ele[2].vol1.mSenFac
  0       0                       0                       0                
  6   769   # hex.ele[2].vol1.initialize_p
  0       0                       0                       0                
  6  1281   # hex.ele[2].vol1.prescribedHeatFlowRate
  0       1                       0                       0                
  6  1281   # hex.ele[2].vol1.simplify_mWat_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].vol1.m_flow_nominal
  0       2                       0                       0                
  6  1282   # hex.ele[2].vol1.nPorts
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].vol1.m_flow_small
  0       1                       0                       0                
  6  1281   # hex.ele[2].vol1.allowFlowReversal
  0 2.5110839244424891E-004       0                       0                
  6  1280   # hex.ele[2].vol1.V
  0 2.5000000000000000E-001       0                       0                
  6  1280   # hex.ele[2].vol1.m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].vol1.rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[2].vol1.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[2].vol1.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].vol1.rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[2].vol1.state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[2].vol1.state_start.T
  0       0                       0                       0                
  6  1281   # hex.ele[2].vol1.useSteadyStateTwoPort
  0       1                       1                       4                
  6  1282   # hex.ele[2].vol2.energyDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[2].vol2.massDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[2].vol2.substanceDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[2].vol2.traceDynamics
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[2].vol2.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[2].vol2.T_start
  0       0                       0                       1                
  6  1280   # hex.ele[2].vol2.X_start[1]
  0       0                       0                       1                
  6  1280   # hex.ele[2].vol2.X_start[2]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # hex.ele[2].vol2.mSenFac
  0       0                       0                       0                
  6   769   # hex.ele[2].vol2.initialize_p
  0       0                       0                       0                
  6  1281   # hex.ele[2].vol2.prescribedHeatFlowRate
  0       1                       0                       0                
  6  1281   # hex.ele[2].vol2.simplify_mWat_flow
  0 5.0000000000000000E-001       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].vol2.m_flow_nominal
  0       2                       0                       0                
  6  1282   # hex.ele[2].vol2.nPorts
  0 5.0000000000000002E-005       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].vol2.m_flow_small
  0       1                       0                       0                
  6  1281   # hex.ele[2].vol2.allowFlowReversal
  0 8.3333333333333337E-001       0                       0                
  6  1280   # hex.ele[2].vol2.V
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hex.ele[2].vol2.ports[1].p
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hex.ele[2].vol2.ports[2].p
  0 1.0130000000000000E+005       0                       0                
  6  1280   # hex.ele[2].vol2.p
  0 9.9975326918332097E-001       0                       0                
  6  1280   # hex.ele[2].vol2.m
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].vol2.rho_start
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[2].vol2.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[2].vol2.state_default.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # hex.ele[2].vol2.state_default.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # hex.ele[2].vol2.state_default.X[2]
  0 1.2000000000000000E+000       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].vol2.rho_default
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[2].vol2.state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[2].vol2.state_start.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # hex.ele[2].vol2.state_start.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # hex.ele[2].vol2.state_start.X[2]
  0       0                       0                       0                
  6  1281   # hex.ele[2].vol2.useSteadyStateTwoPort
  0       0                       0                       0                
  6  1280   # hex.ele[2].vol2.mWat_flow
  0       1                       0                       0                
  6  1280   # hex.ele[2].vol2.s[1]
  0       1                       0                       0                
  6  1281   # hex.ele[2].preDro1.allowFlowReversal
  0 1.0000000000000001E-001       0                       0                
  6  1280   # hex.ele[2].preDro1.m_flow_nominal
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].preDro1.m_flow_small
  0       0                       0                       0                
  6  1281   # hex.ele[2].preDro1.show_T
  0       0                       0                       0                
  6  1280   # hex.ele[2].preDro1.dp
  0       0                       0                       0                
  6  1280   # hex.ele[2].preDro1._m_flow_start
  0       0                       0                       0                
  6  1280   # hex.ele[2].preDro1._dp_start
  0       0                       0                       0                
  6  1281   # hex.ele[2].preDro1.from_dp
  0       0                       0                       0                
  6  1280   # hex.ele[2].preDro1.dp_nominal
  0       1                       0                       0                
  6  1281   # hex.ele[2].preDro1.homotopyInitialization
  0       0                       0                       0                
  6  1281   # hex.ele[2].preDro1.linearized
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].preDro1.m_flow_turbulent
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1  1304   # hex.ele[2].preDro1.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # hex.ele[2].preDro1.sta_default.T
  0 1.0000000000000000E-003       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].preDro1.eta_default
  0 1.0000000000000001E-001       0                       0                
  6  1280   # hex.ele[2].preDro1.m_flow_nominal_pos
  0       0                       0                       0                
  6  1280   # hex.ele[2].preDro1.dp_nominal_pos
  0 1.0000000000000001E-001 9.9999999999999995E-007 1.0000000000000000E+100
  6  1280   # hex.ele[2].preDro1.deltaM
  0       0                       0                       0                
  6  1280   # hex.ele[2].preDro1.k
  0       0                       0                       0                
  6  1281   # hex.ele[2].preDro1.computeFlowResistance
  0       0                       0                       0                
  6  1280   # hex.ele[2].preDro1.coeff
  0       1                       0                       0                
  6  1281   # hex.ele[2].preDro2.allowFlowReversal
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hex.ele[2].preDro2.port_a.p
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hex.ele[2].preDro2.port_b.p
  0 5.0000000000000000E-001       0                       0                
  6  1280   # hex.ele[2].preDro2.m_flow_nominal
  0 5.0000000000000002E-005       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].preDro2.m_flow_small
  0       0                       0                       0                
  6  1281   # hex.ele[2].preDro2.show_T
  0       0                       0                       0                
  6  1280   # hex.ele[2].preDro2.dp
  0       0                       0                       0                
  6  1280   # hex.ele[2].preDro2._m_flow_start
  0       0                       0                       0                
  6  1280   # hex.ele[2].preDro2._dp_start
  0       0                       0                       0                
  6  1281   # hex.ele[2].preDro2.from_dp
  0       0                       0                       0                
  6  1280   # hex.ele[2].preDro2.dp_nominal
  0       1                       0                       0                
  6  1281   # hex.ele[2].preDro2.homotopyInitialization
  0       0                       0                       0                
  6  1281   # hex.ele[2].preDro2.linearized
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].preDro2.m_flow_turbulent
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # hex.ele[2].preDro2.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # hex.ele[2].preDro2.sta_default.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # hex.ele[2].preDro2.sta_default.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # hex.ele[2].preDro2.sta_default.X[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].preDro2.eta_default
  0 5.0000000000000000E-001       0                       0                
  6  1280   # hex.ele[2].preDro2.m_flow_nominal_pos
  0       0                       0                       0                
  6  1280   # hex.ele[2].preDro2.dp_nominal_pos
  0 1.0000000000000001E-001 9.9999999999999995E-007 1.0000000000000000E+100
  6  1280   # hex.ele[2].preDro2.deltaM
  0       0                       0                       0                
  6  1280   # hex.ele[2].preDro2.k
  0       0                       0                       0                
  6  1281   # hex.ele[2].preDro2.computeFlowResistance
  0       0                       0                       0                
  6  1280   # hex.ele[2].preDro2.coeff
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1  1304   # hex.ele[2].sta1_nominal.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # hex.ele[2].sta1_nominal.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].rho1_nominal
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[2].sta2_nominal.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # hex.ele[2].sta2_nominal.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # hex.ele[2].sta2_nominal.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # hex.ele[2].sta2_nominal.X[2]
  0 1.2000000000000000E+000       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].rho2_nominal
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[2].sta1_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[2].sta1_start.T
  0       0                       0                       0                
  6  1280   # hex.ele[2].h1_outflow_start
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[2].sta2_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[2].sta2_start.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # hex.ele[2].sta2_start.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # hex.ele[2].sta2_start.X[2]
  0       0                       0                       0                
  6  1280   # hex.ele[2].h2_outflow_start
  0       0                       0                       0                
  6   769   # hex.ele[2].initialize_p1
  0       0                       0                       0                
  6   769   # hex.ele[2].initialize_p2
  0       0                       0                       0                
  6  1280   # hex.ele[2].UA_nominal
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].tau_m
  0       0                       0                       0                
  6  1280   # hex.ele[2].C
  0       0                       0                       0                
  6  1280   # hex.ele[2].mas.C
 -1 2.9461607688469155E+002       0                 1.0000000000000000E+100
  2  1304   # hex.ele[2].mas.T
  0       0                       0                       0                
  3  1280   # hex.ele[2].mas.der(T)
  0       0                       0                       0                
  6  1412   # hex.ele[2].mas.port.Q_flow
  0       0                       0                       0                
  6  1280   # hex.ele[2].con1.Q_flow
  0       0                    -200                 1.0000000000000000E+100
  6  1280   # hex.ele[2].con1.dT
  0       0                       0                       0                
  6  1280   # hex.ele[2].con2.Q_flow
  0       0                    -200                 1.0000000000000000E+100
  6  1280   # hex.ele[2].con2.dT
  0       0                       0                       0                
  6  1412   # hex.ele[2].heaPor1.Q_flow
  0       0                       0                       0                
  6  1412   # hex.ele[2].heaPor2.Q_flow
 -1       1                       0                       0                
  1  1304   # hex.ele[2].masExc.Le
 -1 3.3333333333333331E-001       0                       0                
  1  1304   # hex.ele[2].masExc.n
  0       0                       0                       0                
  6   769   # hex.ele[2].masExc.humRatPre.use_p_in
 -1 1.0132500000000000E+005       0                       0                
  1  1304   # hex.ele[2].masExc.humRatPre.p
  0       0                       0                       1                
  6  1280   # hex.ele[2].masExc.humRatPre.X_w
  0    2000                 3.0000000000000001E-003 1.0000000000000000E+100
  6  1280   # hex.ele[2].masExc.humRatPre.p_w
  0 1.0000000000000000E-003       0                       1                
  6  1280   # hex.ele[2].masExc.humRatPre.x_w
  0       1                       0                       0                
  6  1280   # hex.ele[2].masExc.gain.k
  0       0                       0                       0                
  6  1280   # hex.ele[2].masExc.gain.y
  0       0                       0                       0                
  6  1280   # hex.ele[2].masExc.mWat.u1
  0       0                       0                       0                
  6  1280   # hex.ele[2].masExc.min.u2
 -1       0                       0                       0                
  1  1304   # hex.ele[2].masExc.zero.k
 -1       1                       0                       0                
  1  1304   # hex.ele[2].masExc.delX.k1
 -1      -1                       0                       0                
  1  1304   # hex.ele[2].masExc.delX.k2
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # hex.ele[2].masExc.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # hex.ele[2].masExc.sta_default.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # hex.ele[2].masExc.sta_default.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # hex.ele[2].masExc.sta_default.X[2]
  0       0                       0                       0                
  6  1280   # hex.ele[2].masExc.cp_default
  0       0                       0                       0                
  6  1280   # hex.ele[2].masExc.cpLe_default
  0       0                       0                       0                
  6  1412   # hex.ele[2].temSen.port.Q_flow
  0       0                       0                       0                
  6  1280   # hex.ele[2].heaConVapAir.Q_flow
  0 2.5010145000000000E+006       0                       0                
  6  1280   # hex.ele[2].pro.u1
  0 2.5010145000000000E+006       0                       0                
  6  1280   # hex.ele[2].h_fg.y
  0      -1                       0                       0                
  6  1280   # hex.ele[2].gain.k
  0       1                       0                       0                
  6  1281   # hex.ele[3].allowFlowReversal1
  0       1                       0                       0                
  6  1281   # hex.ele[3].allowFlowReversal2
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6  1284   # hex.ele[3].port_a1.h_outflow
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hex.ele[3].port_a2.p
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6  1284   # hex.ele[3].port_a2.h_outflow
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hex.ele[3].port_b2.p
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].m1_flow_nominal
  0 5.0000000000000000E-001       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].m2_flow_nominal
  0 1.0000000000000001E-005       0                  100000                
  6  1280   # hex.ele[3].m1_flow_small
  0 5.0000000000000002E-005       0                  100000                
  6  1280   # hex.ele[3].m2_flow_small
  0       0                       0                       0                
  6  1281   # hex.ele[3].show_T
  0       0                       0                       0                
  6  1280   # hex.ele[3].dp1
  0       0                       0                       0                
  6  1280   # hex.ele[3].dp2
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[3].state_a1_inflow.T
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[3].state_b1_inflow.T
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[3].state_a2_inflow.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[3].state_a2_inflow.T
  0 9.8999999999999999E-001       0                       1                
  6  1280   # hex.ele[3].state_a2_inflow.X[2]
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[3].state_b2_inflow.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[3].state_b2_inflow.T
  0 9.8999999999999999E-001       0                       1                
  6  1280   # hex.ele[3].state_b2_inflow.X[2]
  0       1                       0                       0                
  6  1281   # hex.ele[3].computeFlowResistance1
  0       0                       0                       0                
  6  1281   # hex.ele[3].from_dp1
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].dp1_nominal
  0       0                       0                       0                
  6  1281   # hex.ele[3].linearizeFlowResistance1
  0 1.0000000000000001E-001       0                       0                
  6  1280   # hex.ele[3].deltaM1
  0       1                       0                       0                
  6  1281   # hex.ele[3].computeFlowResistance2
  0       0                       0                       0                
  6  1281   # hex.ele[3].from_dp2
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].dp2_nominal
  0       0                       0                       0                
  6  1281   # hex.ele[3].linearizeFlowResistance2
  0 1.0000000000000001E-001       0                       0                
  6  1280   # hex.ele[3].deltaM2
  0 2.5000000000000000E+000       0                       0                
  6  1280   # hex.ele[3].tau1
  0       2                       0                       0                
  6  1280   # hex.ele[3].tau2
  0       1                       0                       0                
  6  1281   # hex.ele[3].homotopyInitialization
  0       1                       1                       4                
  6  1282   # hex.ele[3].energyDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[3].massDynamics
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1  1304   # hex.ele[3].p1_start
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # hex.ele[3].T1_start
 -1       1                       0                       1                
  1  1304   # hex.ele[3].X1_start[1]
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # hex.ele[3].p2_start
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # hex.ele[3].T2_start
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # hex.ele[3].X2_start[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # hex.ele[3].X2_start[2]
  0       0                       0                       0                
  6  1280   # hex.ele[3].Q1_flow
  0       0                       0                       0                
  6  1280   # hex.ele[3].Q2_flow
  0       1                       1                       4                
  6  1282   # hex.ele[3].vol1.energyDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[3].vol1.massDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[3].vol1.substanceDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[3].vol1.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[3].vol1.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[3].vol1.T_start
  0       0                       0                       1                
  6  1280   # hex.ele[3].vol1.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # hex.ele[3].vol1.mSenFac
  0       0                       0                       0                
  6   769   # hex.ele[3].vol1.initialize_p
  0       0                       0                       0                
  6  1281   # hex.ele[3].vol1.prescribedHeatFlowRate
  0       1                       0                       0                
  6  1281   # hex.ele[3].vol1.simplify_mWat_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].vol1.m_flow_nominal
  0       2                       0                       0                
  6  1282   # hex.ele[3].vol1.nPorts
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].vol1.m_flow_small
  0       1                       0                       0                
  6  1281   # hex.ele[3].vol1.allowFlowReversal
  0 2.5110839244424891E-004       0                       0                
  6  1280   # hex.ele[3].vol1.V
  0 2.5000000000000000E-001       0                       0                
  6  1280   # hex.ele[3].vol1.m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].vol1.rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[3].vol1.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[3].vol1.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].vol1.rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[3].vol1.state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[3].vol1.state_start.T
  0       0                       0                       0                
  6  1281   # hex.ele[3].vol1.useSteadyStateTwoPort
  0       1                       1                       4                
  6  1282   # hex.ele[3].vol2.energyDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[3].vol2.massDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[3].vol2.substanceDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[3].vol2.traceDynamics
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[3].vol2.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[3].vol2.T_start
  0       0                       0                       1                
  6  1280   # hex.ele[3].vol2.X_start[1]
  0       0                       0                       1                
  6  1280   # hex.ele[3].vol2.X_start[2]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # hex.ele[3].vol2.mSenFac
  0       0                       0                       0                
  6   769   # hex.ele[3].vol2.initialize_p
  0       0                       0                       0                
  6  1281   # hex.ele[3].vol2.prescribedHeatFlowRate
  0       1                       0                       0                
  6  1281   # hex.ele[3].vol2.simplify_mWat_flow
  0 5.0000000000000000E-001       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].vol2.m_flow_nominal
  0       2                       0                       0                
  6  1282   # hex.ele[3].vol2.nPorts
  0 5.0000000000000002E-005       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].vol2.m_flow_small
  0       1                       0                       0                
  6  1281   # hex.ele[3].vol2.allowFlowReversal
  0 8.3333333333333337E-001       0                       0                
  6  1280   # hex.ele[3].vol2.V
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hex.ele[3].vol2.ports[1].p
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hex.ele[3].vol2.ports[2].p
  0 1.0130000000000000E+005       0                       0                
  6  1280   # hex.ele[3].vol2.p
  0 9.9975326918332097E-001       0                       0                
  6  1280   # hex.ele[3].vol2.m
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].vol2.rho_start
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[3].vol2.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[3].vol2.state_default.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # hex.ele[3].vol2.state_default.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # hex.ele[3].vol2.state_default.X[2]
  0 1.2000000000000000E+000       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].vol2.rho_default
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[3].vol2.state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[3].vol2.state_start.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # hex.ele[3].vol2.state_start.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # hex.ele[3].vol2.state_start.X[2]
  0       0                       0                       0                
  6  1281   # hex.ele[3].vol2.useSteadyStateTwoPort
  0       0                       0                       0                
  6  1280   # hex.ele[3].vol2.mWat_flow
  0       1                       0                       0                
  6  1280   # hex.ele[3].vol2.s[1]
  0       1                       0                       0                
  6  1281   # hex.ele[3].preDro1.allowFlowReversal
  0 1.0000000000000001E-001       0                       0                
  6  1280   # hex.ele[3].preDro1.m_flow_nominal
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].preDro1.m_flow_small
  0       0                       0                       0                
  6  1281   # hex.ele[3].preDro1.show_T
  0       0                       0                       0                
  6  1280   # hex.ele[3].preDro1.dp
  0       0                       0                       0                
  6  1280   # hex.ele[3].preDro1._m_flow_start
  0       0                       0                       0                
  6  1280   # hex.ele[3].preDro1._dp_start
  0       0                       0                       0                
  6  1281   # hex.ele[3].preDro1.from_dp
  0       0                       0                       0                
  6  1280   # hex.ele[3].preDro1.dp_nominal
  0       1                       0                       0                
  6  1281   # hex.ele[3].preDro1.homotopyInitialization
  0       0                       0                       0                
  6  1281   # hex.ele[3].preDro1.linearized
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].preDro1.m_flow_turbulent
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1  1304   # hex.ele[3].preDro1.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # hex.ele[3].preDro1.sta_default.T
  0 1.0000000000000000E-003       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].preDro1.eta_default
  0 1.0000000000000001E-001       0                       0                
  6  1280   # hex.ele[3].preDro1.m_flow_nominal_pos
  0       0                       0                       0                
  6  1280   # hex.ele[3].preDro1.dp_nominal_pos
  0 1.0000000000000001E-001 9.9999999999999995E-007 1.0000000000000000E+100
  6  1280   # hex.ele[3].preDro1.deltaM
  0       0                       0                       0                
  6  1280   # hex.ele[3].preDro1.k
  0       0                       0                       0                
  6  1281   # hex.ele[3].preDro1.computeFlowResistance
  0       0                       0                       0                
  6  1280   # hex.ele[3].preDro1.coeff
  0       1                       0                       0                
  6  1281   # hex.ele[3].preDro2.allowFlowReversal
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hex.ele[3].preDro2.port_a.p
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hex.ele[3].preDro2.port_b.p
  0 5.0000000000000000E-001       0                       0                
  6  1280   # hex.ele[3].preDro2.m_flow_nominal
  0 5.0000000000000002E-005       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].preDro2.m_flow_small
  0       0                       0                       0                
  6  1281   # hex.ele[3].preDro2.show_T
  0       0                       0                       0                
  6  1280   # hex.ele[3].preDro2.dp
  0       0                       0                       0                
  6  1280   # hex.ele[3].preDro2._m_flow_start
  0       0                       0                       0                
  6  1280   # hex.ele[3].preDro2._dp_start
  0       0                       0                       0                
  6  1281   # hex.ele[3].preDro2.from_dp
  0       0                       0                       0                
  6  1280   # hex.ele[3].preDro2.dp_nominal
  0       1                       0                       0                
  6  1281   # hex.ele[3].preDro2.homotopyInitialization
  0       0                       0                       0                
  6  1281   # hex.ele[3].preDro2.linearized
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].preDro2.m_flow_turbulent
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # hex.ele[3].preDro2.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # hex.ele[3].preDro2.sta_default.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # hex.ele[3].preDro2.sta_default.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # hex.ele[3].preDro2.sta_default.X[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].preDro2.eta_default
  0 5.0000000000000000E-001       0                       0                
  6  1280   # hex.ele[3].preDro2.m_flow_nominal_pos
  0       0                       0                       0                
  6  1280   # hex.ele[3].preDro2.dp_nominal_pos
  0 1.0000000000000001E-001 9.9999999999999995E-007 1.0000000000000000E+100
  6  1280   # hex.ele[3].preDro2.deltaM
  0       0                       0                       0                
  6  1280   # hex.ele[3].preDro2.k
  0       0                       0                       0                
  6  1281   # hex.ele[3].preDro2.computeFlowResistance
  0       0                       0                       0                
  6  1280   # hex.ele[3].preDro2.coeff
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1  1304   # hex.ele[3].sta1_nominal.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # hex.ele[3].sta1_nominal.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].rho1_nominal
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[3].sta2_nominal.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # hex.ele[3].sta2_nominal.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # hex.ele[3].sta2_nominal.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # hex.ele[3].sta2_nominal.X[2]
  0 1.2000000000000000E+000       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].rho2_nominal
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[3].sta1_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[3].sta1_start.T
  0       0                       0                       0                
  6  1280   # hex.ele[3].h1_outflow_start
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[3].sta2_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[3].sta2_start.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # hex.ele[3].sta2_start.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # hex.ele[3].sta2_start.X[2]
  0       0                       0                       0                
  6  1280   # hex.ele[3].h2_outflow_start
  0       0                       0                       0                
  6   769   # hex.ele[3].initialize_p1
  0       0                       0                       0                
  6   769   # hex.ele[3].initialize_p2
  0       0                       0                       0                
  6  1280   # hex.ele[3].UA_nominal
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].tau_m
  0       0                       0                       0                
  6  1280   # hex.ele[3].C
  0       0                       0                       0                
  6  1280   # hex.ele[3].mas.C
 -1 2.9452485797494381E+002       0                 1.0000000000000000E+100
  2  1304   # hex.ele[3].mas.T
  0       0                       0                       0                
  3  1280   # hex.ele[3].mas.der(T)
  0       0                       0                       0                
  6  1412   # hex.ele[3].mas.port.Q_flow
  0       0                       0                       0                
  6  1280   # hex.ele[3].con1.Q_flow
  0       0                    -200                 1.0000000000000000E+100
  6  1280   # hex.ele[3].con1.dT
  0       0                       0                       0                
  6  1280   # hex.ele[3].con2.Q_flow
  0       0                    -200                 1.0000000000000000E+100
  6  1280   # hex.ele[3].con2.dT
  0       0                       0                       0                
  6  1412   # hex.ele[3].heaPor1.Q_flow
  0       0                       0                       0                
  6  1412   # hex.ele[3].heaPor2.Q_flow
 -1       1                       0                       0                
  1  1304   # hex.ele[3].masExc.Le
 -1 3.3333333333333331E-001       0                       0                
  1  1304   # hex.ele[3].masExc.n
  0       0                       0                       0                
  6   769   # hex.ele[3].masExc.humRatPre.use_p_in
 -1 1.0132500000000000E+005       0                       0                
  1  1304   # hex.ele[3].masExc.humRatPre.p
  0       0                       0                       1                
  6  1280   # hex.ele[3].masExc.humRatPre.X_w
  0    2000                 3.0000000000000001E-003 1.0000000000000000E+100
  6  1280   # hex.ele[3].masExc.humRatPre.p_w
  0 1.0000000000000000E-003       0                       1                
  6  1280   # hex.ele[3].masExc.humRatPre.x_w
  0       1                       0                       0                
  6  1280   # hex.ele[3].masExc.gain.k
  0       0                       0                       0                
  6  1280   # hex.ele[3].masExc.gain.y
  0       0                       0                       0                
  6  1280   # hex.ele[3].masExc.mWat.u1
  0       0                       0                       0                
  6  1280   # hex.ele[3].masExc.min.u2
 -1       0                       0                       0                
  1  1304   # hex.ele[3].masExc.zero.k
 -1       1                       0                       0                
  1  1304   # hex.ele[3].masExc.delX.k1
 -1      -1                       0                       0                
  1  1304   # hex.ele[3].masExc.delX.k2
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # hex.ele[3].masExc.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # hex.ele[3].masExc.sta_default.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # hex.ele[3].masExc.sta_default.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # hex.ele[3].masExc.sta_default.X[2]
  0       0                       0                       0                
  6  1280   # hex.ele[3].masExc.cp_default
  0       0                       0                       0                
  6  1280   # hex.ele[3].masExc.cpLe_default
  0       0                       0                       0                
  6  1412   # hex.ele[3].temSen.port.Q_flow
  0       0                       0                       0                
  6  1280   # hex.ele[3].heaConVapAir.Q_flow
  0 2.5010145000000000E+006       0                       0                
  6  1280   # hex.ele[3].pro.u1
  0 2.5010145000000000E+006       0                       0                
  6  1280   # hex.ele[3].h_fg.y
  0      -1                       0                       0                
  6  1280   # hex.ele[3].gain.k
  0       1                       0                       0                
  6  1281   # hex.ele[4].allowFlowReversal1
  0       1                       0                       0                
  6  1281   # hex.ele[4].allowFlowReversal2
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hex.ele[4].port_b2.p
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].m1_flow_nominal
  0 5.0000000000000000E-001       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].m2_flow_nominal
  0 1.0000000000000001E-005       0                  100000                
  6  1280   # hex.ele[4].m1_flow_small
  0 5.0000000000000002E-005       0                  100000                
  6  1280   # hex.ele[4].m2_flow_small
  0       0                       0                       0                
  6  1281   # hex.ele[4].show_T
  0       0                       0                       0                
  6  1280   # hex.ele[4].dp1
  0       0                       0                       0                
  6  1280   # hex.ele[4].dp2
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[4].state_a1_inflow.T
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[4].state_b1_inflow.T
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[4].state_a2_inflow.T
  0 9.8999999999999999E-001       0                       1                
  6  1280   # hex.ele[4].state_a2_inflow.X[2]
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[4].state_b2_inflow.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[4].state_b2_inflow.T
  0 9.8999999999999999E-001       0                       1                
  6  1280   # hex.ele[4].state_b2_inflow.X[2]
  0       1                       0                       0                
  6  1281   # hex.ele[4].computeFlowResistance1
  0       0                       0                       0                
  6  1281   # hex.ele[4].from_dp1
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].dp1_nominal
  0       0                       0                       0                
  6  1281   # hex.ele[4].linearizeFlowResistance1
  0 1.0000000000000001E-001       0                       0                
  6  1280   # hex.ele[4].deltaM1
  0       1                       0                       0                
  6  1281   # hex.ele[4].computeFlowResistance2
  0       0                       0                       0                
  6  1281   # hex.ele[4].from_dp2
  0     200                       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].dp2_nominal
  0       0                       0                       0                
  6  1281   # hex.ele[4].linearizeFlowResistance2
  0 1.0000000000000001E-001       0                       0                
  6  1280   # hex.ele[4].deltaM2
  0 2.5000000000000000E+000       0                       0                
  6  1280   # hex.ele[4].tau1
  0       2                       0                       0                
  6  1280   # hex.ele[4].tau2
  0       1                       0                       0                
  6  1281   # hex.ele[4].homotopyInitialization
  0       1                       1                       4                
  6  1282   # hex.ele[4].energyDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[4].massDynamics
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1  1304   # hex.ele[4].p1_start
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # hex.ele[4].T1_start
 -1       1                       0                       1                
  1  1304   # hex.ele[4].X1_start[1]
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # hex.ele[4].p2_start
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # hex.ele[4].T2_start
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # hex.ele[4].X2_start[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # hex.ele[4].X2_start[2]
  0       0                       0                       0                
  6  1280   # hex.ele[4].Q1_flow
  0       0                       0                       0                
  6  1280   # hex.ele[4].Q2_flow
  0       1                       1                       4                
  6  1282   # hex.ele[4].vol1.energyDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[4].vol1.massDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[4].vol1.substanceDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[4].vol1.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[4].vol1.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[4].vol1.T_start
  0       0                       0                       1                
  6  1280   # hex.ele[4].vol1.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # hex.ele[4].vol1.mSenFac
  0       0                       0                       0                
  6   769   # hex.ele[4].vol1.initialize_p
  0       0                       0                       0                
  6  1281   # hex.ele[4].vol1.prescribedHeatFlowRate
  0       1                       0                       0                
  6  1281   # hex.ele[4].vol1.simplify_mWat_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].vol1.m_flow_nominal
  0       2                       0                       0                
  6  1282   # hex.ele[4].vol1.nPorts
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].vol1.m_flow_small
  0       1                       0                       0                
  6  1281   # hex.ele[4].vol1.allowFlowReversal
  0 2.5110839244424891E-004       0                       0                
  6  1280   # hex.ele[4].vol1.V
  0 2.5000000000000000E-001       0                       0                
  6  1280   # hex.ele[4].vol1.m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].vol1.rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[4].vol1.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[4].vol1.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].vol1.rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[4].vol1.state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[4].vol1.state_start.T
  0       0                       0                       0                
  6  1281   # hex.ele[4].vol1.useSteadyStateTwoPort
  0       1                       1                       4                
  6  1282   # hex.ele[4].vol2.energyDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[4].vol2.massDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[4].vol2.substanceDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[4].vol2.traceDynamics
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[4].vol2.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[4].vol2.T_start
  0       0                       0                       1                
  6  1280   # hex.ele[4].vol2.X_start[1]
  0       0                       0                       1                
  6  1280   # hex.ele[4].vol2.X_start[2]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # hex.ele[4].vol2.mSenFac
  0       0                       0                       0                
  6   769   # hex.ele[4].vol2.initialize_p
  0       0                       0                       0                
  6  1281   # hex.ele[4].vol2.prescribedHeatFlowRate
  0       1                       0                       0                
  6  1281   # hex.ele[4].vol2.simplify_mWat_flow
  0 5.0000000000000000E-001       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].vol2.m_flow_nominal
  0       2                       0                       0                
  6  1282   # hex.ele[4].vol2.nPorts
  0 5.0000000000000002E-005       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].vol2.m_flow_small
  0       1                       0                       0                
  6  1281   # hex.ele[4].vol2.allowFlowReversal
  0 8.3333333333333337E-001       0                       0                
  6  1280   # hex.ele[4].vol2.V
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hex.ele[4].vol2.ports[1].p
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hex.ele[4].vol2.ports[2].p
  0 1.0130000000000000E+005       0                       0                
  6  1280   # hex.ele[4].vol2.p
  0 9.9975326918332097E-001       0                       0                
  6  1280   # hex.ele[4].vol2.m
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].vol2.rho_start
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[4].vol2.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[4].vol2.state_default.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # hex.ele[4].vol2.state_default.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # hex.ele[4].vol2.state_default.X[2]
  0 1.2000000000000000E+000       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].vol2.rho_default
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[4].vol2.state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[4].vol2.state_start.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # hex.ele[4].vol2.state_start.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # hex.ele[4].vol2.state_start.X[2]
  0       0                       0                       0                
  6  1281   # hex.ele[4].vol2.useSteadyStateTwoPort
  0       0                       0                       0                
  6  1280   # hex.ele[4].vol2.mWat_flow
  0       1                       0                       0                
  6  1280   # hex.ele[4].vol2.s[1]
  0       1                       0                       0                
  6  1281   # hex.ele[4].preDro1.allowFlowReversal
  0 1.0000000000000001E-001       0                       0                
  6  1280   # hex.ele[4].preDro1.m_flow_nominal
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].preDro1.m_flow_small
  0       0                       0                       0                
  6  1281   # hex.ele[4].preDro1.show_T
  0       0                       0                       0                
  6  1280   # hex.ele[4].preDro1.dp
  0       0                       0                       0                
  6  1280   # hex.ele[4].preDro1._m_flow_start
  0       0                       0                       0                
  6  1280   # hex.ele[4].preDro1._dp_start
  0       0                       0                       0                
  6  1281   # hex.ele[4].preDro1.from_dp
  0       0                       0                       0                
  6  1280   # hex.ele[4].preDro1.dp_nominal
  0       1                       0                       0                
  6  1281   # hex.ele[4].preDro1.homotopyInitialization
  0       0                       0                       0                
  6  1281   # hex.ele[4].preDro1.linearized
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].preDro1.m_flow_turbulent
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1  1304   # hex.ele[4].preDro1.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # hex.ele[4].preDro1.sta_default.T
  0 1.0000000000000000E-003       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].preDro1.eta_default
  0 1.0000000000000001E-001       0                       0                
  6  1280   # hex.ele[4].preDro1.m_flow_nominal_pos
  0       0                       0                       0                
  6  1280   # hex.ele[4].preDro1.dp_nominal_pos
  0 1.0000000000000001E-001 9.9999999999999995E-007 1.0000000000000000E+100
  6  1280   # hex.ele[4].preDro1.deltaM
  0       0                       0                       0                
  6  1280   # hex.ele[4].preDro1.k
  0       0                       0                       0                
  6  1281   # hex.ele[4].preDro1.computeFlowResistance
  0       0                       0                       0                
  6  1280   # hex.ele[4].preDro1.coeff
  0       1                       0                       0                
  6  1281   # hex.ele[4].preDro2.allowFlowReversal
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hex.ele[4].preDro2.port_b.p
  0 5.0000000000000000E-001       0                       0                
  6  1280   # hex.ele[4].preDro2.m_flow_nominal
  0 5.0000000000000002E-005       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].preDro2.m_flow_small
  0       0                       0                       0                
  6  1281   # hex.ele[4].preDro2.show_T
  0       0                       0                       0                
  6  1280   # hex.ele[4].preDro2.dp
  0       0                       0                       0                
  6  1280   # hex.ele[4].preDro2._m_flow_start
  0       0                       0                       0                
  6  1280   # hex.ele[4].preDro2._dp_start
  0       0                       0                       0                
  6  1281   # hex.ele[4].preDro2.from_dp
  0     200                       0                       0                
  6  1280   # hex.ele[4].preDro2.dp_nominal
  0       1                       0                       0                
  6  1281   # hex.ele[4].preDro2.homotopyInitialization
  0       0                       0                       0                
  6  1281   # hex.ele[4].preDro2.linearized
  0 5.0000000000000003E-002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].preDro2.m_flow_turbulent
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # hex.ele[4].preDro2.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # hex.ele[4].preDro2.sta_default.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # hex.ele[4].preDro2.sta_default.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # hex.ele[4].preDro2.sta_default.X[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].preDro2.eta_default
  0 5.0000000000000000E-001       0                       0                
  6  1280   # hex.ele[4].preDro2.m_flow_nominal_pos
  0     200                       0                       0                
  6  1280   # hex.ele[4].preDro2.dp_nominal_pos
  0 1.0000000000000001E-001 9.9999999999999995E-007 1.0000000000000000E+100
  6  1280   # hex.ele[4].preDro2.deltaM
  0 3.5355339059327376E-002       0                       0                
  6  1280   # hex.ele[4].preDro2.k
  0       1                       0                       0                
  6  1281   # hex.ele[4].preDro2.computeFlowResistance
  0       0                       0                       0                
  6  1280   # hex.ele[4].preDro2.coeff
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1  1304   # hex.ele[4].sta1_nominal.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # hex.ele[4].sta1_nominal.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].rho1_nominal
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[4].sta2_nominal.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # hex.ele[4].sta2_nominal.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # hex.ele[4].sta2_nominal.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # hex.ele[4].sta2_nominal.X[2]
  0 1.2000000000000000E+000       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].rho2_nominal
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[4].sta1_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[4].sta1_start.T
  0       0                       0                       0                
  6  1280   # hex.ele[4].h1_outflow_start
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[4].sta2_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[4].sta2_start.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # hex.ele[4].sta2_start.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # hex.ele[4].sta2_start.X[2]
  0       0                       0                       0                
  6  1280   # hex.ele[4].h2_outflow_start
  0       0                       0                       0                
  6   769   # hex.ele[4].initialize_p1
  0       0                       0                       0                
  6   769   # hex.ele[4].initialize_p2
  0       0                       0                       0                
  6  1280   # hex.ele[4].UA_nominal
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].tau_m
  0       0                       0                       0                
  6  1280   # hex.ele[4].C
  0       0                       0                       0                
  6  1280   # hex.ele[4].mas.C
 -1 2.9442995897171159E+002       0                 1.0000000000000000E+100
  2  1304   # hex.ele[4].mas.T
  0       0                       0                       0                
  3  1280   # hex.ele[4].mas.der(T)
  0       0                       0                       0                
  6  1412   # hex.ele[4].mas.port.Q_flow
  0       0                       0                       0                
  6  1280   # hex.ele[4].con1.Q_flow
  0       0                    -200                 1.0000000000000000E+100
  6  1280   # hex.ele[4].con1.dT
  0       0                       0                       0                
  6  1280   # hex.ele[4].con2.Q_flow
  0       0                    -200                 1.0000000000000000E+100
  6  1280   # hex.ele[4].con2.dT
  0       0                       0                       0                
  6  1412   # hex.ele[4].heaPor1.Q_flow
  0       0                       0                       0                
  6  1412   # hex.ele[4].heaPor2.Q_flow
 -1       1                       0                       0                
  1  1304   # hex.ele[4].masExc.Le
 -1 3.3333333333333331E-001       0                       0                
  1  1304   # hex.ele[4].masExc.n
  0       0                       0                       0                
  6   769   # hex.ele[4].masExc.humRatPre.use_p_in
 -1 1.0132500000000000E+005       0                       0                
  1  1304   # hex.ele[4].masExc.humRatPre.p
  0       0                       0                       1                
  6  1280   # hex.ele[4].masExc.humRatPre.X_w
  0    2000                 3.0000000000000001E-003 1.0000000000000000E+100
  6  1280   # hex.ele[4].masExc.humRatPre.p_w
  0 1.0000000000000000E-003       0                       1                
  6  1280   # hex.ele[4].masExc.humRatPre.x_w
  0       1                       0                       0                
  6  1280   # hex.ele[4].masExc.gain.k
  0       0                       0                       0                
  6  1280   # hex.ele[4].masExc.gain.y
  0       0                       0                       0                
  6  1280   # hex.ele[4].masExc.mWat.u1
  0       0                       0                       0                
  6  1280   # hex.ele[4].masExc.min.u2
 -1       0                       0                       0                
  1  1304   # hex.ele[4].masExc.zero.k
 -1       1                       0                       0                
  1  1304   # hex.ele[4].masExc.delX.k1
 -1      -1                       0                       0                
  1  1304   # hex.ele[4].masExc.delX.k2
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # hex.ele[4].masExc.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # hex.ele[4].masExc.sta_default.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # hex.ele[4].masExc.sta_default.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # hex.ele[4].masExc.sta_default.X[2]
  0       0                       0                       0                
  6  1280   # hex.ele[4].masExc.cp_default
  0       0                       0                       0                
  6  1280   # hex.ele[4].masExc.cpLe_default
  0       0                       0                       0                
  6  1412   # hex.ele[4].temSen.port.Q_flow
  0       0                       0                       0                
  6  1280   # hex.ele[4].heaConVapAir.Q_flow
  0 2.5010145000000000E+006       0                       0                
  6  1280   # hex.ele[4].pro.u1
  0 2.5010145000000000E+006       0                       0                
  6  1280   # hex.ele[4].h_fg.y
  0      -1                       0                       0                
  6  1280   # hex.ele[4].gain.k
  0       4                       0                       0                
  6  1282   # hex.rep1.nout
  0       4                       0                       0                
  6  1282   # hex.rep2.nout
  0 2.9314999999999998E+002       0                       0                
  6  1280   # hex.THA1.y
  0 2.9314999999999998E+002       0                       0                
  6  1280   # hex.THA2.y
  0       0                       0                       0                
  6  1280   # hex.theCon1[1].dT
  0       0                       0                       0                
  6  1280   # hex.theCon1[1].G
  0       0                       0                       0                
  6  1280   # hex.theCon1[2].Q_flow
  0       0                       0                       0                
  6  1280   # hex.theCon1[2].dT
  0       0                       0                       0                
  6  1280   # hex.theCon1[2].G
  0       0                       0                       0                
  6  1280   # hex.theCon1[3].dT
  0       0                       0                       0                
  6  1280   # hex.theCon1[3].G
  0       0                       0                       0                
  6  1280   # hex.theCon2[1].dT
  0       0                       0                       0                
  6  1280   # hex.theCon2[1].G
  0       0                       0                       0                
  6  1280   # hex.theCon2[2].Q_flow
  0       0                       0                       0                
  6  1280   # hex.theCon2[2].dT
  0       0                       0                       0                
  6  1280   # hex.theCon2[2].G
  0       0                       0                       0                
  6  1280   # hex.theCon2[3].dT
  0       0                       0                       0                
  6  1280   # hex.theCon2[3].G
  0       0                       0                       0                
  6   256   # hex.QSen2_flow
  0       0                       0                       0                
  6   256   # hex.QLat2_flow
  0       0                       0                       1                
  6   256   # hex.SHR
  0       0                       0                       0                
  6   256   # hex.mWat_flow
  0       1                       0                       0                
  6   258   # warmWaterSource.nPorts
  0       0                       0                       0                
  6   257   # warmWaterSource.verifyInputs
  0       0                 -100000                  100000                
  6   388   # warmWaterSource.ports[1].m_flow
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # warmWaterSource.ports[1].h_outflow
  0       3                       1                       3                
  6  1282   # warmWaterSource.flowDirection
  0       1                       0                       0                
  6  1280   # warmWaterSource.X_in_internal[1]
  0       0                       0                       0                
  6   769   # warmWaterSource.use_p_in
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   256   # warmWaterSource.p
  0       1                       0                       0                
  6   769   # warmWaterSource.use_T_in
 -1 3.0314999999999998E+002       1                   10000                
  1   280   # warmWaterSource.T
  0       0                       0                       0                
  6   769   # warmWaterSource.use_X_in
  0       0                       0                       0                
  6   769   # warmWaterSource.use_Xi_in
  0       0                       0                       0                
  6   769   # warmWaterSource.use_C_in
 -1       1                       0                       1                
  1   280   # warmWaterSource.X[1]
  0       1                       0                       0                
  6   258   # waterSink.nPorts
  0       0                       0                       0                
  6   257   # waterSink.verifyInputs
  0       0                 -9.9999999999999995E+059 9.9999999999999995E+059
  6   388   # waterSink.ports[1].m_flow
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # waterSink.ports[1].h_outflow
  0       3                       1                       3                
  6  1282   # waterSink.flowDirection
  0       1                       0                       0                
  6  1280   # waterSink.X_in_internal[1]
  0       0                       0                       0                
  6   769   # waterSink.use_p_in
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   256   # waterSink.p
  0       0                       0                       0                
  6   769   # waterSink.use_T_in
 -1 2.9314999999999998E+002       1                   10000                
  1   280   # waterSink.T
  0       0                       0                       0                
  6   769   # waterSink.use_X_in
  0       0                       0                       0                
  6   769   # waterSink.use_Xi_in
  0       0                       0                       0                
  6   769   # waterSink.use_C_in
 -1       1                       0                       1                
  1   280   # waterSink.X[1]
 -1   10000                       0                       0                
  1   280   # Pressure1.k
  0       1                       0                       0                
  6   258   # ValveCharacteristicCurve.n
  0       0                       0                       0                
  6   256   # ValveCharacteristicCurve.u[1]
  0       0                       0                       1                
  6   256   # ValveCharacteristicCurve.y[1]
  0       0                       0                       0                
  6   257   # ValveCharacteristicCurve.tableOnFile
 -1       0                       0                       0                
  1   280   # ValveCharacteristicCurve.table[1, 1]
 -1       0                       0                       0                
  1   280   # ValveCharacteristicCurve.table[1, 2]
 -1       1                       0                       0                
  1   280   # ValveCharacteristicCurve.table[2, 1]
 -1       1                       0                       0                
  1   280   # ValveCharacteristicCurve.table[2, 2]
 -1       1                       0                       0                
  1   281   # ValveCharacteristicCurve.verboseRead
  0       2                       0                       0                
  6   258   # ValveCharacteristicCurve.columns[1]
  0       1                       1                       5                
  6   258   # ValveCharacteristicCurve.smoothness
  0       0                       0                       0                
  6  1282   # ValveCharacteristicCurve.tableID.id
  0       0                       0                       0                
  6  1280   # ValveCharacteristicCurve.tableOnFileRead
 -1     323                       0                       0                
  1   280   # Temperature.k
 -1 1.0000000000000000E-002       0                       0                
  1   280   # convertCommand.k
  0       1                       1                       4                
  6   258   # val.energyDynamics
  0       1                       1                       4                
  6   258   # val.massDynamics
  0       1                       1                       4                
  6   258   # val.substanceDynamics
  0       1                       1                       4                
  6   258   # val.traceDynamics
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1   280   # val.p_start
 -1 2.9314999999999998E+002       1                   10000                
  1   280   # val.T_start
 -1       1                       0                       1                
  1   280   # val.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # val.mSenFac
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   260   # val.port_2.p
  0       0                 -100000                  100000                
  6   388   # val.port_3.m_flow
  0      10                       0                       0                
  6   256   # val.tau
  0 1.0000000000000001E-001       0                       0                
  6   256   # val.mDyn_flow_nominal
  0       1                       0                       0                
  6   257   # val.from_dp
  0       3                       1                       3                
  6   258   # val.portFlowDirection_1
  0       3                       1                       3                
  6   258   # val.portFlowDirection_2
  0       3                       1                       3                
  6   258   # val.portFlowDirection_3
  0       0                       0                       0                
  6   257   # val.verifyFlowReversal
  0 1.0000000000000001E-005       0                       0                
  6   256   # val.m_flow_small
  0       1                       0                       0                
  6   257   # val.res1.allowFlowReversal
  0 1.0000000000000001E-001       0                       0                
  6   256   # val.res1.m_flow_nominal
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # val.res1.m_flow_small
  0       0                       0                       0                
  6   257   # val.res1.show_T
  0       0                       0                       0                
  6   256   # val.res1.dp
  0       0                       0                       0                
  6  1280   # val.res1._m_flow_start
  0       0                       0                       0                
  6  1280   # val.res1._dp_start
  0       1                       0                       0                
  6   257   # val.res1.from_dp
  0       0                       0                       0                
  6   256   # val.res1.dp_nominal
  0       1                       0                       0                
  6   257   # val.res1.homotopyInitialization
  0       0                       0                       0                
  6   257   # val.res1.linearized
  0       0                       0                 1.0000000000000000E+100
  6   256   # val.res1.m_flow_turbulent
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1  1304   # val.res1.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # val.res1.sta_default.T
  0 1.0000000000000000E-003       0                 1.0000000000000000E+100
  6  1280   # val.res1.eta_default
  0 1.0000000000000001E-001       0                       0                
  6  1280   # val.res1.m_flow_nominal_pos
  0       0                       0                       0                
  6  1280   # val.res1.dp_nominal_pos
  0       1                       1                       4                
  6   258   # val.res1.CvData
  0       0                       0                       0                
  6   256   # val.res1.Kv
  0       0                       0                       0                
  6   256   # val.res1.Cv
  0       0                       0                       0                
  6   256   # val.res1.Av
  0       0                       0                       0                
  6   256   # val.res1.deltaM
  0       0                       0                 1.0000000000000000E+100
  6   256   # val.res1.dpValve_nominal
 -1 9.9558600000000001E+002       0                 1.0000000000000000E+100
  1   280   # val.res1.rhoStd
  0       0                       0                 1.0000000000000000E+100
  6  1280   # val.res1.Kv_SI
  0       0                       0                       0                
  6   257   # val.res1.use_inputFilter
 -1     120                       0                       0                
  1   280   # val.res1.riseTime
 -1       2                       1                 1.0000000000000000E+100
  1   282   # val.res1.order
 -1       4                       1                       4                
  1   282   # val.res1.init
 -1       1                       0                       0                
  1   280   # val.res1.y_start
  0       0                       0                 1.0000000000000000E+100
  6   256   # val.res1.dpFixed_nominal
  0 1.0000000000000000E-010 1.0000000000000000E-010       1                
  6   256   # val.res1.l
  0       0                       0                       0                
  6   256   # val.res1.phi
  0       0                       0                 1.0000000000000000E+100
  6   256   # val.res1.kFixed
  0 9.9999999999999997E-061 9.9999999999999997E-061 1.0000000000000000E+100
  6   256   # val.res1.kVal
  0       1                       0                       0                
  6   257   # val.res2.allowFlowReversal
  0 1.0000000000000001E-001       0                       0                
  6   256   # val.res2.m_flow_nominal
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # val.res2.m_flow_small
  0       0                       0                       0                
  6   257   # val.res2.show_T
  0       0                       0                       0                
  6   256   # val.res2.dp
  0       0                       0                       0                
  6  1280   # val.res2._m_flow_start
  0       0                       0                       0                
  6  1280   # val.res2._dp_start
  0       1                       0                       0                
  6   257   # val.res2.from_dp
  0       1                       0                       0                
  6   257   # val.res3.allowFlowReversal
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # val.res3.port_b.h_outflow
  0 1.0000000000000001E-001       0                       0                
  6   256   # val.res3.m_flow_nominal
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # val.res3.m_flow_small
  0       0                       0                       0                
  6   257   # val.res3.show_T
  0       0                       0                       0                
  6   256   # val.res3.dp
  0       0                       0                       0                
  6  1280   # val.res3._m_flow_start
  0       0                       0                       0                
  6  1280   # val.res3._dp_start
  0       1                       0                       0                
  6   257   # val.res3.from_dp
  0       0                       0                       0                
  6   256   # val.res3.dp_nominal
  0       1                       0                       0                
  6   257   # val.res3.homotopyInitialization
  0       0                       0                       0                
  6   257   # val.res3.linearized
  0       0                       0                 1.0000000000000000E+100
  6   256   # val.res3.m_flow_turbulent
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1  1304   # val.res3.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # val.res3.sta_default.T
  0 1.0000000000000000E-003       0                 1.0000000000000000E+100
  6  1280   # val.res3.eta_default
  0 1.0000000000000001E-001       0                       0                
  6  1280   # val.res3.m_flow_nominal_pos
  0       0                       0                       0                
  6  1280   # val.res3.dp_nominal_pos
  0       1                       1                       4                
  6   258   # val.res3.CvData
  0       0                       0                       0                
  6   256   # val.res3.Kv
  0       0                       0                       0                
  6   256   # val.res3.Cv
  0       0                       0                       0                
  6   256   # val.res3.Av
  0       0                       0                       0                
  6   256   # val.res3.deltaM
  0       0                       0                 1.0000000000000000E+100
  6   256   # val.res3.dpValve_nominal
 -1 9.9558600000000001E+002       0                 1.0000000000000000E+100
  1   280   # val.res3.rhoStd
  0       0                       0                 1.0000000000000000E+100
  6  1280   # val.res3.Kv_SI
  0       0                       0                       0                
  6   257   # val.res3.use_inputFilter
 -1     120                       0                       0                
  1   280   # val.res3.riseTime
 -1       2                       1                 1.0000000000000000E+100
  1   282   # val.res3.order
 -1       4                       1                       4                
  1   282   # val.res3.init
 -1       1                       0                       0                
  1   280   # val.res3.y_start
  0       0                       0                       1                
  6   256   # val.res3.y
  0       0                       0                 1.0000000000000000E+100
  6   256   # val.res3.dpFixed_nominal
  0 1.0000000000000000E-010 1.0000000000000000E-010       1                
  6   256   # val.res3.l
  0       0                       0                       0                
  6   256   # val.res3.phi
  0       0                       0                 1.0000000000000000E+100
  6   256   # val.res3.kFixed
  0 9.9999999999999997E-061 9.9999999999999997E-061 1.0000000000000000E+100
  6   256   # val.res3.kVal
  0       1                       0                       0                
  6  1281   # val.have_controlVolume
  0       1                       0                       0                
  6   257   # val.use_inputFilter
 -1     120                       0                       0                
  1   280   # val.riseTime
  0       2                       1                 1.0000000000000000E+100
  6   258   # val.order
  0       4                       1                       4                
  6   258   # val.init
 -1       1                       0                       0                
  1   280   # val.y_start
  0       0                       0                       1                
  6   256   # val.y_actual
  0       1                       1                       4                
  6  1282   # val.filter.analogFilter
  0       1                       1                       4                
  6  1282   # val.filter.filterType
  0       2                       1                 1.0000000000000000E+100
  6  1282   # val.filter.order
  0       0                       0                       0                
  6  1280   # val.filter.f_cut
 -1       1                       0                       0                
  1  1304   # val.filter.gain
 -1 5.0000000000000000E-001       0                       0                
  1  1304   # val.filter.A_ripple
 -1       0                       0                       0                
  1  1304   # val.filter.f_min
 -1       1                       0                       0                
  1  1305   # val.filter.normalized
  0       4                       1                       4                
  6  1282   # val.filter.init
  0       2                       0                       0                
  6  1282   # val.filter.nx
 -1       0                       0                       0                
  1  1304   # val.filter.x_start[1]
 -1       0                       0                       0                
  1  1304   # val.filter.x_start[2]
  0       0                       0                       0                
  6  1280   # val.filter.y_start
 -1       1                       0                       0                
  1  1304   # val.filter.u_nominal
 -1       0                       0                       0                
  2  1296   # val.filter.x[1]
  0       0                       0                       0                
  3  1280   # val.filter.der(x[1])
 -1       0                       0                       0                
  2  1296   # val.filter.x[2]
  0       0                       0                       0                
  3  1280   # val.filter.der(x[2])
  0       2                       0                       0                
  6  1282   # val.filter.ncr
  0       0                       0                       0                
  6  1282   # val.filter.nc0
  0       0                       0                       0                
  6  1282   # val.filter.na
  0       2                       0                       0                
  6  1282   # val.filter.nr
  0       0                       0                       0                
  6  1280   # val.filter.cr[1]
  0       0                       0                       0                
  6  1280   # val.filter.cr[2]
  0       0                       0                       0                
  6  1280   # val.filter.r[1]
  0       0                       0                       0                
  6  1280   # val.filter.r[2]
  0       0                       0                       0                
  6  1280   # val.filter.uu[1]
  0       1                       1                       4                
  6   258   # val.CvData
  0       0                       0                       0                
  6   256   # val.Kv
  0       0                       0                       0                
  6   256   # val.Cv
  0       0                       0                       0                
  6   256   # val.Av
 -1 2.0000000000000000E-002       0                       0                
  1   280   # val.deltaM
  0 1.0000000000000001E-001       0                       0                
  6   256   # val.m_flow_nominal
 -1    2000                       0                 1.0000000000000000E+100
  1   280   # val.dpValve_nominal
 -1 9.9558600000000001E+002       0                 1.0000000000000000E+100
  1   280   # val.rhoStd
  0       0                       0                 1.0000000000000000E+100
  6  1280   # val.Kv_SI
  0       0                       0                 1.0000000000000000E+100
  6   256   # val.dpFixed_nominal[1]
  0       0                       0                 1.0000000000000000E+100
  6   256   # val.dpFixed_nominal[2]
 -1 6.9999999999999996E-001       0                       1                
  1   280   # val.fraK
 -1 1.0000000000000000E-002       0                       1                
  1   280   # val.l[1]
 -1 1.0000000000000000E-002       0                       1                
  1   280   # val.l[2]
  0       0                       0                       0                
  6   257   # val.linearized[1]
  0       0                       0                       0                
  6   257   # val.linearized[2]
  0       1                       0                       0                
  6   257   # val.homotopyInitialization
  0       1                       0                       0                
  6  1280   # val.inv.u1
  0       1                       0                       0                
  6  1280   # val.uni.k
  0       1                       0                       0                
  6  1280   # val.uni.y
  0       1                       1                       4                
  6   258   # CurculationPump.energyDynamics
  0       1                       1                       4                
  6   258   # CurculationPump.massDynamics
  0       1                       1                       4                
  6   258   # CurculationPump.substanceDynamics
  0       1                       1                       4                
  6   258   # CurculationPump.traceDynamics
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1   280   # CurculationPump.p_start
 -1 2.9314999999999998E+002       1                   10000                
  1   280   # CurculationPump.T_start
 -1       1                       0                       1                
  1   280   # CurculationPump.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # CurculationPump.mSenFac
  0       1                       0                       0                
  6   257   # CurculationPump.allowFlowReversal
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # CurculationPump.port_a.h_outflow
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # CurculationPump.port_b.h_outflow
  0 1.0000000000000001E-001       0                       0                
  6   256   # CurculationPump.m_flow_nominal
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # CurculationPump.m_flow_small
  0       0                       0                       0                
  6   257   # CurculationPump.show_T
  0       0                       0                       0                
  6   256   # CurculationPump.dp
  0       0                       0                       0                
  6  1280   # CurculationPump._m_flow_start
  0       0                       0                       0                
  6  1280   # CurculationPump._dp_start
  0       0                       0                 1.0000000000000000E+100
  6   256   # CurculationPump.per.pressure.V_flow[1]
  0       0                       0                 1.0000000000000000E+100
  6   256   # CurculationPump.per.pressure.V_flow[2]
  0       0                       0                 1.0000000000000000E+100
  6   256   # CurculationPump.per.pressure.dp[1]
  0       0                       0                 1.0000000000000000E+100
  6   256   # CurculationPump.per.pressure.dp[2]
 -1       0                       0                       0                
  1   281   # CurculationPump.per.use_powerCharacteristic
 -1       0                       0                 1.0000000000000000E+100
  1   280   # CurculationPump.per.hydraulicEfficiency.V_flow[1]
 -1 6.9999999999999996E-001       0                       1                
  1   280   # CurculationPump.per.hydraulicEfficiency.eta[1]
 -1       0                       0                 1.0000000000000000E+100
  1   280   # CurculationPump.per.motorEfficiency.V_flow[1]
 -1 6.9999999999999996E-001       0                       1                
  1   280   # CurculationPump.per.motorEfficiency.eta[1]
 -1       0                       0                 1.0000000000000000E+100
  1   280   # CurculationPump.per.power.V_flow[1]
 -1       0                       0                 1.0000000000000000E+100
  1   280   # CurculationPump.per.power.P[1]
 -1       1                       0                       0                
  1   281   # CurculationPump.per.motorCooledByFluid
 -1       1                       0                 1.0000000000000000E+100
  1   280   # CurculationPump.per.speed_nominal
  0       0                       0                 1.0000000000000000E+100
  6   256   # CurculationPump.per.constantSpeed
  0       0                       0                 1.0000000000000000E+100
  6   256   # CurculationPump.per.speeds[1]
 -1    1500                       0                       0                
  1   280   # CurculationPump.per.speed_rpm_nominal
  0       0                       0                       0                
  6   256   # CurculationPump.per.constantSpeed_rpm
  0       0                       0                       0                
  6   256   # CurculationPump.per.speeds_rpm[1]
  0       0                       0                       0                
  6   257   # CurculationPump.per.havePressureCurve
  0       3                       1                       3                
  6   258   # CurculationPump.inputType
  0   10000                       0                       0                
  6   256   # CurculationPump.constInput
  0   10000                       0                       0                
  6   256   # CurculationPump.stageInputs[1]
  0       0                       0                       0                
  6   257   # CurculationPump.computePowerUsingSimilarityLaws
  0       1                       0                       0                
  6   257   # CurculationPump.addPowerToMedium
 -1       0                       0                       0                
  1   281   # CurculationPump.nominalValuesDefineDefaultPressureCurve
  0       1                       0                       0                
  6   256   # CurculationPump.tau
  0       1                       0                       0                
  6   257   # CurculationPump.use_inputFilter
 -1      30                       0                       0                
  1   280   # CurculationPump.riseTime
  0       4                       1                       4                
  6   258   # CurculationPump.init
 -1       0                       0                       1                
  1   280   # CurculationPump.y_start
  0       1                       0                       0                
  6   256   # CurculationPump.y_actual
  0       0                       0                       0                
  6   256   # CurculationPump.P
  0     300                       1                   10000                
  6   260   # CurculationPump.heatPort.T
  0       0                       0                       0                
  6   388   # CurculationPump.heatPort.Q_flow
  0       0                       0                       0                
  6   256   # CurculationPump.VMachine_flow
  0       0                       0                       0                
  6   256   # CurculationPump.dpMachine
  0       0                       0                       0                
  6   256   # CurculationPump.eta
  0       0                       0                       0                
  6   256   # CurculationPump.etaHyd
  0       0                       0                       0                
  6   256   # CurculationPump.etaMot
  0       0                       0                       0                
  6  1280   # CurculationPump._VMachine_flow
  0       3                       1                       3                
  6  1282   # CurculationPump.preVar
  0       0                       0                       0                
  6  1281   # CurculationPump.speedIsInput
  0       2                       0                       0                
  6  1282   # CurculationPump.nOri
  0       1                       0                       0                
  6  1281   # CurculationPump.haveVMax
  0 1.0044335697769957E-004       0                       0                
  6  1280   # CurculationPump.V_flow_max
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # CurculationPump.sta_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # CurculationPump.sta_start.T
  0       0                       0                       0                
  6  1280   # CurculationPump.h_outflow_start
  0       1                       1                       4                
  6  1282   # CurculationPump.vol.energyDynamics
  0       1                       1                       4                
  6  1282   # CurculationPump.vol.massDynamics
  0       1                       1                       4                
  6  1282   # CurculationPump.vol.substanceDynamics
  0       1                       1                       4                
  6  1282   # CurculationPump.vol.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # CurculationPump.vol.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # CurculationPump.vol.T_start
  0       0                       0                       1                
  6  1280   # CurculationPump.vol.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # CurculationPump.vol.mSenFac
  0       0                       0                       0                
  6   769   # CurculationPump.vol.initialize_p
  0       1                       0                       0                
  6  1281   # CurculationPump.vol.prescribedHeatFlowRate
  0       1                       0                       0                
  6  1281   # CurculationPump.vol.simplify_mWat_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.vol.m_flow_nominal
  0       2                       0                       0                
  6  1282   # CurculationPump.vol.nPorts
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.vol.m_flow_small
  0       1                       0                       0                
  6  1281   # CurculationPump.vol.allowFlowReversal
  0 1.0044335697769957E-004       0                       0                
  6  1280   # CurculationPump.vol.V
  0 1.0000000000000001E-001       0                       0                
  6  1280   # CurculationPump.vol.m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.vol.rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # CurculationPump.vol.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # CurculationPump.vol.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.vol.rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # CurculationPump.vol.state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # CurculationPump.vol.state_start.T
  0       0                       0                       0                
  6  1281   # CurculationPump.vol.useSteadyStateTwoPort
  0       0                       0                       0                
  6  1281   # CurculationPump.vol.use_C_flow
  0       0                       0                       0                
  6  1412   # CurculationPump.vol.heatPort.Q_flow
  0       1                       0                       0                
  6  1280   # CurculationPump.vol.tau
  0 1.0044335697769957E-004       0                       0                
  6  1280   # CurculationPump.vol.V_nominal
  0       1                       1                       4                
  6  1282   # CurculationPump.filter.analogFilter
  0       1                       1                       4                
  6  1282   # CurculationPump.filter.filterType
  0       2                       1                 1.0000000000000000E+100
  6  1282   # CurculationPump.filter.order
  0       0                       0                       0                
  6  1280   # CurculationPump.filter.f_cut
 -1       1                       0                       0                
  1  1304   # CurculationPump.filter.gain
 -1 5.0000000000000000E-001       0                       0                
  1  1304   # CurculationPump.filter.A_ripple
 -1       0                       0                       0                
  1  1304   # CurculationPump.filter.f_min
 -1       1                       0                       0                
  1  1305   # CurculationPump.filter.normalized
  0       4                       1                       4                
  6  1282   # CurculationPump.filter.init
  0       2                       0                       0                
  6  1282   # CurculationPump.filter.nx
 -1       0                       0                       0                
  1  1304   # CurculationPump.filter.x_start[1]
 -1       0                       0                       0                
  1  1304   # CurculationPump.filter.x_start[2]
  0       0                       0                       0                
  6  1280   # CurculationPump.filter.y_start
  0   10000                       0                       0                
  6  1280   # CurculationPump.filter.u_nominal
 -1       0                       0                       0                
  2  1296   # CurculationPump.filter.x[1]
  0       0                       0                       0                
  3  1280   # CurculationPump.filter.der(x[1])
 -1       0                       0                       0                
  2  1296   # CurculationPump.filter.x[2]
  0       0                       0                       0                
  3  1280   # CurculationPump.filter.der(x[2])
  0       2                       0                       0                
  6  1282   # CurculationPump.filter.ncr
  0       0                       0                       0                
  6  1282   # CurculationPump.filter.nc0
  0       0                       0                       0                
  6  1282   # CurculationPump.filter.na
  0       2                       0                       0                
  6  1282   # CurculationPump.filter.nr
  0       0                       0                       0                
  6  1280   # CurculationPump.filter.cr[1]
  0       0                       0                       0                
  6  1280   # CurculationPump.filter.cr[2]
  0       0                       0                       0                
  6  1280   # CurculationPump.filter.r[1]
  0       0                       0                       0                
  6  1280   # CurculationPump.filter.r[2]
  0       0                       0                       0                
  6  1280   # CurculationPump.filter.uu[1]
  0       1                       0                       0                
  6  1281   # CurculationPump.preSou.allowFlowReversal
  0       0                       0                       0                
  6  1280   # CurculationPump.preSou.dp_start
 -1       0                 -100000                  100000                
  1  1304   # CurculationPump.preSou.m_flow_start
  0 1.0000000000000001E-005 -100000                  100000                
  6  1280   # CurculationPump.preSou.m_flow_small
  0       0                       0                       0                
  6  1281   # CurculationPump.preSou.show_T
  0       1                       0                       0                
  6  1281   # CurculationPump.preSou.show_V_flow
  0       0                       0                       0                
  6  1280   # CurculationPump.preSou.V_flow
  0       0                       0                       0                
  6  1281   # CurculationPump.preSou.control_m_flow
  0       1                       0                       0                
  6  1281   # CurculationPump.preSou.control_dp
  0       0                       0                       0                
  6  1280   # CurculationPump.preSou.m_flow_internal
  0       1                       0                       0                
  6  1281   # CurculationPump.heaDis.homotopyInitialization
  0       0                       0                       0                
  6  1281   # CurculationPump.heaDis.motorCooledByFluid
  0 1.0044335697769957E-007       0                       0                
  6  1280   # CurculationPump.heaDis.delta_V_flow
  0       0                       0                       0                
  6  1280   # CurculationPump.heaDis.Q_flow
  0       0                       0                       0                
  6  1280   # CurculationPump.heaDis.WHyd
  0       0                       0                       0                
  6  1280   # CurculationPump.heaDis.QThe_flow
  0       1                       0                       0                
  6  1280   # CurculationPump.PToMed.k1
  0       1                       0                       0                
  6  1280   # CurculationPump.PToMed.k2
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1  1304   # CurculationPump.prePow.T_ref
  0       0                       0                       0                
  6  1280   # CurculationPump.prePow.alpha
  0 9.9558600000000001E+002       0                       0                
  6  1280   # CurculationPump.rho_inlet.y
  0       1                       0                       0                
  6  1281   # CurculationPump.senMasFlo.allowFlowReversal
  0       0                       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.senMasFlo.m_flow_nominal
  0       0                       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.senMasFlo.m_flow_small
  0       0                       0                  100000                
  6  1412   # CurculationPump.senRelPre.port_a.m_flow
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6  1284   # CurculationPump.senRelPre.port_a.h_outflow
  0       0                       0                  100000                
  6  1412   # CurculationPump.senRelPre.port_b.m_flow
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6  1284   # CurculationPump.senRelPre.port_b.h_outflow
  0       0                       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.eff.per.pressure.V_flow[1]
  0 2.0088671395539914E-004       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.eff.per.pressure.V_flow[2]
  0   20000                       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.eff.per.pressure.dp[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.eff.per.pressure.dp[2]
  0       0                       0                       0                
  6  1281   # CurculationPump.eff.per.use_powerCharacteristic
  0       0                       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.eff.per.hydraulicEfficiency.V_flow[1]
  0       0                       0                       1                
  6  1280   # CurculationPump.eff.per.hydraulicEfficiency.eta[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.eff.per.motorEfficiency.V_flow[1]
  0       0                       0                       1                
  6  1280   # CurculationPump.eff.per.motorEfficiency.eta[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.eff.per.power.V_flow[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.eff.per.power.P[1]
  0       0                       0                       0                
  6  1281   # CurculationPump.eff.per.motorCooledByFluid
  0       0                       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.eff.per.speed_nominal
  0       0                       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.eff.per.constantSpeed
  0       0                       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.eff.per.speeds[1]
 -1    1500                       0                       0                
  1  1304   # CurculationPump.eff.per.speed_rpm_nominal
  0       0                       0                       0                
  6  1280   # CurculationPump.eff.per.constantSpeed_rpm
  0       0                       0                       0                
  6  1280   # CurculationPump.eff.per.speeds_rpm[1]
  0       1                       0                       0                
  6  1281   # CurculationPump.eff.per.havePressureCurve
  0       3                       1                       3                
  6  1282   # CurculationPump.eff.preVar
  0       0                       0                       0                
  6  1281   # CurculationPump.eff.computePowerUsingSimilarityLaws
  0 2.0088671395539914E-004       0                       0                
  6  1280   # CurculationPump.eff.V_flow_nominal
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.eff.rho_default
  0       1                       0                       0                
  6  1281   # CurculationPump.eff.haveVMax
  0 1.0044335697769957E-004       0                       0                
  6  1280   # CurculationPump.eff.V_flow_max
  0       2                       1                 1.0000000000000000E+100
  6  1282   # CurculationPump.eff.nOri
  0       1                       0                       0                
  6  1281   # CurculationPump.eff.homotopyInitialization
  0       1                       0                       0                
  6  1280   # CurculationPump.eff.y_out
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.eff.rho
  0       0                       0                       0                
  6  1280   # CurculationPump.eff.WFlo
  0       1                       0                       0                
  6  1280   # CurculationPump.eff.r_N
  0 1.0044335697769957E-004       0                       0                
  6  1280   # CurculationPump.eff.r_V
  0       0                       0                       0                
  6  1281   # CurculationPump.eff.preSpe
  0       1                       0                       0                
  6  1281   # CurculationPump.eff.prePre
  0       0                       0                       0                
  6  1280   # CurculationPump.eff.motDer[1]
  0       0                       0                       0                
  6  1280   # CurculationPump.eff.hydDer[1]
  0   20000                       0                       0                
  6  1280   # CurculationPump.eff.dpMax
  0 5.0000000000000003E-002       0                       0                
  6  1280   # CurculationPump.eff.delta
  0 4.9779300000000003E+004       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.eff.kRes
  0       1                       0                       0                
  6  1282   # CurculationPump.eff.curve
  0       2                       0                       0                
  6  1282   # CurculationPump.eff.pCur1.n
  0       0                       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.eff.pCur1.V_flow[1]
  0 2.0088671395539914E-004       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.eff.pCur1.V_flow[2]
  0   20000                       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.eff.pCur1.dp[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.eff.pCur1.dp[2]
  0       3                       0                       0                
  6  1282   # CurculationPump.eff.pCur2.n
  0       0                       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.eff.pCur2.V_flow[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.eff.pCur2.V_flow[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.eff.pCur2.V_flow[3]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.eff.pCur2.dp[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.eff.pCur2.dp[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.eff.pCur2.dp[3]
  0       4                       0                       0                
  6  1282   # CurculationPump.eff.pCur3.n
  0       0                       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.eff.pCur3.V_flow[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.eff.pCur3.V_flow[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.eff.pCur3.V_flow[3]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.eff.pCur3.V_flow[4]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.eff.pCur3.dp[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.eff.pCur3.dp[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.eff.pCur3.dp[3]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.eff.pCur3.dp[4]
  0       0                       0                       0                
  6  1280   # CurculationPump.eff.preDer1[1]
  0       0                       0                       0                
  6  1280   # CurculationPump.eff.preDer1[2]
  0       0                       0                       0                
  6  1280   # CurculationPump.eff.preDer2[1]
  0       0                       0                       0                
  6  1280   # CurculationPump.eff.preDer2[2]
  0       0                       0                       0                
  6  1280   # CurculationPump.eff.preDer2[3]
  0       0                       0                       0                
  6  1280   # CurculationPump.eff.preDer3[1]
  0       0                       0                       0                
  6  1280   # CurculationPump.eff.preDer3[2]
  0       0                       0                       0                
  6  1280   # CurculationPump.eff.preDer3[3]
  0       0                       0                       0                
  6  1280   # CurculationPump.eff.preDer3[4]
  0       0                       0                       0                
  6  1280   # CurculationPump.eff.powDer[1]
  0       1                       0                       0                
  6  1281   # CurculationPump.eff.haveMinimumDecrease
  0       1                       0                       0                
  6  1281   # CurculationPump.eff.haveDPMax
 -1       0                       0                 1.0000000000000000E+100
  1   280   # CurculationPump.dp_start
  0   10000                       0                 1.0000000000000000E+100
  6   256   # CurculationPump.dp_nominal
  0   10000                       0                 1.0000000000000000E+100
  6   256   # CurculationPump.constantHead
  0   10000                       0                 1.0000000000000000E+100
  6   256   # CurculationPump.heads[1]
  0       0                       0                       0                
  6   257   # CurculationPump.prescribeSystemPressure
  0       0                       0                       0                
  6   256   # CurculationPump.dp_actual
  0      -1                       0                       0                
  6  1280   # CurculationPump.gain.k
  0       1                       1                       4                
  6  1282   # hex.ele[1].vol1.dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[1].vol1.dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[1].vol1.dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[1].vol1.dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[1].vol1.dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[1].vol1.dynBal.T_start
  0       0                       0                       1                
  6  1280   # hex.ele[1].vol1.dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # hex.ele[1].vol1.dynBal.mSenFac
  0       0                       0                       0                
  6   769   # hex.ele[1].vol1.dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # hex.ele[1].vol1.dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # hex.ele[1].vol1.dynBal.nPorts
  0       0                       0                       0                
  6  1281   # hex.ele[1].vol1.dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # hex.ele[1].vol1.dynBal.use_C_flow
  0 2.5000000000000000E-001       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].vol1.dynBal.mOut
  0     300                       1                   10000                
  6  1280   # hex.ele[1].vol1.dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].vol1.dynBal.medium.d
  0       1                       0                       1                
  6  1280   # hex.ele[1].vol1.dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # hex.ele[1].vol1.dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].vol1.dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # hex.ele[1].vol1.dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # hex.ele[1].vol1.dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # hex.ele[1].vol1.dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # hex.ele[1].vol1.dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # hex.ele[1].vol1.dynBal.U
  0       0                       0                       0                
  3  1280   # hex.ele[1].vol1.dynBal.der(U)
  0 2.5000000000000000E-001       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].vol1.dynBal.m
  0       0                       0                       0                
  6  1280   # hex.ele[1].vol1.dynBal.der(m)
  0       0                       0                       0                
  6  1280   # hex.ele[1].vol1.dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # hex.ele[1].vol1.dynBal.Hb_flow
  0 2.5110839244424891E-004       0                       0                
  6  1280   # hex.ele[1].vol1.dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # hex.ele[1].vol1.dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # hex.ele[1].vol1.dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # hex.ele[1].vol1.dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # hex.ele[1].vol1.dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].vol1.dynBal.rho_start
  0       0                       0                       0                
  6  1281   # hex.ele[1].vol1.dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[1].vol1.dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[1].vol1.dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].vol1.dynBal.rho_default
  0       0                       0                       0                
  6  1280   # hex.ele[1].vol1.dynBal.hStart
  0       0                       0                       0                
  6  1281   # hex.ele[1].vol1.dynBal._simplify_mWat_flow
  0       0                       0                       0                
  6  1280   # hex.ele[1].vol1.dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # hex.ele[1].vol2.dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[1].vol2.dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[1].vol2.dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[1].vol2.dynBal.traceDynamics
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[1].vol2.dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[1].vol2.dynBal.T_start
  0       0                       0                       1                
  6  1280   # hex.ele[1].vol2.dynBal.X_start[1]
  0       0                       0                       1                
  6  1280   # hex.ele[1].vol2.dynBal.X_start[2]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # hex.ele[1].vol2.dynBal.mSenFac
  0       1                       0                       0                
  6   769   # hex.ele[1].vol2.dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # hex.ele[1].vol2.dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # hex.ele[1].vol2.dynBal.nPorts
  0       1                       0                       0                
  6  1281   # hex.ele[1].vol2.dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # hex.ele[1].vol2.dynBal.use_C_flow
  0 9.9975326918332097E-001       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].vol2.dynBal.mOut
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hex.ele[1].vol2.dynBal.ports[1].p
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hex.ele[1].vol2.dynBal.ports[2].p
  0 1.0130000000000000E+005       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].vol2.dynBal.medium.p
  0 1.1997039230199851E+000       0                  100000                
  6  1280   # hex.ele[1].vol2.dynBal.medium.d
  0     300                       1                   10000                
  6  1280   # hex.ele[1].vol2.dynBal.medium.T
  0       0                       0                       1                
  6  1280   # hex.ele[1].vol2.dynBal.medium.X[2]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # hex.ele[1].vol2.dynBal.medium.u
  0    1000                       0                 1.0000000000000000E+007
  6  1280   # hex.ele[1].vol2.dynBal.medium.R
  0 3.2000000000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6  1280   # hex.ele[1].vol2.dynBal.medium.MM
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[1].vol2.dynBal.medium.state.p
  0       0                       0                       0                
  6  1281   # hex.ele[1].vol2.dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # hex.ele[1].vol2.dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # hex.ele[1].vol2.dynBal.medium.T_degC
  0 1.0130000000000001E+000       0                       0                
  6  1280   # hex.ele[1].vol2.dynBal.medium.p_bar
  0 1.8015280000000002E-002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].vol2.dynBal.medium.MMX[1]
  0 2.8965115900000001E-002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].vol2.dynBal.medium.MMX[2]
  0       0                       0                       1                
  6  1280   # hex.ele[1].vol2.dynBal.medium.X_air
  0      20                       0                       0                
  6  1280   # hex.ele[1].vol2.dynBal.medium.dT
 -1       0                       0                       0                
  2  1296   # hex.ele[1].vol2.dynBal.U
  0       0                       0                       0                
  3  1280   # hex.ele[1].vol2.dynBal.der(U)
  0 9.9975326918332097E-001       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].vol2.dynBal.m
  0       0                       0                       0                
  6  1280   # hex.ele[1].vol2.dynBal.der(m)
 -1       0                       0                 1.0000000000000000E+100
  2  1296   # hex.ele[1].vol2.dynBal.mXi[1]
  0       0                       0                       0                
  3  1280   # hex.ele[1].vol2.dynBal.der(mXi[1])
  0       0                       0                       0                
  6  1280   # hex.ele[1].vol2.dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # hex.ele[1].vol2.dynBal.mbXi_flow[1]
  0       0                       0                       0                
  6  1280   # hex.ele[1].vol2.dynBal.Hb_flow
  0 8.3333333333333337E-001       0                       0                
  6  1280   # hex.ele[1].vol2.dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # hex.ele[1].vol2.dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # hex.ele[1].vol2.dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # hex.ele[1].vol2.dynBal.ports_H_flow[2]
  0       0                       0                       0                
  6  1280   # hex.ele[1].vol2.dynBal.ports_mXi_flow[1, 1]
  0       0                       0                       0                
  6  1280   # hex.ele[1].vol2.dynBal.ports_mXi_flow[2, 1]
  0 1.0145400000000000E+003       0                       0                
  6  1280   # hex.ele[1].vol2.dynBal.cp_default
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].vol2.dynBal.rho_start
  0       0                       0                       0                
  6  1281   # hex.ele[1].vol2.dynBal.computeCSen
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[1].vol2.dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[1].vol2.dynBal.state_default.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # hex.ele[1].vol2.dynBal.state_default.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # hex.ele[1].vol2.dynBal.state_default.X[2]
  0 1.2000000000000000E+000       0                 1.0000000000000000E+100
  6  1280   # hex.ele[1].vol2.dynBal.rho_default
  0       1                       0                       0                
  6  1280   # hex.ele[1].vol2.dynBal.s[1]
  0       0                       0                       0                
  6  1280   # hex.ele[1].vol2.dynBal.hStart
  0       1                       0                       0                
  6  1281   # hex.ele[1].vol2.dynBal._simplify_mWat_flow
  0       1                       1                       4                
  6  1282   # hex.ele[2].vol1.dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[2].vol1.dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[2].vol1.dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[2].vol1.dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[2].vol1.dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[2].vol1.dynBal.T_start
  0       0                       0                       1                
  6  1280   # hex.ele[2].vol1.dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # hex.ele[2].vol1.dynBal.mSenFac
  0       0                       0                       0                
  6   769   # hex.ele[2].vol1.dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # hex.ele[2].vol1.dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # hex.ele[2].vol1.dynBal.nPorts
  0       0                       0                       0                
  6  1281   # hex.ele[2].vol1.dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # hex.ele[2].vol1.dynBal.use_C_flow
  0 2.5000000000000000E-001       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].vol1.dynBal.mOut
  0     300                       1                   10000                
  6  1280   # hex.ele[2].vol1.dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].vol1.dynBal.medium.d
  0       1                       0                       1                
  6  1280   # hex.ele[2].vol1.dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # hex.ele[2].vol1.dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].vol1.dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # hex.ele[2].vol1.dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # hex.ele[2].vol1.dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # hex.ele[2].vol1.dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # hex.ele[2].vol1.dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # hex.ele[2].vol1.dynBal.U
  0       0                       0                       0                
  3  1280   # hex.ele[2].vol1.dynBal.der(U)
  0 2.5000000000000000E-001       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].vol1.dynBal.m
  0       0                       0                       0                
  6  1280   # hex.ele[2].vol1.dynBal.der(m)
  0       0                       0                       0                
  6  1280   # hex.ele[2].vol1.dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # hex.ele[2].vol1.dynBal.Hb_flow
  0 2.5110839244424891E-004       0                       0                
  6  1280   # hex.ele[2].vol1.dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # hex.ele[2].vol1.dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # hex.ele[2].vol1.dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # hex.ele[2].vol1.dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # hex.ele[2].vol1.dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].vol1.dynBal.rho_start
  0       0                       0                       0                
  6  1281   # hex.ele[2].vol1.dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[2].vol1.dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[2].vol1.dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].vol1.dynBal.rho_default
  0       0                       0                       0                
  6  1280   # hex.ele[2].vol1.dynBal.hStart
  0       0                       0                       0                
  6  1281   # hex.ele[2].vol1.dynBal._simplify_mWat_flow
  0       0                       0                       0                
  6  1280   # hex.ele[2].vol1.dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # hex.ele[2].vol2.dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[2].vol2.dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[2].vol2.dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[2].vol2.dynBal.traceDynamics
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[2].vol2.dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[2].vol2.dynBal.T_start
  0       0                       0                       1                
  6  1280   # hex.ele[2].vol2.dynBal.X_start[1]
  0       0                       0                       1                
  6  1280   # hex.ele[2].vol2.dynBal.X_start[2]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # hex.ele[2].vol2.dynBal.mSenFac
  0       0                       0                       0                
  6   769   # hex.ele[2].vol2.dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # hex.ele[2].vol2.dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # hex.ele[2].vol2.dynBal.nPorts
  0       1                       0                       0                
  6  1281   # hex.ele[2].vol2.dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # hex.ele[2].vol2.dynBal.use_C_flow
  0 9.9975326918332097E-001       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].vol2.dynBal.mOut
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hex.ele[2].vol2.dynBal.ports[1].p
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hex.ele[2].vol2.dynBal.ports[2].p
  0 1.0130000000000000E+005       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].vol2.dynBal.medium.p
  0 1.1997039230199851E+000       0                  100000                
  6  1280   # hex.ele[2].vol2.dynBal.medium.d
  0     300                       1                   10000                
  6  1280   # hex.ele[2].vol2.dynBal.medium.T
  0       0                       0                       1                
  6  1280   # hex.ele[2].vol2.dynBal.medium.X[2]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # hex.ele[2].vol2.dynBal.medium.u
  0    1000                       0                 1.0000000000000000E+007
  6  1280   # hex.ele[2].vol2.dynBal.medium.R
  0 3.2000000000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6  1280   # hex.ele[2].vol2.dynBal.medium.MM
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[2].vol2.dynBal.medium.state.p
  0       0                       0                       0                
  6  1281   # hex.ele[2].vol2.dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # hex.ele[2].vol2.dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # hex.ele[2].vol2.dynBal.medium.T_degC
  0 1.0130000000000001E+000       0                       0                
  6  1280   # hex.ele[2].vol2.dynBal.medium.p_bar
  0 1.8015280000000002E-002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].vol2.dynBal.medium.MMX[1]
  0 2.8965115900000001E-002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].vol2.dynBal.medium.MMX[2]
  0       0                       0                       1                
  6  1280   # hex.ele[2].vol2.dynBal.medium.X_air
  0      20                       0                       0                
  6  1280   # hex.ele[2].vol2.dynBal.medium.dT
 -1       0                       0                       0                
  2  1296   # hex.ele[2].vol2.dynBal.U
  0       0                       0                       0                
  3  1280   # hex.ele[2].vol2.dynBal.der(U)
  0 9.9975326918332097E-001       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].vol2.dynBal.m
  0       0                       0                       0                
  6  1280   # hex.ele[2].vol2.dynBal.der(m)
 -1       0                       0                 1.0000000000000000E+100
  2  1296   # hex.ele[2].vol2.dynBal.mXi[1]
  0       0                       0                       0                
  3  1280   # hex.ele[2].vol2.dynBal.der(mXi[1])
  0       0                       0                       0                
  6  1280   # hex.ele[2].vol2.dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # hex.ele[2].vol2.dynBal.mbXi_flow[1]
  0       0                       0                       0                
  6  1280   # hex.ele[2].vol2.dynBal.Hb_flow
  0 8.3333333333333337E-001       0                       0                
  6  1280   # hex.ele[2].vol2.dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # hex.ele[2].vol2.dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # hex.ele[2].vol2.dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # hex.ele[2].vol2.dynBal.ports_H_flow[2]
  0       0                       0                       0                
  6  1280   # hex.ele[2].vol2.dynBal.ports_mXi_flow[1, 1]
  0       0                       0                       0                
  6  1280   # hex.ele[2].vol2.dynBal.ports_mXi_flow[2, 1]
  0 1.0145400000000000E+003       0                       0                
  6  1280   # hex.ele[2].vol2.dynBal.cp_default
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].vol2.dynBal.rho_start
  0       0                       0                       0                
  6  1281   # hex.ele[2].vol2.dynBal.computeCSen
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[2].vol2.dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[2].vol2.dynBal.state_default.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # hex.ele[2].vol2.dynBal.state_default.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # hex.ele[2].vol2.dynBal.state_default.X[2]
  0 1.2000000000000000E+000       0                 1.0000000000000000E+100
  6  1280   # hex.ele[2].vol2.dynBal.rho_default
  0       1                       0                       0                
  6  1280   # hex.ele[2].vol2.dynBal.s[1]
  0       0                       0                       0                
  6  1280   # hex.ele[2].vol2.dynBal.hStart
  0       1                       0                       0                
  6  1281   # hex.ele[2].vol2.dynBal._simplify_mWat_flow
  0       1                       1                       4                
  6  1282   # hex.ele[3].vol1.dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[3].vol1.dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[3].vol1.dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[3].vol1.dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[3].vol1.dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[3].vol1.dynBal.T_start
  0       0                       0                       1                
  6  1280   # hex.ele[3].vol1.dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # hex.ele[3].vol1.dynBal.mSenFac
  0       0                       0                       0                
  6   769   # hex.ele[3].vol1.dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # hex.ele[3].vol1.dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # hex.ele[3].vol1.dynBal.nPorts
  0       0                       0                       0                
  6  1281   # hex.ele[3].vol1.dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # hex.ele[3].vol1.dynBal.use_C_flow
  0 2.5000000000000000E-001       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].vol1.dynBal.mOut
  0     300                       1                   10000                
  6  1280   # hex.ele[3].vol1.dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].vol1.dynBal.medium.d
  0       1                       0                       1                
  6  1280   # hex.ele[3].vol1.dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # hex.ele[3].vol1.dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].vol1.dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # hex.ele[3].vol1.dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # hex.ele[3].vol1.dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # hex.ele[3].vol1.dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # hex.ele[3].vol1.dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # hex.ele[3].vol1.dynBal.U
  0       0                       0                       0                
  3  1280   # hex.ele[3].vol1.dynBal.der(U)
  0 2.5000000000000000E-001       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].vol1.dynBal.m
  0       0                       0                       0                
  6  1280   # hex.ele[3].vol1.dynBal.der(m)
  0       0                       0                       0                
  6  1280   # hex.ele[3].vol1.dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # hex.ele[3].vol1.dynBal.Hb_flow
  0 2.5110839244424891E-004       0                       0                
  6  1280   # hex.ele[3].vol1.dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # hex.ele[3].vol1.dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # hex.ele[3].vol1.dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # hex.ele[3].vol1.dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # hex.ele[3].vol1.dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].vol1.dynBal.rho_start
  0       0                       0                       0                
  6  1281   # hex.ele[3].vol1.dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[3].vol1.dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[3].vol1.dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].vol1.dynBal.rho_default
  0       0                       0                       0                
  6  1280   # hex.ele[3].vol1.dynBal.hStart
  0       0                       0                       0                
  6  1281   # hex.ele[3].vol1.dynBal._simplify_mWat_flow
  0       0                       0                       0                
  6  1280   # hex.ele[3].vol1.dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # hex.ele[3].vol2.dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[3].vol2.dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[3].vol2.dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[3].vol2.dynBal.traceDynamics
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[3].vol2.dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[3].vol2.dynBal.T_start
  0       0                       0                       1                
  6  1280   # hex.ele[3].vol2.dynBal.X_start[1]
  0       0                       0                       1                
  6  1280   # hex.ele[3].vol2.dynBal.X_start[2]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # hex.ele[3].vol2.dynBal.mSenFac
  0       0                       0                       0                
  6   769   # hex.ele[3].vol2.dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # hex.ele[3].vol2.dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # hex.ele[3].vol2.dynBal.nPorts
  0       1                       0                       0                
  6  1281   # hex.ele[3].vol2.dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # hex.ele[3].vol2.dynBal.use_C_flow
  0 9.9975326918332097E-001       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].vol2.dynBal.mOut
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hex.ele[3].vol2.dynBal.ports[1].p
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hex.ele[3].vol2.dynBal.ports[2].p
  0 1.0130000000000000E+005       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].vol2.dynBal.medium.p
  0 1.1997039230199851E+000       0                  100000                
  6  1280   # hex.ele[3].vol2.dynBal.medium.d
  0     300                       1                   10000                
  6  1280   # hex.ele[3].vol2.dynBal.medium.T
  0       0                       0                       1                
  6  1280   # hex.ele[3].vol2.dynBal.medium.X[2]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # hex.ele[3].vol2.dynBal.medium.u
  0    1000                       0                 1.0000000000000000E+007
  6  1280   # hex.ele[3].vol2.dynBal.medium.R
  0 3.2000000000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6  1280   # hex.ele[3].vol2.dynBal.medium.MM
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[3].vol2.dynBal.medium.state.p
  0       0                       0                       0                
  6  1281   # hex.ele[3].vol2.dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # hex.ele[3].vol2.dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # hex.ele[3].vol2.dynBal.medium.T_degC
  0 1.0130000000000001E+000       0                       0                
  6  1280   # hex.ele[3].vol2.dynBal.medium.p_bar
  0 1.8015280000000002E-002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].vol2.dynBal.medium.MMX[1]
  0 2.8965115900000001E-002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].vol2.dynBal.medium.MMX[2]
  0       0                       0                       1                
  6  1280   # hex.ele[3].vol2.dynBal.medium.X_air
  0      20                       0                       0                
  6  1280   # hex.ele[3].vol2.dynBal.medium.dT
 -1       0                       0                       0                
  2  1296   # hex.ele[3].vol2.dynBal.U
  0       0                       0                       0                
  3  1280   # hex.ele[3].vol2.dynBal.der(U)
  0 9.9975326918332097E-001       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].vol2.dynBal.m
  0       0                       0                       0                
  6  1280   # hex.ele[3].vol2.dynBal.der(m)
 -1       0                       0                 1.0000000000000000E+100
  2  1296   # hex.ele[3].vol2.dynBal.mXi[1]
  0       0                       0                       0                
  3  1280   # hex.ele[3].vol2.dynBal.der(mXi[1])
  0       0                       0                       0                
  6  1280   # hex.ele[3].vol2.dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # hex.ele[3].vol2.dynBal.mbXi_flow[1]
  0       0                       0                       0                
  6  1280   # hex.ele[3].vol2.dynBal.Hb_flow
  0 8.3333333333333337E-001       0                       0                
  6  1280   # hex.ele[3].vol2.dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # hex.ele[3].vol2.dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # hex.ele[3].vol2.dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # hex.ele[3].vol2.dynBal.ports_H_flow[2]
  0       0                       0                       0                
  6  1280   # hex.ele[3].vol2.dynBal.ports_mXi_flow[1, 1]
  0       0                       0                       0                
  6  1280   # hex.ele[3].vol2.dynBal.ports_mXi_flow[2, 1]
  0 1.0145400000000000E+003       0                       0                
  6  1280   # hex.ele[3].vol2.dynBal.cp_default
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].vol2.dynBal.rho_start
  0       0                       0                       0                
  6  1281   # hex.ele[3].vol2.dynBal.computeCSen
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[3].vol2.dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[3].vol2.dynBal.state_default.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # hex.ele[3].vol2.dynBal.state_default.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # hex.ele[3].vol2.dynBal.state_default.X[2]
  0 1.2000000000000000E+000       0                 1.0000000000000000E+100
  6  1280   # hex.ele[3].vol2.dynBal.rho_default
  0       1                       0                       0                
  6  1280   # hex.ele[3].vol2.dynBal.s[1]
  0       0                       0                       0                
  6  1280   # hex.ele[3].vol2.dynBal.hStart
  0       1                       0                       0                
  6  1281   # hex.ele[3].vol2.dynBal._simplify_mWat_flow
  0       1                       1                       4                
  6  1282   # hex.ele[4].vol1.dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[4].vol1.dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[4].vol1.dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[4].vol1.dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[4].vol1.dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[4].vol1.dynBal.T_start
  0       0                       0                       1                
  6  1280   # hex.ele[4].vol1.dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # hex.ele[4].vol1.dynBal.mSenFac
  0       0                       0                       0                
  6   769   # hex.ele[4].vol1.dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # hex.ele[4].vol1.dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # hex.ele[4].vol1.dynBal.nPorts
  0       0                       0                       0                
  6  1281   # hex.ele[4].vol1.dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # hex.ele[4].vol1.dynBal.use_C_flow
  0 2.5000000000000000E-001       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].vol1.dynBal.mOut
  0     300                       1                   10000                
  6  1280   # hex.ele[4].vol1.dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].vol1.dynBal.medium.d
  0       1                       0                       1                
  6  1280   # hex.ele[4].vol1.dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # hex.ele[4].vol1.dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].vol1.dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # hex.ele[4].vol1.dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # hex.ele[4].vol1.dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # hex.ele[4].vol1.dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # hex.ele[4].vol1.dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # hex.ele[4].vol1.dynBal.U
  0       0                       0                       0                
  3  1280   # hex.ele[4].vol1.dynBal.der(U)
  0 2.5000000000000000E-001       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].vol1.dynBal.m
  0       0                       0                       0                
  6  1280   # hex.ele[4].vol1.dynBal.der(m)
  0       0                       0                       0                
  6  1280   # hex.ele[4].vol1.dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # hex.ele[4].vol1.dynBal.Hb_flow
  0 2.5110839244424891E-004       0                       0                
  6  1280   # hex.ele[4].vol1.dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # hex.ele[4].vol1.dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # hex.ele[4].vol1.dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # hex.ele[4].vol1.dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # hex.ele[4].vol1.dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].vol1.dynBal.rho_start
  0       0                       0                       0                
  6  1281   # hex.ele[4].vol1.dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[4].vol1.dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[4].vol1.dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].vol1.dynBal.rho_default
  0       0                       0                       0                
  6  1280   # hex.ele[4].vol1.dynBal.hStart
  0       0                       0                       0                
  6  1281   # hex.ele[4].vol1.dynBal._simplify_mWat_flow
  0       0                       0                       0                
  6  1280   # hex.ele[4].vol1.dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # hex.ele[4].vol2.dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[4].vol2.dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[4].vol2.dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # hex.ele[4].vol2.dynBal.traceDynamics
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[4].vol2.dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[4].vol2.dynBal.T_start
  0       0                       0                       1                
  6  1280   # hex.ele[4].vol2.dynBal.X_start[1]
  0       0                       0                       1                
  6  1280   # hex.ele[4].vol2.dynBal.X_start[2]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # hex.ele[4].vol2.dynBal.mSenFac
  0       0                       0                       0                
  6   769   # hex.ele[4].vol2.dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # hex.ele[4].vol2.dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # hex.ele[4].vol2.dynBal.nPorts
  0       1                       0                       0                
  6  1281   # hex.ele[4].vol2.dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # hex.ele[4].vol2.dynBal.use_C_flow
  0 9.9975326918332097E-001       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].vol2.dynBal.mOut
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hex.ele[4].vol2.dynBal.ports[1].p
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1284   # hex.ele[4].vol2.dynBal.ports[2].p
  0 1.0130000000000000E+005       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].vol2.dynBal.medium.p
  0 1.1997039230199851E+000       0                  100000                
  6  1280   # hex.ele[4].vol2.dynBal.medium.d
  0     300                       1                   10000                
  6  1280   # hex.ele[4].vol2.dynBal.medium.T
  0       0                       0                       1                
  6  1280   # hex.ele[4].vol2.dynBal.medium.X[2]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # hex.ele[4].vol2.dynBal.medium.u
  0    1000                       0                 1.0000000000000000E+007
  6  1280   # hex.ele[4].vol2.dynBal.medium.R
  0 3.2000000000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6  1280   # hex.ele[4].vol2.dynBal.medium.MM
  0 1.0130000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[4].vol2.dynBal.medium.state.p
  0       0                       0                       0                
  6  1281   # hex.ele[4].vol2.dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # hex.ele[4].vol2.dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # hex.ele[4].vol2.dynBal.medium.T_degC
  0 1.0130000000000001E+000       0                       0                
  6  1280   # hex.ele[4].vol2.dynBal.medium.p_bar
  0 1.8015280000000002E-002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].vol2.dynBal.medium.MMX[1]
  0 2.8965115900000001E-002       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].vol2.dynBal.medium.MMX[2]
  0       0                       0                       1                
  6  1280   # hex.ele[4].vol2.dynBal.medium.X_air
  0      20                       0                       0                
  6  1280   # hex.ele[4].vol2.dynBal.medium.dT
 -1       0                       0                       0                
  2  1296   # hex.ele[4].vol2.dynBal.U
  0       0                       0                       0                
  3  1280   # hex.ele[4].vol2.dynBal.der(U)
  0 9.9975326918332097E-001       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].vol2.dynBal.m
  0       0                       0                       0                
  6  1280   # hex.ele[4].vol2.dynBal.der(m)
 -1       0                       0                 1.0000000000000000E+100
  2  1296   # hex.ele[4].vol2.dynBal.mXi[1]
  0       0                       0                       0                
  3  1280   # hex.ele[4].vol2.dynBal.der(mXi[1])
  0       0                       0                       0                
  6  1280   # hex.ele[4].vol2.dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # hex.ele[4].vol2.dynBal.mbXi_flow[1]
  0       0                       0                       0                
  6  1280   # hex.ele[4].vol2.dynBal.Hb_flow
  0 8.3333333333333337E-001       0                       0                
  6  1280   # hex.ele[4].vol2.dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # hex.ele[4].vol2.dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # hex.ele[4].vol2.dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # hex.ele[4].vol2.dynBal.ports_H_flow[2]
  0       0                       0                       0                
  6  1280   # hex.ele[4].vol2.dynBal.ports_mXi_flow[1, 1]
  0       0                       0                       0                
  6  1280   # hex.ele[4].vol2.dynBal.ports_mXi_flow[2, 1]
  0 1.0145400000000000E+003       0                       0                
  6  1280   # hex.ele[4].vol2.dynBal.cp_default
  0       0                       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].vol2.dynBal.rho_start
  0       0                       0                       0                
  6  1281   # hex.ele[4].vol2.dynBal.computeCSen
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # hex.ele[4].vol2.dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # hex.ele[4].vol2.dynBal.state_default.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # hex.ele[4].vol2.dynBal.state_default.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # hex.ele[4].vol2.dynBal.state_default.X[2]
  0 1.2000000000000000E+000       0                 1.0000000000000000E+100
  6  1280   # hex.ele[4].vol2.dynBal.rho_default
  0       1                       0                       0                
  6  1280   # hex.ele[4].vol2.dynBal.s[1]
  0       0                       0                       0                
  6  1280   # hex.ele[4].vol2.dynBal.hStart
  0       1                       0                       0                
  6  1281   # hex.ele[4].vol2.dynBal._simplify_mWat_flow
  0       1                       1                       4                
  6   258   # val.vol.energyDynamics
  0       1                       1                       4                
  6   258   # val.vol.massDynamics
  0       1                       1                       4                
  6   258   # val.vol.substanceDynamics
  0       1                       1                       4                
  6   258   # val.vol.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   256   # val.vol.p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # val.vol.T_start
  0       0                       0                       1                
  6   256   # val.vol.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # val.vol.mSenFac
  0       0                       0                       0                
  6   769   # val.vol.initialize_p
  0       0                       0                       0                
  6   257   # val.vol.prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # val.vol.simplify_mWat_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6   256   # val.vol.m_flow_nominal
  0       3                       0                       0                
  6   258   # val.vol.nPorts
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # val.vol.m_flow_small
  0       1                       0                       0                
  6   257   # val.vol.allowFlowReversal
  0 1.0044335697769957E-003       0                       0                
  6   256   # val.vol.V
  0     300                       1                   10000                
  6   256   # val.vol.T
  0       1                       0                       0                
  6   256   # val.vol.m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # val.vol.rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # val.vol.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # val.vol.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # val.vol.rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # val.vol.state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # val.vol.state_start.T
  0       0                       0                       0                
  6  1281   # val.vol.useSteadyStateTwoPort
  0       0                       0                       0                
  6  1412   # val.vol.preTem.port.Q_flow
  0       0                       0                       0                
  6  1280   # val.vol.heaFloSen.Q_flow
  0       0                       0                       0                
  6  1412   # val.vol.heaFloSen.port_a.Q_flow
  0       0                       0                       0                
  6  1412   # val.vol.heaFloSen.port_b.Q_flow
  0       0                       0                       0                
  6   257   # val.vol.use_C_flow
  0       0                       0                       0                
  6   388   # val.vol.heatPort.Q_flow
  0      10                       0                       0                
  6   256   # val.vol.tau
  0 1.0044335697769957E-003       0                       0                
  6  1280   # val.vol.V_nominal
  0       1                       1                       4                
  6  1282   # CurculationPump.vol.dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # CurculationPump.vol.dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # CurculationPump.vol.dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # CurculationPump.vol.dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # CurculationPump.vol.dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # CurculationPump.vol.dynBal.T_start
  0       0                       0                       1                
  6  1280   # CurculationPump.vol.dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # CurculationPump.vol.dynBal.mSenFac
  0       0                       0                       0                
  6   769   # CurculationPump.vol.dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # CurculationPump.vol.dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # CurculationPump.vol.dynBal.nPorts
  0       0                       0                       0                
  6  1281   # CurculationPump.vol.dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # CurculationPump.vol.dynBal.use_C_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.vol.dynBal.mOut
  0     300                       1                   10000                
  6  1280   # CurculationPump.vol.dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.vol.dynBal.medium.d
  0       1                       0                       1                
  6  1280   # CurculationPump.vol.dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # CurculationPump.vol.dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.vol.dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # CurculationPump.vol.dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # CurculationPump.vol.dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # CurculationPump.vol.dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # CurculationPump.vol.dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # CurculationPump.vol.dynBal.U
  0       0                       0                       0                
  3  1280   # CurculationPump.vol.dynBal.der(U)
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.vol.dynBal.m
  0       0                       0                       0                
  6  1280   # CurculationPump.vol.dynBal.der(m)
  0       0                       0                       0                
  6  1280   # CurculationPump.vol.dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # CurculationPump.vol.dynBal.Hb_flow
  0 1.0044335697769957E-004       0                       0                
  6  1280   # CurculationPump.vol.dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # CurculationPump.vol.dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # CurculationPump.vol.dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # CurculationPump.vol.dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # CurculationPump.vol.dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.vol.dynBal.rho_start
  0       0                       0                       0                
  6  1281   # CurculationPump.vol.dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # CurculationPump.vol.dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # CurculationPump.vol.dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # CurculationPump.vol.dynBal.rho_default
  0       0                       0                       0                
  6  1280   # CurculationPump.vol.dynBal.hStart
  0       0                       0                       0                
  6  1281   # CurculationPump.vol.dynBal._simplify_mWat_flow
  0       0                       0                       0                
  6  1280   # CurculationPump.vol.dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # val.vol.dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # val.vol.dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # val.vol.dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # val.vol.dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # val.vol.dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # val.vol.dynBal.T_start
  0       0                       0                       1                
  6  1280   # val.vol.dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # val.vol.dynBal.mSenFac
  0       0                       0                       0                
  6   769   # val.vol.dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # val.vol.dynBal.simplify_mWat_flow
  0       3                       0                       0                
  6  1282   # val.vol.dynBal.nPorts
  0       0                       0                       0                
  6  1281   # val.vol.dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # val.vol.dynBal.use_C_flow
  0       0                       0                       0                
  6  1280   # val.vol.dynBal.Q_flow
  0       1                       0                 1.0000000000000000E+100
  6  1280   # val.vol.dynBal.mOut
  0     300                       1                   10000                
  6  1280   # val.vol.dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # val.vol.dynBal.medium.d
  0       1                       0                       1                
  6  1280   # val.vol.dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # val.vol.dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # val.vol.dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # val.vol.dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # val.vol.dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # val.vol.dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # val.vol.dynBal.medium.p_bar
 -1   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  2  1304   # val.vol.dynBal.U
  0       0                       0                       0                
  3  1280   # val.vol.dynBal.der(U)
  0       1                       0                 1.0000000000000000E+100
  6  1280   # val.vol.dynBal.m
  0       0                       0                       0                
  6  1280   # val.vol.dynBal.der(m)
  0       0                       0                       0                
  6  1280   # val.vol.dynBal.mb_flow
  0 1.0044335697769957E-003       0                       0                
  6  1280   # val.vol.dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # val.vol.dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # val.vol.dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # val.vol.dynBal.ports_H_flow[2]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # val.vol.dynBal.ports_H_flow[3]
  0    4184                       0                       0                
  6  1280   # val.vol.dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # val.vol.dynBal.rho_start
  0       0                       0                       0                
  6  1281   # val.vol.dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # val.vol.dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # val.vol.dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # val.vol.dynBal.rho_default
  0       0                       0                       0                
  6  1280   # val.vol.dynBal.hStart
  0       0                       0                       0                
  6  1281   # val.vol.dynBal._simplify_mWat_flow
  0       0                       0                       0                
  6  1280   # val.vol.dynBal.mWat_flow_internal


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable and flags according to dsBaseType
#  <value>&3= 0: real.
#  <value>&3= 1: boolean.
#  <value>&3= 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, no special action takes place (default setting).
#
# - If there are only FIXED and FREE variables and the number of
#   FREE parameters, states and inputs is IDENTICAL to the number of
#   FIXED state derivatives, outputs and auxiliary variables, a non-linear
#   equation is solved to determine a consistent set of initial conditions.
#
# - In all other cases the following optimization problem is solved:
#      min( sum( weight(i)*( (value(i) - DESIRED(i))/scale(i) )^2 ) )
#   under the constraint that the differential equation is fulfilled
#   at the initial time. In most cases weight(i)=1 is sufficient, due
#   to the automatic scaling (if DESIRED(i) is not close to zero,
#   scale(i) = DESIRED(i). Otherwise, the scaling is based on the
#   nominal value (and maybe minimum and maximum values given in 
#   column 3 and 4). If these values are zero, scale(i)=1 is used).
#
char initialDescription(2144,215)
Default ambient pressure [Pa|bar]
Default ambient temperature [K|degC]
Constant gravity acceleration [m/s2]
= false to restrict to design flow direction (port_a -> port_b) [:#(type=Boolean)]
Default formulation of energy balances [:#(type=Modelica.Fluid.Types.Dynamics)]
Default formulation of mass balances [:#(type=Modelica.Fluid.Types.Dynamics)]
Default formulation of substance balances [:#(type=Modelica.Fluid.Types.Dynamics)]
Default formulation of trace substance balances [:#(type=Modelica.Fluid.Types.Dynamics)]
Default formulation of momentum balances, if options available [:#(type=Modelica.Fluid.Types.Dynamics)]
Default start value for mass flow rates [kg/s]
Default start value for pressures [Pa|bar]
Default start value for temperatures [K|degC]
= true to determine turbulent region automatically using Reynolds number [:#(type=Boolean)]
Default nominal mass flow rate [kg/s]
Regularization of zero flow for |m_flow| < eps_m_flow*m_flow_nominal
Default small pressure drop for regularization of laminar and zero flow [Pa|bar]
Default small mass flow rate for regularization of laminar and zero flow [kg/s]
Number of ports [:#(type=Integer)]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Molar masses of components [kg/mol]
Molar masses of components [kg/mol]
Mass fraction of air [kg/kg]
Temperature difference used to compute enthalpy [K,]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Allowed flow direction [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Get the mass flow rate from the input connector [:#(type=Boolean)]
Get the temperature from the input connector [:#(type=Boolean)]
Get the composition from the input connector [:#(type=Boolean)]
Get the trace substances from the input connector [:#(type=Boolean)]
Fixed mass flow rate going out of the fluid port [kg/s]
Fixed value of temperature [K|degC]
Fixed value of composition [kg/kg]
Fixed value of composition [kg/kg]
Needed to connect to conditional connector
Needed to connect to conditional connector
Needed to connect to conditional connector
Number of ports [:#(type=Integer)]
Absolute pressure of medium [Pa|bar]
Structurally independent mass fractions [1]
Specific enthalpy of medium [J/kg]
Density of medium [kg/m3|g/cm3]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Molar masses of components [kg/mol]
Molar masses of components [kg/mol]
Mass fraction of steam water [kg/kg]
Mass fraction of air [kg/kg]
Temperature difference used to compute enthalpy [K,]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Allowed flow direction [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Get the pressure from the input connector [:#(type=Boolean)]
Get the temperature from the input connector [:#(type=Boolean)]
Get the composition from the input connector [:#(type=Boolean)]
Get the trace substances from the input connector [:#(type=Boolean)]
Fixed value of pressure [Pa|Pa]
Fixed value of temperature [K|degC]
Fixed value of composition [kg/kg]
Fixed value of composition [kg/kg]
Needed to connect to conditional connector
Needed to connect to conditional connector
Needed to connect to conditional connector
Needed to connect to conditional connector
[degC]
Connector of Real input signal 1
Constant output value
Constant output value
Number of outputs [:#(type=Integer)]
Connector of Real output signals
= true, if table is defined on file or in function usertab [:#(type=Boolean)]
= true, if info message that file is loading is to be printed [:#(type=Boolean)]
Columns of table to be interpolated [:#(type=Integer)]
Smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
Extrapolation of data outside the definition range [:#(type=Modelica.Blocks.Types.Extrapolation)]
Offsets of output signals
Output = offset for time < startTime [s]
Time scale of first table column [s]
Minimum abscissa value defined in table [s]
Maximum abscissa value defined in table [s]
Minimum (scaled) abscissa value defined in table
Maximum (scaled) abscissa value defined in table
Offsets of output signals
[:#(type=Integer)]
Next time event instant [s]
Next scaled time event instant
= 1, if table was successfully read from file

Scaled time
Number of outputs [:#(type=Integer)]
Connector of Real output signals
Connector of Real output signals
= true, if table is defined on file or in function usertab [:#(type=Boolean)]
= true, if info message that file is loading is to be printed [:#(type=Boolean)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
Extrapolation of data outside the definition range [:#(type=Modelica.Blocks.Types.Extrapolation)]
Offsets of output signals
Output = offset for time < startTime [s]
Time scale of first table column [s]
Minimum abscissa value defined in table [s]
Maximum abscissa value defined in table [s]
Minimum (scaled) abscissa value defined in table
Maximum (scaled) abscissa value defined in table
Offsets of output signals
Offsets of output signals
[:#(type=Integer)]
Next time event instant [s]
Next scaled time event instant
= 1, if table was successfully read from file

Scaled time
Number of outputs [:#(type=Integer)]
Connector of Real output signals
= true, if table is defined on file or in function usertab [:#(type=Boolean)]
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
= true, if info message that file is loading is to be printed [:#(type=Boolean)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
Extrapolation of data outside the definition range [:#(type=Modelica.Blocks.Types.Extrapolation)]
Offsets of output signals
Output = offset for time < startTime [s]
Time scale of first table column [s]
Minimum abscissa value defined in table [s]
Maximum abscissa value defined in table [s]
Minimum (scaled) abscissa value defined in table
Maximum (scaled) abscissa value defined in table
Offsets of output signals
Offsets of output signals
[:#(type=Integer)]
Next time event instant [s]
Next scaled time event instant
= 1, if table was successfully read from file

Scaled time
Number of outputs [:#(type=Integer)]
Connector of Real output signals
= true, if table is defined on file or in function usertab [:#(type=Boolean)]
= true, if info message that file is loading is to be printed [:#(type=Boolean)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
Extrapolation of data outside the definition range [:#(type=Modelica.Blocks.Types.Extrapolation)]
Offsets of output signals
Output = offset for time < startTime [s]
Time scale of first table column [s]
Minimum abscissa value defined in table [s]
Maximum abscissa value defined in table [s]
Minimum (scaled) abscissa value defined in table
Maximum (scaled) abscissa value defined in table
Offsets of output signals
Offsets of output signals
[:#(type=Integer)]
Next time event instant [s]
Next scaled time event instant
= 1, if table was successfully read from file

Scaled time
[K]
Get the pressure from the input connector [:#(type=Boolean)]
Fixed value of pressure [Pa|bar]
Relative humidity (0...1)
Steam mass fraction
Steam mass fraction
Saturation pressure [Pa|bar]
[:#(type=Integer)]
Index for non-water substance [:#(type=Integer)]
Flag, used for error checking [:#(type=Boolean)]
Get the pressure from the input connector [:#(type=Boolean)]
Fixed value of pressure [Pa|bar]
Temperature [K|degC]
Relative humidity (0...1)
Steam mass fraction
Steam mass fraction
Saturation pressure [Pa|bar]
[:#(type=Integer)]
Index for non-water substance [:#(type=Integer)]
Flag, used for error checking [:#(type=Boolean)]
Water vapor concentration in [kg/kg dry air] []
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Temperature of the medium [K|degC]
Mass fraction of the medium [kg/kg]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
[degC]
Gain value multiplied with input signal [1]
Default pressure [Pa|bar]
cost in ct/kWh
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Temperature in port medium [K|degC]
Water return temperature in Celsius
= false to simplify equations, assuming, but not enforcing, no flow reversal for medium 1 [:#(type=Boolean)]
= false to simplify equations, assuming, but not enforcing, no flow reversal for medium 2 [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Nominal mass flow rate [kg/s]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a1 and port_b1 [Pa|Pa]
Pressure difference between port_a2 and port_b2 [Pa|Pa]
Temperature of medium [K|degC]
Temperature of medium [K|degC]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
=true, compute flow resistance. Set to false to assume no friction [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure difference [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Fraction of nominal flow rate where flow transitions to laminar
=true, compute flow resistance. Set to false to assume no friction [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure difference [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Fraction of nominal flow rate where flow transitions to laminar
Thermal conductance at nominal flow, used to compute heat capacity [W/K]
Ratio between air-side and water-side convective heat transfer coefficient
Number of pipe segments used for discretization [:#(type=Integer)]
Formulation of energy balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Time constant at nominal flow for medium 1 [s]
Time constant at nominal flow for medium 2 [s]
Time constant of metal at nominal UA value [s]
Set to false to make water-side hA independent of mass flow rate [:#(type=Boolean)]
Set to false to make air-side hA independent of mass flow rate [:#(type=Boolean)]
Set to false to make water-side hA independent of temperature [:#(type=Boolean)]
Set to false to make air-side hA independent of temperature [:#(type=Boolean)]
Thermal conductance to approximate diffusion (which improves model at near-zero flow rates [W/K]
Heat transferred from solid into medium 1 [W]
Heat transferred from solid into medium 2 [W]
Water temperature [K|degC]
Water temperature [K|degC]
Water temperature [K|degC]
Water temperature [K|degC]
Air temperature [K|degC]
Air temperature [K|degC]
Air temperature [K|degC]
Air temperature [K|degC]
Thermal conductance at nominal flow [W/K]
Water mass flow rate [kg/s]
Air mass flow rate [kg/s]
Temperature medium 1 [K]
Temperature medium 2 [K]
Convective heat transfer medium 1 [W/K]
Convective heat transfer medium 2 [W/K]
Ratio between air-side and water-side convective heat transfer coefficient
Water side convective heat transfer coefficient [W/K]
Air side convective heat transfer coefficient, including fin resistance [W/K]
Water-side exponent for convective heat transfer coefficient, h~m_flow^n
Air-side exponent for convective heat transfer coefficient, h~m_flow^n
Water temperature [K|degC]
Air temperature [K|degC]
Set to false to make water-side hA independent of mass flow rate [:#(type=Boolean)]
Set to false to make air-side hA independent of mass flow rate [:#(type=Boolean)]
Set to false to make water-side hA independent of temperature [:#(type=Boolean)]
Set to false to make air-side hA independent of temperature [:#(type=Boolean)]
Factor for air side temperature dependent variation of heat transfer coefficient
Factor for water side temperature dependent variation of heat transfer coefficient
Coefficient for temperature dependence of water side heat transfer coefficient
Fraction of actual to nominal mass flow rate
Fraction of actual to nominal mass flow rate
Flag, set to true if the temperature sensor 1 is used [:#(type=Boolean)]
Flag, set to true if the temperature sensor 2 is used [:#(type=Boolean)]
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate, used for regularization near zero flow [kg/s]
For bi-directional flow, temperature is regularized in the region |m_flow| < m_flow_small (m_flow_small > 0 required) [kg/s]
Default value for mass fractions of medium (for initialization) [kg/kg]
Time constant at nominal flow rate (use tau=0 for steady-state sensor, but see user guide for potential problems) [s]
Type of initialization (InitialState and InitialOutput are identical) [:#(type=Modelica.Blocks.Types.Init)]
Gain to take flow rate into account for sensor time constant
Flag, true if the sensor is a dynamic sensor [:#(type=Boolean)]
Normalized mass flow rate
Inverse of tau [s-1]
Temperature of the passing fluid [K|degC]
Initial or guess value of output (= state) [K|degC]
if true, temperature T converges towards TAmb when no flow [:#(type=Boolean)]
Fixed ambient temperature for heat transfer [K|degC]
Time constant for heat transfer, default 20 minutes [s]
Dummy parameter to avoid division by tauHeaTra [1/s]
Ratio of tau
Temperature of inflowing fluid at port_a [K|degC]
Temperature of inflowing fluid at port_b, or T_a_inflow if uni-directional flow [K|degC]
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate, used for regularization near zero flow [kg/s]
For bi-directional flow, temperature is regularized in the region |m_flow| < m_flow_small (m_flow_small > 0 required) [kg/s]
Default value for mass fractions of medium (for initialization) [kg/kg]
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate, used for regularization near zero flow [kg/s]
For bi-directional flow, temperature is regularized in the region |m_flow| < m_flow_small (m_flow_small > 0 required) [kg/s]
Default value for mass fractions of medium (for initialization) [kg/kg]
Default value for mass fractions of medium (for initialization) [kg/kg]
Time constant at nominal flow rate (use tau=0 for steady-state sensor, but see user guide for potential problems) [s]
Type of initialization (InitialState and InitialOutput are identical) [:#(type=Modelica.Blocks.Types.Init)]
Gain to take flow rate into account for sensor time constant
Flag, true if the sensor is a dynamic sensor [:#(type=Boolean)]
Normalized mass flow rate
Inverse of tau [s-1]
Temperature of the passing fluid [K|degC]
Initial or guess value of output (= state) [K|degC]
if true, temperature T converges towards TAmb when no flow [:#(type=Boolean)]
Fixed ambient temperature for heat transfer [K|degC]
Time constant for heat transfer, default 20 minutes [s]
Dummy parameter to avoid division by tauHeaTra [1/s]
Ratio of tau
Temperature of inflowing fluid at port_a [K|degC]
Temperature of inflowing fluid at port_b, or T_a_inflow if uni-directional flow [K|degC]
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate, used for regularization near zero flow [kg/s]
For bi-directional flow, temperature is regularized in the region |m_flow| < m_flow_small (m_flow_small > 0 required) [kg/s]
Default value for mass fractions of medium (for initialization) [kg/kg]
Default value for mass fractions of medium (for initialization) [kg/kg]
Gain value multiplied with input signal [1]
Output signal connector
Gain value multiplied with input signal [1]
Output signal connector
= false to simplify equations, assuming, but not enforcing, no flow reversal for medium 1 [:#(type=Boolean)]
= false to simplify equations, assuming, but not enforcing, no flow reversal for medium 2 [:#(type=Boolean)]
Thermodynamic pressure in the connection point [Pa|bar]
Thermodynamic pressure in the connection point [Pa|bar]
Nominal mass flow rate [kg/s]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a1 and port_b1 [Pa|Pa]
Pressure difference between port_a2 and port_b2 [Pa|Pa]
Temperature of medium [K|degC]
Temperature of medium [K|degC]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
=true, compute flow resistance. Set to false to assume no friction [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure difference [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Fraction of nominal flow rate where flow transitions to laminar
=true, compute flow resistance. Set to false to assume no friction [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure difference [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Fraction of nominal flow rate where flow transitions to laminar
Time constant at nominal flow [s]
Time constant at nominal flow [s]
= true, use homotopy method [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of mass fractions m_i/m [kg/kg]
Heat flow rate into medium 1 [W]
Heat flow rate into medium 2 [W]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= false to simplify equations, assuming, but not enforcing, no flow reversal. Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= false to simplify equations, assuming, but not enforcing, no flow reversal. Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Thermodynamic pressure in the connection point [Pa|bar]
Thermodynamic pressure in the connection point [Pa|bar]
Pressure of the fluid [Pa|bar]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Water flow rate added into the medium [kg/s]
Vector with zero everywhere except where species is
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Fraction of nominal mass flow rate where transition to turbulent occurs
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
Precomputed coefficient to avoid division by parameter
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Thermodynamic pressure in the connection point [Pa|bar]
Thermodynamic pressure in the connection point [Pa|bar]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Fraction of nominal mass flow rate where transition to turbulent occurs
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
Precomputed coefficient to avoid division by parameter
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid volume [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid volume [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Start value for outflowing enthalpy [J/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Start value for outflowing enthalpy [J/kg]
Set to true to initialize the pressure of volume 1 [:#(type=Boolean)]
Set to true to initialize the pressure of volume 2 [:#(type=Boolean)]
Thermal conductance at nominal flow, used to compute time constant [W/K]
Time constant of metal at nominal UA value [s]
Heat capacity of metal (= cp*m) [J/K]
Heat capacity of element (= cp*m) [J/K]
Temperature of element [K|degC]
der(Temperature of element) [K/s]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate from solid -> fluid [W]
= solid.T - fluid.T [K,]
Heat flow rate from solid -> fluid [W]
= solid.T - fluid.T [K,]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Lewis number (around 1 for water vapor in air)
Exponent in bondary layer ratio, delta/delta_t = Pr^n
Get the pressure from the input connector [:#(type=Boolean)]
Fixed value of pressure [Pa|bar]
Species concentration at dry bulb temperature
Water vapor pressure [Pa|Pa]
Water mass fraction per mass of dry air [1]
Gain value multiplied with input signal [1]
Output signal connector
Connector of Real input signal 1
Connector of Real input signal 2
Constant output value
Gain of upper input
Gain of lower input
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid volume [J/(kg.K)]
[J/(kg.K)]
Heat flow rate (positive if flowing from outside into the component) [W]

Connector of Real input signal 1
Value of Real output
Gain value multiplied with input signal [1]
= false to simplify equations, assuming, but not enforcing, no flow reversal for medium 1 [:#(type=Boolean)]
= false to simplify equations, assuming, but not enforcing, no flow reversal for medium 2 [:#(type=Boolean)]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Thermodynamic pressure in the connection point [Pa|bar]
Nominal mass flow rate [kg/s]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a1 and port_b1 [Pa|Pa]
Pressure difference between port_a2 and port_b2 [Pa|Pa]
Temperature of medium [K|degC]
Temperature of medium [K|degC]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
=true, compute flow resistance. Set to false to assume no friction [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure difference [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Fraction of nominal flow rate where flow transitions to laminar
=true, compute flow resistance. Set to false to assume no friction [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure difference [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Fraction of nominal flow rate where flow transitions to laminar
Time constant at nominal flow [s]
Time constant at nominal flow [s]
= true, use homotopy method [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of mass fractions m_i/m [kg/kg]
Heat flow rate into medium 1 [W]
Heat flow rate into medium 2 [W]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= false to simplify equations, assuming, but not enforcing, no flow reversal. Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= false to simplify equations, assuming, but not enforcing, no flow reversal. Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Thermodynamic pressure in the connection point [Pa|bar]
Thermodynamic pressure in the connection point [Pa|bar]
Pressure of the fluid [Pa|bar]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Water flow rate added into the medium [kg/s]
Vector with zero everywhere except where species is
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Fraction of nominal mass flow rate where transition to turbulent occurs
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
Precomputed coefficient to avoid division by parameter
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Thermodynamic pressure in the connection point [Pa|bar]
Thermodynamic pressure in the connection point [Pa|bar]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Fraction of nominal mass flow rate where transition to turbulent occurs
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
Precomputed coefficient to avoid division by parameter
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid volume [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid volume [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Start value for outflowing enthalpy [J/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Start value for outflowing enthalpy [J/kg]
Set to true to initialize the pressure of volume 1 [:#(type=Boolean)]
Set to true to initialize the pressure of volume 2 [:#(type=Boolean)]
Thermal conductance at nominal flow, used to compute time constant [W/K]
Time constant of metal at nominal UA value [s]
Heat capacity of metal (= cp*m) [J/K]
Heat capacity of element (= cp*m) [J/K]
Temperature of element [K|degC]
der(Temperature of element) [K/s]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate from solid -> fluid [W]
= solid.T - fluid.T [K,]
Heat flow rate from solid -> fluid [W]
= solid.T - fluid.T [K,]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Lewis number (around 1 for water vapor in air)
Exponent in bondary layer ratio, delta/delta_t = Pr^n
Get the pressure from the input connector [:#(type=Boolean)]
Fixed value of pressure [Pa|bar]
Species concentration at dry bulb temperature
Water vapor pressure [Pa|Pa]
Water mass fraction per mass of dry air [1]
Gain value multiplied with input signal [1]
Output signal connector
Connector of Real input signal 1
Connector of Real input signal 2
Constant output value
Gain of upper input
Gain of lower input
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid volume [J/(kg.K)]
[J/(kg.K)]
Heat flow rate (positive if flowing from outside into the component) [W]

Connector of Real input signal 1
Value of Real output
Gain value multiplied with input signal [1]
= false to simplify equations, assuming, but not enforcing, no flow reversal for medium 1 [:#(type=Boolean)]
= false to simplify equations, assuming, but not enforcing, no flow reversal for medium 2 [:#(type=Boolean)]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Thermodynamic pressure in the connection point [Pa|bar]
Nominal mass flow rate [kg/s]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a1 and port_b1 [Pa|Pa]
Pressure difference between port_a2 and port_b2 [Pa|Pa]
Temperature of medium [K|degC]
Temperature of medium [K|degC]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
=true, compute flow resistance. Set to false to assume no friction [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure difference [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Fraction of nominal flow rate where flow transitions to laminar
=true, compute flow resistance. Set to false to assume no friction [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure difference [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Fraction of nominal flow rate where flow transitions to laminar
Time constant at nominal flow [s]
Time constant at nominal flow [s]
= true, use homotopy method [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of mass fractions m_i/m [kg/kg]
Heat flow rate into medium 1 [W]
Heat flow rate into medium 2 [W]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= false to simplify equations, assuming, but not enforcing, no flow reversal. Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= false to simplify equations, assuming, but not enforcing, no flow reversal. Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Thermodynamic pressure in the connection point [Pa|bar]
Thermodynamic pressure in the connection point [Pa|bar]
Pressure of the fluid [Pa|bar]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Water flow rate added into the medium [kg/s]
Vector with zero everywhere except where species is
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Fraction of nominal mass flow rate where transition to turbulent occurs
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
Precomputed coefficient to avoid division by parameter
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Thermodynamic pressure in the connection point [Pa|bar]
Thermodynamic pressure in the connection point [Pa|bar]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Fraction of nominal mass flow rate where transition to turbulent occurs
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
Precomputed coefficient to avoid division by parameter
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid volume [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid volume [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Start value for outflowing enthalpy [J/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Start value for outflowing enthalpy [J/kg]
Set to true to initialize the pressure of volume 1 [:#(type=Boolean)]
Set to true to initialize the pressure of volume 2 [:#(type=Boolean)]
Thermal conductance at nominal flow, used to compute time constant [W/K]
Time constant of metal at nominal UA value [s]
Heat capacity of metal (= cp*m) [J/K]
Heat capacity of element (= cp*m) [J/K]
Temperature of element [K|degC]
der(Temperature of element) [K/s]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate from solid -> fluid [W]
= solid.T - fluid.T [K,]
Heat flow rate from solid -> fluid [W]
= solid.T - fluid.T [K,]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Lewis number (around 1 for water vapor in air)
Exponent in bondary layer ratio, delta/delta_t = Pr^n
Get the pressure from the input connector [:#(type=Boolean)]
Fixed value of pressure [Pa|bar]
Species concentration at dry bulb temperature
Water vapor pressure [Pa|Pa]
Water mass fraction per mass of dry air [1]
Gain value multiplied with input signal [1]
Output signal connector
Connector of Real input signal 1
Connector of Real input signal 2
Constant output value
Gain of upper input
Gain of lower input
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid volume [J/(kg.K)]
[J/(kg.K)]
Heat flow rate (positive if flowing from outside into the component) [W]

Connector of Real input signal 1
Value of Real output
Gain value multiplied with input signal [1]
= false to simplify equations, assuming, but not enforcing, no flow reversal for medium 1 [:#(type=Boolean)]
= false to simplify equations, assuming, but not enforcing, no flow reversal for medium 2 [:#(type=Boolean)]
Thermodynamic pressure in the connection point [Pa|bar]
Nominal mass flow rate [kg/s]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a1 and port_b1 [Pa|Pa]
Pressure difference between port_a2 and port_b2 [Pa|Pa]
Temperature of medium [K|degC]
Temperature of medium [K|degC]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
=true, compute flow resistance. Set to false to assume no friction [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure difference [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Fraction of nominal flow rate where flow transitions to laminar
=true, compute flow resistance. Set to false to assume no friction [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure difference [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Fraction of nominal flow rate where flow transitions to laminar
Time constant at nominal flow [s]
Time constant at nominal flow [s]
= true, use homotopy method [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of mass fractions m_i/m [kg/kg]
Heat flow rate into medium 1 [W]
Heat flow rate into medium 2 [W]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= false to simplify equations, assuming, but not enforcing, no flow reversal. Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= false to simplify equations, assuming, but not enforcing, no flow reversal. Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Thermodynamic pressure in the connection point [Pa|bar]
Thermodynamic pressure in the connection point [Pa|bar]
Pressure of the fluid [Pa|bar]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Water flow rate added into the medium [kg/s]
Vector with zero everywhere except where species is
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Fraction of nominal mass flow rate where transition to turbulent occurs
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
Precomputed coefficient to avoid division by parameter
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Thermodynamic pressure in the connection point [Pa|bar]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Fraction of nominal mass flow rate where transition to turbulent occurs
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
Precomputed coefficient to avoid division by parameter
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid volume [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid volume [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Start value for outflowing enthalpy [J/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Start value for outflowing enthalpy [J/kg]
Set to true to initialize the pressure of volume 1 [:#(type=Boolean)]
Set to true to initialize the pressure of volume 2 [:#(type=Boolean)]
Thermal conductance at nominal flow, used to compute time constant [W/K]
Time constant of metal at nominal UA value [s]
Heat capacity of metal (= cp*m) [J/K]
Heat capacity of element (= cp*m) [J/K]
Temperature of element [K|degC]
der(Temperature of element) [K/s]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate from solid -> fluid [W]
= solid.T - fluid.T [K,]
Heat flow rate from solid -> fluid [W]
= solid.T - fluid.T [K,]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Lewis number (around 1 for water vapor in air)
Exponent in bondary layer ratio, delta/delta_t = Pr^n
Get the pressure from the input connector [:#(type=Boolean)]
Fixed value of pressure [Pa|bar]
Species concentration at dry bulb temperature
Water vapor pressure [Pa|Pa]
Water mass fraction per mass of dry air [1]
Gain value multiplied with input signal [1]
Output signal connector
Connector of Real input signal 1
Connector of Real input signal 2
Constant output value
Gain of upper input
Gain of lower input
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid volume [J/(kg.K)]
[J/(kg.K)]
Heat flow rate (positive if flowing from outside into the component) [W]

Connector of Real input signal 1
Value of Real output
Gain value multiplied with input signal [1]
Number of outputs [:#(type=Integer)]
Number of outputs [:#(type=Integer)]
Value of Real output
Value of Real output
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Sensible heat input into air stream (negative if air is cooled) [W]
Latent heat input into air (negative if air is dehumidified) [W]
Sensible to total heat ratio [1]
Water flow rate [kg/s]
Number of ports [:#(type=Integer)]
Set to true to stop the simulation with an error if the medium temperature is outside its allowable range [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Allowed flow direction [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Needed to connect to conditional connector [kg/kg]
Get the pressure from the input connector [:#(type=Boolean)]
Fixed value of pressure [Pa|Pa]
Get the temperature from the input connector [:#(type=Boolean)]
Fixed value of temperature [K|degC]
Get the composition (all fractions) from the input connector [:#(type=Boolean)]
Get the composition (independent fractions) from the input connector [:#(type=Boolean)]
Get the trace substances from the input connector [:#(type=Boolean)]
Fixed value of composition [kg/kg]
Number of ports [:#(type=Integer)]
Set to true to stop the simulation with an error if the medium temperature is outside its allowable range [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Allowed flow direction [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Needed to connect to conditional connector [kg/kg]
Get the pressure from the input connector [:#(type=Boolean)]
Fixed value of pressure [Pa|Pa]
Get the temperature from the input connector [:#(type=Boolean)]
Fixed value of temperature [K|degC]
Get the composition (all fractions) from the input connector [:#(type=Boolean)]
Get the composition (independent fractions) from the input connector [:#(type=Boolean)]
Get the trace substances from the input connector [:#(type=Boolean)]
Fixed value of composition [kg/kg]
Constant output value
Number of inputs (= number of outputs) [:#(type=Integer)]
Connector of Real input signals
Connector of Real output signals
= true, if table is defined on file or in function usertab [:#(type=Boolean)]
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
= true, if info message that file is loading is to be printed [:#(type=Boolean)]
Columns of table to be interpolated [:#(type=Integer)]
Smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
[:#(type=Integer)]
= 1, if table was successfully read from file
Constant output value
Gain value multiplied with input signal [1]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
Thermodynamic pressure in the connection point [Pa|bar]
Mass flow rate from the connection point into the component [kg/s]
Time constant at nominal flow for dynamic energy and momentum balance [s]
Nominal mass flow rate for dynamic momentum and energy balance [kg/s]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Flow direction for port_1 [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Flow direction for port_2 [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Flow direction for port_3 [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
=true, to assert that the flow does not reverse when portFlowDirection_* does not equal Bidirectional [:#(type=Boolean)]
Small mass flow rate for checking flow reversal [kg/s]
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Selection of flow coefficient [:#(type=AixLib.Fluid.Types.CvTypes)]
Kv (metric) flow coefficient [m3/h/(bar)^(1/2)] []
Cv (US) flow coefficient [USG/min/(psi)^(1/2)] []
Av (metric) flow coefficient [m2]
Fraction of nominal flow rate where linearization starts, if y=1
Nominal pressure drop of fully open valve, used if CvData=AixLib.Fluid.Types.CvTypes.OpPoint [Pa|Pa]
Inlet density for which valve coefficients are defined [kg/m3|g/cm3]
Flow coefficient for fully open valve in SI units, Kv=m_flow/sqrt(dp) [kg/s/(Pa)^(1/2)] []
= true, if opening is filtered with a 2nd order CriticalDamping filter [:#(type=Boolean)]
Rise time of the filter (time to reach 99.6 % of an opening step) [s]
Order of filter [:#(type=Integer)]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial value of output
Pressure drop of pipe and other resistances that are in series [Pa|Pa]
Valve leakage, l=Kv(y=0)/Kv(y=1)
Ratio actual to nominal mass flow rate of valve, phi=Kv(y)/Kv(y=1)
Flow coefficient of fixed resistance that may be in series with valve, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2).
Flow coefficient of valve, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2).
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
Used to satisfy replaceable models [:#(type=Boolean)]
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Selection of flow coefficient [:#(type=AixLib.Fluid.Types.CvTypes)]
Kv (metric) flow coefficient [m3/h/(bar)^(1/2)] []
Cv (US) flow coefficient [USG/min/(psi)^(1/2)] []
Av (metric) flow coefficient [m2]
Fraction of nominal flow rate where linearization starts, if y=1
Nominal pressure drop of fully open valve, used if CvData=AixLib.Fluid.Types.CvTypes.OpPoint [Pa|Pa]
Inlet density for which valve coefficients are defined [kg/m3|g/cm3]
Flow coefficient for fully open valve in SI units, Kv=m_flow/sqrt(dp) [kg/s/(Pa)^(1/2)] []
= true, if opening is filtered with a 2nd order CriticalDamping filter [:#(type=Boolean)]
Rise time of the filter (time to reach 99.6 % of an opening step) [s]
Order of filter [:#(type=Integer)]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial value of output
Actuator position (0: closed, 1: open)
Pressure drop of pipe and other resistances that are in series [Pa|Pa]
Valve leakage, l=Kv(y=0)/Kv(y=1)
Ratio actual to nominal mass flow rate of valve, phi=Kv(y)/Kv(y=1)
Flow coefficient of fixed resistance that may be in series with valve, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2).
Flow coefficient of valve, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2).
Boolean flag used to remove conditional components [:#(type=Boolean)]
= true, if opening is filtered with a 2nd order CriticalDamping filter [:#(type=Boolean)]
Rise time of the filter (time to reach 99.6 % of an opening step) [s]
Order of filter [:#(type=Integer)]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial value of output
Actual valve position
Analog filter characteristics (CriticalDamping/Bessel/Butterworth/ChebyshevI) [:#(type=Modelica.Blocks.Types.AnalogFilter)]
Type of filter (LowPass/HighPass/BandPass/BandStop) [:#(type=Modelica.Blocks.Types.FilterType)]
Order of filter [:#(type=Integer)]
Cut-off frequency [Hz]
Gain (= amplitude of frequency response at zero frequency)
Pass band ripple for Chebyshev filter (otherwise not used); > 0 required [dB]
Band of band pass/stop filter is f_min (A=-3db*gain) .. f_cut (A=-3db*gain) [Hz]
= true, if amplitude at f_cut = -3db, otherwise unmodified filter [:#(type=Boolean)]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
[:#(type=Integer)]
Initial or guess values of states
Initial or guess values of states
Initial value of output
Nominal value of input (used for scaling the states)
Filter states
der(Filter states)
Filter states
der(Filter states)
[:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]





Selection of flow coefficient [:#(type=AixLib.Fluid.Types.CvTypes)]
Kv (metric) flow coefficient [m3/h/(bar)^(1/2)] []
Cv (US) flow coefficient [USG/min/(psi)^(1/2)] []
Av (metric) flow coefficient [m2]
Fraction of nominal flow rate where linearization starts, if y=1
Nominal mass flow rate [kg/s]
Nominal pressure drop of fully open valve, used if CvData=AixLib.Fluid.Types.CvTypes.OpPoint [Pa|Pa]
Inlet density for which valve coefficients are defined [kg/m3|g/cm3]
Flow coefficient for fully open valve in SI units, Kv=m_flow/sqrt(dp) [kg/s/(Pa)^(1/2)] []
Nominal pressure drop of pipes and other equipment in flow legs at port_1 and port_3 [Pa|Pa]
Nominal pressure drop of pipes and other equipment in flow legs at port_1 and port_3 [Pa|Pa]
Fraction Kv(port_3&rarr;port_2)/Kv(port_1&rarr;port_2)
Valve leakage, l=Kv(y=0)/Kv(y=1)
Valve leakage, l=Kv(y=0)/Kv(y=1)
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
= true, use homotopy method [:#(type=Boolean)]

Constant output value
Connector of Real output signal
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Use power data instead of motor efficiency [:#(type=Boolean)]
Volumetric flow rate at user-selected operating points [m3/s]
Fan or pump efficiency at these flow rates [1]
Volumetric flow rate at user-selected operating points [m3/s]
Fan or pump efficiency at these flow rates [1]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump electrical power at these flow rates [W]
If true, then motor heat is added to fluid stream [:#(type=Boolean)]
Nominal rotational speed for flow characteristic [1]
Normalized speed set point, used if inputType = AixLib.Fluid.Types.InputType.Constant [1]
Vector of normalized speed set points, used if inputType = AixLib.Fluid.Types.InputType.Stages [1]
Nominal rotational speed for flow characteristic [rev/min]
Speed set point, used if inputType = AixLib.Fluid.Types.InputType.Constant [rev/min]
Vector of speed set points, used if inputType = AixLib.Fluid.Types.InputType.Stages [rev/min]
= true, if default record values are being used [:#(type=Boolean)]
Control input type [:#(type=AixLib.Fluid.Types.InputType)]
Constant input set point [Pa]
Vector of input set points corresponding to stages [Pa]
= true, compute power exactly, using similarity laws. Otherwise approximate. [:#(type=Boolean)]
Set to false to avoid any power (=heat and flow work) being added to medium (may give simpler equations) [:#(type=Boolean)]
Set to true to avoid warning if m_flow_nominal and dp_nominal are used to construct the default pressure curve [:#(type=Boolean)]
Time constant of fluid volume for nominal flow, used if energy or mass balance is dynamic [s]
= true, if speed is filtered with a 2nd order CriticalDamping filter [:#(type=Boolean)]
Rise time of the filter (time to reach 99.6 % of the speed) [s]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial value of speed [1]
Actual normalised pump speed that is used for computations [1]
Electrical power consumed [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Volume flow rate [m3/s]
Pressure difference [Pa|Pa]
Global efficiency [1]
Hydraulic efficiency [1]
Motor efficiency [1]
Start value for VMachine_flow, used to avoid a warning if not specified [m3/s]
Type of prescribed variable [:#(type=AixLib.Fluid.Movers.BaseClasses.Types.PrescribedVariable)]
Parameter that is true if speed is the controlled variables [:#(type=Boolean)]
Number of data points for pressure curve [:#(type=Integer)]
Flag, true if user specified data that contain V_flow_max [:#(type=Boolean)]
Maximum volume flow rate, used for smoothing [m3/s]
Default medium density [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Start value for outflowing enthalpy [J/kg]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= false to simplify equations, assuming, but not enforcing, no flow reversal. Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Heat flow rate (positive if flowing from outside into the component) [W]
Time constant at nominal flow [s]
Volume of delay element [m3]
Analog filter characteristics (CriticalDamping/Bessel/Butterworth/ChebyshevI) [:#(type=Modelica.Blocks.Types.AnalogFilter)]
Type of filter (LowPass/HighPass/BandPass/BandStop) [:#(type=Modelica.Blocks.Types.FilterType)]
Order of filter [:#(type=Integer)]
Cut-off frequency [Hz]
Gain (= amplitude of frequency response at zero frequency)
Pass band ripple for Chebyshev filter (otherwise not used); > 0 required [dB]
Band of band pass/stop filter is f_min (A=-3db*gain) .. f_cut (A=-3db*gain) [Hz]
= true, if amplitude at f_cut = -3db, otherwise unmodified filter [:#(type=Boolean)]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
[:#(type=Integer)]
Initial or guess values of states
Initial or guess values of states
Initial value of output
Nominal value of input (used for scaling the states)
Filter states
der(Filter states)
Filter states
der(Filter states)
[:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]





= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Guess value of dp = port_a.p - port_b.p [Pa|Pa]
Guess value of m_flow = port_a.m_flow [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if temperatures at port_a and port_b are computed [:#(type=Boolean)]
= true, if volume flow rate at inflowing port is computed [:#(type=Boolean)]
Volume flow rate at inflowing port (positive when flow from port_a to port_b) [m3/s]
if true, then the mass flow rate is equal to the value of m_flow_in [:#(type=Boolean)]
if true, then the head is equal to the value of dp_in [:#(type=Boolean)]
Needed to connect to conditional connector [kg/s]
= true, use homotopy method [:#(type=Boolean)]
Flag, true if the motor is cooled by the fluid stream [:#(type=Boolean)]
Factor used for setting heat input into medium to zero at very small flows [m3/s]
Heat input from fan or pump to medium [W]
Hydraulic power input (converted to flow work and heat) [W]
Heat input from fan or pump to medium [W]
Gain of upper input
Gain of lower input
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Value of Real output
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate, used for regularization near zero flow [kg/s]
For bi-directional flow, temperature is regularized in the region |m_flow| < m_flow_small (m_flow_small > 0 required) [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Use power data instead of motor efficiency [:#(type=Boolean)]
Volumetric flow rate at user-selected operating points [m3/s]
Fan or pump efficiency at these flow rates [1]
Volumetric flow rate at user-selected operating points [m3/s]
Fan or pump efficiency at these flow rates [1]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump electrical power at these flow rates [W]
If true, then motor heat is added to fluid stream [:#(type=Boolean)]
Nominal rotational speed for flow characteristic [1]
Normalized speed set point, used if inputType = AixLib.Fluid.Types.InputType.Constant [1]
Vector of normalized speed set points, used if inputType = AixLib.Fluid.Types.InputType.Stages [1]
Nominal rotational speed for flow characteristic [rev/min]
Speed set point, used if inputType = AixLib.Fluid.Types.InputType.Constant [rev/min]
Vector of speed set points, used if inputType = AixLib.Fluid.Types.InputType.Stages [rev/min]
= true, if default record values are being used [:#(type=Boolean)]
Type of prescribed variable [:#(type=AixLib.Fluid.Movers.BaseClasses.Types.PrescribedVariable)]
= true, compute power exactly, using similarity laws. Otherwise approximate. [:#(type=Boolean)]
Nominal volume flow rate, used for homotopy [m3/s]
Fluid density at medium default state [kg/m3|g/cm3]
Flag, true if user specified data that contain V_flow_max [:#(type=Boolean)]
Maximum volume flow rate, used for smoothing [m3/s]
Number of data points for pressure curve [:#(type=Integer)]
= true, use homotopy method [:#(type=Boolean)]
Mover speed (prescribed or computed) [1]
Medium density [kg/m3]
Flow work [W]
Ratio N_actual/N_nominal [1]
Ratio V_flow/V_flow_max [1]
True if speed is a prescribed variable of this block [:#(type=Boolean)]
True if pressure head is a prescribed variable of this block [:#(type=Boolean)]
Coefficients for polynomial of motor efficiency vs. volume flow rate
Coefficients for polynomial of hydraulic efficiency vs. volume flow rate
Maximum head [Pa|Pa]
Small value used to for regularization and to approximate an internal flow resistance of the fan
Coefficient for internal pressure drop of fan or pump [kg/(s.m4)]
Flag, used to pick the right representatio of the fan or pump pressure curve [:#(type=Integer)]
Number of elements in each array [:#(type=Integer)]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Number of elements in each array [:#(type=Integer)]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Number of elements in each array [:#(type=Integer)]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Coefficients for polynomial of power vs. flow rate
Flag used for reporting [:#(type=Boolean)]
Flag, true if user specified data that contain dpMax [:#(type=Boolean)]
Initial value of pressure raise [Pa|Pa]
Nominal pressure raise, used to normalized the filter if use_inputFilter=true,        to set default values of constantHead and heads, and        and for default pressure curve if not specified in record per [Pa|Pa]
Constant pump head, used when inputType=Constant [Pa|Pa]
Vector of head set points, used when inputType=Stages [Pa|Pa]
=true, to control mover such that pressure difference is obtained across two remote points in system [:#(type=Boolean)]
Pressure difference between the mover inlet and outlet [Pa]
Gain value multiplied with input signal [1]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero. Used only if Medium.nX > 1 [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
If true, then port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero, and equations are simplified [:#(type=Boolean)]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero. Used only if Medium.nX > 1 [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Thermodynamic pressure in the connection point [Pa|bar]
Thermodynamic pressure in the connection point [Pa|bar]
Absolute pressure of medium [Pa|bar]
Density of medium [kg/m3|g/cm3]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
Absolute pressure of medium [Pa|bar]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Molar masses of components [kg/mol]
Molar masses of components [kg/mol]
Mass fraction of air [kg/kg]
Temperature difference used to compute enthalpy [K,]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Masses of independent components in the fluid [kg]
der(Masses of independent components in the fluid) [kg/s]
Mass flows across boundaries [kg/s]
Substance mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
[kg/s]
[kg/s]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid mass [kg/m3|g/cm3]
Vector with zero everywhere except where species is
Start value for specific enthalpy [J/kg]
If true, then port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero, and equations are simplified [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero. Used only if Medium.nX > 1 [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
If true, then port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero, and equations are simplified [:#(type=Boolean)]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero. Used only if Medium.nX > 1 [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Thermodynamic pressure in the connection point [Pa|bar]
Thermodynamic pressure in the connection point [Pa|bar]
Absolute pressure of medium [Pa|bar]
Density of medium [kg/m3|g/cm3]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
Absolute pressure of medium [Pa|bar]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Molar masses of components [kg/mol]
Molar masses of components [kg/mol]
Mass fraction of air [kg/kg]
Temperature difference used to compute enthalpy [K,]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Masses of independent components in the fluid [kg]
der(Masses of independent components in the fluid) [kg/s]
Mass flows across boundaries [kg/s]
Substance mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
[kg/s]
[kg/s]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid mass [kg/m3|g/cm3]
Vector with zero everywhere except where species is
Start value for specific enthalpy [J/kg]
If true, then port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero, and equations are simplified [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero. Used only if Medium.nX > 1 [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
If true, then port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero, and equations are simplified [:#(type=Boolean)]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero. Used only if Medium.nX > 1 [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Thermodynamic pressure in the connection point [Pa|bar]
Thermodynamic pressure in the connection point [Pa|bar]
Absolute pressure of medium [Pa|bar]
Density of medium [kg/m3|g/cm3]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
Absolute pressure of medium [Pa|bar]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Molar masses of components [kg/mol]
Molar masses of components [kg/mol]
Mass fraction of air [kg/kg]
Temperature difference used to compute enthalpy [K,]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Masses of independent components in the fluid [kg]
der(Masses of independent components in the fluid) [kg/s]
Mass flows across boundaries [kg/s]
Substance mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
[kg/s]
[kg/s]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid mass [kg/m3|g/cm3]
Vector with zero everywhere except where species is
Start value for specific enthalpy [J/kg]
If true, then port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero, and equations are simplified [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero. Used only if Medium.nX > 1 [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
If true, then port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero, and equations are simplified [:#(type=Boolean)]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero. Used only if Medium.nX > 1 [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Thermodynamic pressure in the connection point [Pa|bar]
Thermodynamic pressure in the connection point [Pa|bar]
Absolute pressure of medium [Pa|bar]
Density of medium [kg/m3|g/cm3]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
Absolute pressure of medium [Pa|bar]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Molar masses of components [kg/mol]
Molar masses of components [kg/mol]
Mass fraction of air [kg/kg]
Temperature difference used to compute enthalpy [K,]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Masses of independent components in the fluid [kg]
der(Masses of independent components in the fluid) [kg/s]
Mass flows across boundaries [kg/s]
Substance mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
[kg/s]
[kg/s]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid mass [kg/m3|g/cm3]
Vector with zero everywhere except where species is
Start value for specific enthalpy [J/kg]
If true, then port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero, and equations are simplified [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= false to simplify equations, assuming, but not enforcing, no flow reversal. Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Temperature of the fluid [K|degC]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow from port_a to port_b as output signal [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Heat flow rate (positive if flowing from outside into the component) [W]
Time constant at nominal flow [s]
Volume of delay element [m3]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero. Used only if Medium.nX > 1 [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
If true, then port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero, and equations are simplified [:#(type=Boolean)]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero. Used only if Medium.nX > 1 [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Sensible plus latent heat flow rate transferred into the medium [W]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
If true, then port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero, and equations are simplified [:#(type=Boolean)]
Needed to connect to conditional connector [kg/s]

